syntax = "proto3";
package io.clbs.openhes.pbdataproxy;

option go_package = "github.com/cybroslabs/hes-2-apis/protobuf/pbdataproxy";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "pbtaskmaster-models.proto";
import "pbdriver-models.proto";

// RestApi -> DataProxy
message CreateBulkRequest {
    BulkSpec spec = 1;  // The bulk-job spec.
}

// Sub-message - holds the bulk job specification.
message BulkSpec {
    string bulk_id                          = 1;  // The bulk identifier.
    string correlation_id                   = 2;  // The correlation identifier, e.g. to define relation to non-homogenous group.
    string org_id                           = 3;  // The organization identifier.
    string driver_type                      = 4;  // The device (driver) type.
    repeated pbtaskmaster.JobDevice devices = 5;  // The list of devices in the bulk.
    pbdriver.JobSettings settings           = 6;  // The bulk-shared job settings.
    repeated pbdriver.JobAction job_actions = 7;  // The list actions to be executed.
    optional string webhook_url             = 8;  // The webhook URL to call when the bulk is completed.
    string user_id                          = 9;  // The user identifier.
}

// Bulk statuses
enum BulkStatusCode {
    // The job is waiting in the queue
    BULK_STATUS_QUEUED = 0;
    // The job is running
    BULK_STATUS_RUNNING = 1;
    // The job is completed
    BULK_STATUS_COMPLETED = 2;
    // The job is cancelled
    BULK_STATUS_CANCELLED = 3;
    // The job has expired
    BULK_STATUS_EXPIRED = 4;
}

// Sub-message - holds the bulk job status.
message BulkStatus {
    BulkStatusCode status       = 1;  // The job status.
    repeated BulkJobStatus jobs = 2;  // The list of job statuses.
}

message BulkJobStatus {
    string job_id                 = 1;  // The job identifier.
    pbtaskmaster.JobStatus status = 2;  // The job status.
}

// DataProxy -> RestApi - the message holds the bulk info and it's status.
message GetBulkResponse {
    BulkSpec spec     = 1;  // The bulk-job spec.
    BulkStatus status = 2;  // The bulk-job status/data.
}

// RestApi -> DataProxy - the message holds data for bulk listing request.
message GetBulksReuqest {
    optional google.protobuf.Timestamp tfrom = 1;  // The time range filter - left limit. Optional.
    optional google.protobuf.Timestamp tto   = 2;  // The time range filter - right limit. Optional.
    optional bool include_data               = 3;  // The result content filter - if true then data are included in the response.
    // TODO: Add Device-Id filter here.
}

// DataProxy -> RestApi - the message holds list of bulks.
message GetBulksResponse {
    repeated GetBulkResponse bulks = 1;  // The list of bulk jobs related to the original request.
}

// RestApi -> DataProxt - the message holds single bulk request.
message GetBulkRequest {
    string bulk_id = 1;  // The bulk identifier to be retrieved.
}

// RestApi -> DataProxy - request to get the job status.
message GetJobStatusRequest {
    string job_id = 1;  // The job identifier.
}

// DataProxy -> RestApi - the message holds the job status.
message GetJobStatusResponse {
    pbtaskmaster.JobStatus status = 1;  // The status of the job
}
