// Editions version of proto3 file
edition = "2023";
package io.clbs.openhes.pbtaskmaster;

option go_package = "github.com/cybroslabs/hes-2-apis/protobuf/pbtaskmastermodels";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "pbdriver-models.proto";

// Taskmaster -> Dataproxy event message
message StreamEventsData {
    oneof data {
        StreamEventsDataJobFinished job_done = 1;
    }
}

// Sub-message - job-finished event data
message StreamEventsDataJobFinished {
    string job_id = 1;
}

// Driver -> Taskmaster cache set request message
message CacheSetRequest {
    string key                    = 1;  // The key of the cache entry. The key is unique within the driver type.
    pbdriver.AttributeValue value = 2;  // The value of the cache entry.
}

// Driver -> Taskmaster cache get request message
message CacheGetRequest {
    string key = 1;  // The key of the cache entry. The key is unique within the driver type.
}

// Taskmaster -> Driver cache get response message
message CacheGetResponse {
    pbdriver.AttributeValue value = 2;  // The value of the cache entry.
}

// API -> Taskmaster cancel job request message
message CancelJobsRequest {
    repeated string job_id = 1;  // The job identifier.
}

// API -> Taskmaster queue jobs request message
message QueueJobsRequest {
    repeated JobSpec spec = 1;  // The list of jobs to be queued.
}

// Sub-message - job specification
message JobSpec {
    JobDevice device                        = 2;  // The device info.
    pbdriver.JobSettings job_settings       = 3;  // The job parameters.
    string driver_type                      = 4;  // The device (driver) type.
    repeated pbdriver.JobAction job_actions = 5;  // The list actions to be executed.
}

// Sub-message representing a single device info.
message JobDevice {
    string id                                              = 1;  // The device (job) identifier.
    string device_id                                       = 2;  // The device identifier. If set then all below is loaded from the device registry.
    string external_id                                     = 3;  // The external identifier.
    map<string, pbdriver.AttributeValue> device_attributes = 4;  // The connection attributes to the device.
    repeated pbdriver.ConnectionInfo connection_info       = 5;  // The conenction (device) parameters.
    pbdriver.ApplicationProtocol app_protocol              = 6;  // The application protocol.
    string timezone                                        = 7;  // The timezone related to the device, e.g. "America/New_York", "Europe/Prague", "CET", "GMT", "Etc/GMT+2".
}

// Dataproxy -> Taskmaster get job request message
message GetJobRequest {
    string job_id = 1;  // The job identifier.
}

// Taskmaster -> API get job response message
message GetJobResponse {
    JobStatus status = 1;  // The status of the job
}

// Message used to notify DP that the job is done, sent by Taskmaster
message JobDoneNotification {
    JobSpec spec = 1;  // The job specification.
    JobStatus status = 2;  // The status of the job
}


// Sub-message containing job status info
message JobStatus {
    JobStatusCode status                  = 1;  // The status of the job.
    pbdriver.JobErrorCode code            = 2;  // The error code of the job.
    repeated ActionResult results         = 3;  // The result data for all job actions.
    google.protobuf.Timestamp created_at  = 4;  // The creation timestamp of the job.
    google.protobuf.Timestamp started_at  = 5;  // The start timestamp of the job.
    google.protobuf.Timestamp finished_at = 6;  // The finish timestamp of the job.
    int32 attempts_done                   = 7;  // The number of attempts already done.
}

// Job statuses
enum JobStatusCode {
    // The job is waiting in the queue
    JOB_STATUS_QUEUED = 0;
    // The job is running
    JOB_STATUS_RUNNING = 1;
    // The job is completed
    JOB_STATUS_COMPLETED = 2;
    // The job is failed
    JOB_STATUS_FAILED = 3;
    // The job is cancelled
    JOB_STATUS_CANCELLED = 4;
    // The job has expired
    JOB_STATUS_EXPIRED = 5;
}

// Sub-message containing action result for a single action.
message ActionResult {
    string action_id                 = 1;  // The action identifier.
    pbdriver.ActionResultCode status = 2;  // The status of the action.
    pbdriver.ActionData data         = 3;  // The action result data.
}

// API <-> Taskmaster request/response for system configuration
message SystemConfig {
    int32 max_replicas             = 1;  // The maximum number of replicas for the driver.
    int32 max_cascade_device_count = 2;  // The maximum number of cascade devices for the driver.
}

// Taskmaster -> Dataproxy job/action progress update message
message JobEventData {
    bytes job_id = 1;  // The job identifier.
}
