// Editions version of proto3 file
edition = "2023";
package io.clbs.openhes.pbapi;

option go_package = "github.com/cybroslabs/hes-2-apis/protobuf/pbapi";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "pbtaskmaster-models.proto";
import "pbdriver-models.proto";
import "pbdataproxy-models.proto";
import "pbdriveroperator-models.proto";
import "pbdeviceregistry-models.proto";

// The Dataproxy related service definition.
service ApiService {
    // @group: Bulks
    // @tag: acquisition
    // @tag: action
    // Starts a new bulk of jobs.
    rpc CreateBulk(PublicCreateBulkRequest) returns (google.protobuf.Empty);
    // @group: Bulks
    // Retrieves the list of bulks.
    rpc GetBulks(pbdataproxy.GetBulksReuqest) returns (pbdataproxy.GetBulksResponse);
    // @group: Bulks
    // Retrieves the bulk info and status.
    rpc GetBulk(pbdataproxy.GetBulkRequest) returns (pbdataproxy.GetBulkResponse);
    // @group: Bulks
    // Retrieves the job status.
    rpc GetJobStatus(pbdataproxy.GetJobStatusRequest) returns (pbdataproxy.GetJobStatusResponse);
    // @group: Bulks
    // Cancels the bulk of jobs.
    rpc CancelBulk(google.protobuf.StringValue) returns (google.protobuf.Empty);
    // @group: Bulks
    // Cancels the job(s) identified by the job identifier(s).
    rpc CancelJobs(pbtaskmaster.CancelJobsRequest) returns (google.protobuf.Empty);

    // @group: Driver Info
    // Retrieves the list of drivers.
    rpc GetDrivers(google.protobuf.Empty) returns (pbdriveroperator.GetDriversResponse);
    // @group: Driver Info
    // Retrieves the driver templates.
    rpc GetDriverTemplates(google.protobuf.StringValue) returns (pbdriver.DriverTemplates);

    // @group: Devices
    // @tag: communicationunit
    // The method called by the RestAPI to register a new communication unit. The parameter contains the communication unit specification.
    rpc CreateCommunicationUnit(pbdeviceregistry.CreateCommunicationUnitRequest) returns (google.protobuf.Empty);
    // @group: Devices
    // @tag: communicationunit
    // The method called by the RestAPI to get the information about the communication unit. The parameter contains the search criteria.
    rpc GetCommunicationUnits(pbdeviceregistry.GetCommunicationUnitsRequest) returns (pbdeviceregistry.GetCommunicationUnitsResponse);

    // @group: Devices
    // @tag: device
    // The method called by the RestAPI to register a new device. The parameter contains the device specification.
    rpc CreateDevice(pbdeviceregistry.CreateDeviceRequest) returns (google.protobuf.Empty);
    // @group: Devices
    // @tag: device
    // The method called by the RestAPI to get the information about the device. The parameter contains the search criteria.
    rpc GetDevices(pbdeviceregistry.GetDevicesRequest) returns (pbdeviceregistry.GetDevicesResponse);
    // @group: Devices
    // @tag: device
    // The method called by the RestAPI to replace ordered set of linked communication units.
    rpc SetDeviceCommunicationUnits(pbdeviceregistry.SetDeviceCommunicationUnitsRequest) returns (google.protobuf.Empty);
    // @group: Devices
    // @tag: device
    // The method called by the RestAPI to get communication units definitions linked to the device(s).
    rpc GetDevicesCommunicationUnits(pbdeviceregistry.GetDevicesCommunicationUnitsRequest) returns (pbdeviceregistry.GetDevicesCommunicationUnitsResponse);

    // @group: Devices
    // @tag: devicegroup
    // The method called by the RestAPI to create a new device group. The parameter contains the device group specification.
    rpc CreateDeviceGroup(pbdeviceregistry.CreateDeviceGroupRequest) returns (google.protobuf.Empty);
    // @group: Devices
    // @tag: devicegroup
    // The method returns a list of device groups.
    rpc GetDeviceGroups(google.protobuf.Empty) returns (pbdeviceregistry.GetDeviceGroupsResponse);
    // @group: Devices
    // @tag: devicegroup
    // The method returns single device group.
    // @param The device group identifier.
    // @return The device group specification.
    rpc GetDeviceGroup(google.protobuf.StringValue) returns (pbdeviceregistry.GetDeviceGroupResponse);
    // @group: Devices
    // @tag: devicegroup
    // The method called by the RestAPI to add a new device to the device group. The parameter contains the device group specification.
    rpc AddDevicesToGroup(pbdeviceregistry.AddDevicesToGroupRequest) returns (google.protobuf.Empty);
    // @group: Devices
    // @tag: devicegroup
    // The method called by the RestAPI to remove a device from the device group. The parameter contains the device group specification.
    rpc RemoveDevicesFromGroup(pbdeviceregistry.RemoveDevicesFromGroupRequest) returns (google.protobuf.Empty);

    // @group: Devices
    // @tag: modempool
    // The method to get list of the modem pools.
    rpc GetModemPools(google.protobuf.Empty) returns (pbdeviceregistry.GetModemPoolsResponse);
    // @group: Devices
    // @tag: modempool
    // The method to get the information about the modem pool. The method returns the modem pool information.
    rpc GetModemPool(google.protobuf.StringValue) returns (pbdeviceregistry.GetModemPoolResponse);
    // @group: Devices
    // @tag: modempool
    // The method to create a new modem pool.
    rpc CreateModemPool(pbdeviceregistry.SetModemPoolRequest) returns (google.protobuf.Empty);
    // @group: Devices
    // @tag: modempool
    // The method to update the modem pool.
    rpc UpdateModemPool(pbdeviceregistry.SetModemPoolRequest) returns (google.protobuf.Empty);
    // @group: Devices
    // @tag: modempool
    // The method to delete the modem pool.
    rpc DeleteModemPool(google.protobuf.StringValue) returns (google.protobuf.Empty);
    // @group: Devices
    // @tag: modem
    // The method to create a new modem within the pool.
    rpc CreateModem(pbdeviceregistry.SetModemRequest) returns (google.protobuf.Empty);
    // @group: Devices
    // @tag: modem
    // The method to update the modem within the pool.
    rpc UpdateModem(pbdeviceregistry.SetModemRequest) returns (google.protobuf.Empty);
    // @group: Devices
    // @tag: modem
    // The method to delete the modem within the pool.
    rpc DeleteModem(google.protobuf.StringValue) returns (google.protobuf.Empty);
}

message PublicCreateBulkRequest {
    // @gqltype: UUID
    string id             = 1;  // The bulk identifier.
    string correlation_id = 2;  // The correlation identifier, e.g. to define relation to non-homogenous group.
    string driver_type    = 3;  // The device (driver) type.
    oneof device {
        JobDeviceList devices              = 4;  // The list of devices in the bulk.
        JobCustomDeviceList custom_devices = 5;  // The list of custom devices in the bulk.
    }
    pbdriver.JobSettings settings       = 6;  // The bulk-shared job settings.
    repeated pbdriver.JobAction actions = 7;  // The list actions to be executed.
    string webhook_url                  = 8;  // The webhook URL to call when the bulk is completed.
}

message JobCustomDeviceList {
    repeated pbtaskmaster.JobDevice list = 5;  // The list of devices in the bulk.
}

message JobDeviceList {
    repeated JobDevice list = 5;  // The list of devices in the bulk.
}

message JobDevice {
    string id        = 1;  // The device's job identifier within the parent bulk.
    string device_id = 2;  // The device identifier.
}
