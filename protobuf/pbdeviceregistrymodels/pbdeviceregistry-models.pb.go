// Editions version of proto3 file

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v5.29.2
// source: pbdeviceregistry-models.proto

package pbdeviceregistrymodels

import (
	pbdrivermodels "github.com/cybroslabs/hes-2-apis/protobuf/pbdrivermodels"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RestApi -> DriverRegistry - The communication unit specification.
type CreateCommunicationUnitRequest struct {
	state           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Spec *CommunicationUnitSpec `protobuf:"bytes,1,opt,name=spec" json:"spec,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateCommunicationUnitRequest) Reset() {
	*x = CreateCommunicationUnitRequest{}
	mi := &file_pbdeviceregistry_models_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommunicationUnitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommunicationUnitRequest) ProtoMessage() {}

func (x *CreateCommunicationUnitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pbdeviceregistry_models_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateCommunicationUnitRequest) GetSpec() *CommunicationUnitSpec {
	if x != nil {
		return x.xxx_hidden_Spec
	}
	return nil
}

func (x *CreateCommunicationUnitRequest) SetSpec(v *CommunicationUnitSpec) {
	x.xxx_hidden_Spec = v
}

func (x *CreateCommunicationUnitRequest) HasSpec() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Spec != nil
}

func (x *CreateCommunicationUnitRequest) ClearSpec() {
	x.xxx_hidden_Spec = nil
}

type CreateCommunicationUnitRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Spec *CommunicationUnitSpec
}

func (b0 CreateCommunicationUnitRequest_builder) Build() *CreateCommunicationUnitRequest {
	m0 := &CreateCommunicationUnitRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Spec = b.Spec
	return m0
}

// RestApi -> DriverRegistry - the request message to get the information about the communication unit.
type GetCommunicationUnitsRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	xxx_hidden_ExternalId  *string                `protobuf:"bytes,2,opt,name=external_id,json=externalId" json:"external_id,omitempty"`
	xxx_hidden_Name        *string                `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetCommunicationUnitsRequest) Reset() {
	*x = GetCommunicationUnitsRequest{}
	mi := &file_pbdeviceregistry_models_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommunicationUnitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommunicationUnitsRequest) ProtoMessage() {}

func (x *GetCommunicationUnitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pbdeviceregistry_models_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetCommunicationUnitsRequest) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *GetCommunicationUnitsRequest) GetExternalId() string {
	if x != nil {
		if x.xxx_hidden_ExternalId != nil {
			return *x.xxx_hidden_ExternalId
		}
		return ""
	}
	return ""
}

func (x *GetCommunicationUnitsRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *GetCommunicationUnitsRequest) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *GetCommunicationUnitsRequest) SetExternalId(v string) {
	x.xxx_hidden_ExternalId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *GetCommunicationUnitsRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *GetCommunicationUnitsRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetCommunicationUnitsRequest) HasExternalId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetCommunicationUnitsRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *GetCommunicationUnitsRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *GetCommunicationUnitsRequest) ClearExternalId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ExternalId = nil
}

func (x *GetCommunicationUnitsRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

type GetCommunicationUnitsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id         *string
	ExternalId *string
	Name       *string
}

func (b0 GetCommunicationUnitsRequest_builder) Build() *GetCommunicationUnitsRequest {
	m0 := &GetCommunicationUnitsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Id = b.Id
	}
	if b.ExternalId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_ExternalId = b.ExternalId
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

// DriverRegistry -> RestApi - the message holds the information about the communication unit.
type GetCommunicationUnitsResponse struct {
	state           protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Spec *[]*CommunicationUnitSpec `protobuf:"bytes,1,rep,name=spec" json:"spec,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetCommunicationUnitsResponse) Reset() {
	*x = GetCommunicationUnitsResponse{}
	mi := &file_pbdeviceregistry_models_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommunicationUnitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommunicationUnitsResponse) ProtoMessage() {}

func (x *GetCommunicationUnitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pbdeviceregistry_models_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetCommunicationUnitsResponse) GetSpec() []*CommunicationUnitSpec {
	if x != nil {
		if x.xxx_hidden_Spec != nil {
			return *x.xxx_hidden_Spec
		}
	}
	return nil
}

func (x *GetCommunicationUnitsResponse) SetSpec(v []*CommunicationUnitSpec) {
	x.xxx_hidden_Spec = &v
}

type GetCommunicationUnitsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Spec []*CommunicationUnitSpec
}

func (b0 GetCommunicationUnitsResponse_builder) Build() *GetCommunicationUnitsResponse {
	m0 := &GetCommunicationUnitsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Spec = &b.Spec
	return m0
}

// Sub-message - the communication unit specification.
type CommunicationUnitSpec struct {
	state                     protoimpl.MessageState         `protogen:"opaque.v1"`
	xxx_hidden_Id             *string                        `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	xxx_hidden_ExternalId     *string                        `protobuf:"bytes,2,opt,name=external_id,json=externalId" json:"external_id,omitempty"`
	xxx_hidden_Name           *string                        `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	xxx_hidden_ConnectionInfo *pbdrivermodels.ConnectionInfo `protobuf:"bytes,4,opt,name=connection_info,json=connectionInfo" json:"connection_info,omitempty"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *CommunicationUnitSpec) Reset() {
	*x = CommunicationUnitSpec{}
	mi := &file_pbdeviceregistry_models_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommunicationUnitSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommunicationUnitSpec) ProtoMessage() {}

func (x *CommunicationUnitSpec) ProtoReflect() protoreflect.Message {
	mi := &file_pbdeviceregistry_models_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CommunicationUnitSpec) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *CommunicationUnitSpec) GetExternalId() string {
	if x != nil {
		if x.xxx_hidden_ExternalId != nil {
			return *x.xxx_hidden_ExternalId
		}
		return ""
	}
	return ""
}

func (x *CommunicationUnitSpec) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *CommunicationUnitSpec) GetConnectionInfo() *pbdrivermodels.ConnectionInfo {
	if x != nil {
		return x.xxx_hidden_ConnectionInfo
	}
	return nil
}

func (x *CommunicationUnitSpec) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *CommunicationUnitSpec) SetExternalId(v string) {
	x.xxx_hidden_ExternalId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *CommunicationUnitSpec) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *CommunicationUnitSpec) SetConnectionInfo(v *pbdrivermodels.ConnectionInfo) {
	x.xxx_hidden_ConnectionInfo = v
}

func (x *CommunicationUnitSpec) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CommunicationUnitSpec) HasExternalId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CommunicationUnitSpec) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CommunicationUnitSpec) HasConnectionInfo() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ConnectionInfo != nil
}

func (x *CommunicationUnitSpec) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *CommunicationUnitSpec) ClearExternalId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ExternalId = nil
}

func (x *CommunicationUnitSpec) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *CommunicationUnitSpec) ClearConnectionInfo() {
	x.xxx_hidden_ConnectionInfo = nil
}

type CommunicationUnitSpec_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id             *string
	ExternalId     *string
	Name           *string
	ConnectionInfo *pbdrivermodels.ConnectionInfo
}

func (b0 CommunicationUnitSpec_builder) Build() *CommunicationUnitSpec {
	m0 := &CommunicationUnitSpec{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Id = b.Id
	}
	if b.ExternalId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_ExternalId = b.ExternalId
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_ConnectionInfo = b.ConnectionInfo
	return m0
}

// RestApi -> DriverRegistry - the request message to create a new device.
type CreateDeviceRequest struct {
	state           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Spec *DeviceSpec            `protobuf:"bytes,1,opt,name=spec" json:"spec,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateDeviceRequest) Reset() {
	*x = CreateDeviceRequest{}
	mi := &file_pbdeviceregistry_models_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceRequest) ProtoMessage() {}

func (x *CreateDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pbdeviceregistry_models_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateDeviceRequest) GetSpec() *DeviceSpec {
	if x != nil {
		return x.xxx_hidden_Spec
	}
	return nil
}

func (x *CreateDeviceRequest) SetSpec(v *DeviceSpec) {
	x.xxx_hidden_Spec = v
}

func (x *CreateDeviceRequest) HasSpec() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Spec != nil
}

func (x *CreateDeviceRequest) ClearSpec() {
	x.xxx_hidden_Spec = nil
}

type CreateDeviceRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Spec *DeviceSpec
}

func (b0 CreateDeviceRequest_builder) Build() *CreateDeviceRequest {
	m0 := &CreateDeviceRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Spec = b.Spec
	return m0
}

// RestApi -> DriverRegistry - the request message to get the information about the device.
type GetDevicesRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	xxx_hidden_ExternalId  *string                `protobuf:"bytes,2,opt,name=external_id,json=externalId" json:"external_id,omitempty"`
	xxx_hidden_Name        *string                `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetDevicesRequest) Reset() {
	*x = GetDevicesRequest{}
	mi := &file_pbdeviceregistry_models_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDevicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDevicesRequest) ProtoMessage() {}

func (x *GetDevicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pbdeviceregistry_models_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetDevicesRequest) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *GetDevicesRequest) GetExternalId() string {
	if x != nil {
		if x.xxx_hidden_ExternalId != nil {
			return *x.xxx_hidden_ExternalId
		}
		return ""
	}
	return ""
}

func (x *GetDevicesRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *GetDevicesRequest) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *GetDevicesRequest) SetExternalId(v string) {
	x.xxx_hidden_ExternalId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *GetDevicesRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *GetDevicesRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetDevicesRequest) HasExternalId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetDevicesRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *GetDevicesRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *GetDevicesRequest) ClearExternalId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ExternalId = nil
}

func (x *GetDevicesRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

type GetDevicesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id         *string
	ExternalId *string
	Name       *string
}

func (b0 GetDevicesRequest_builder) Build() *GetDevicesRequest {
	m0 := &GetDevicesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Id = b.Id
	}
	if b.ExternalId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_ExternalId = b.ExternalId
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

// DriverRegistry -> RestApi - the message holds the information about the device.
type GetDevicesResponse struct {
	state           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Spec *[]*DeviceSpec         `protobuf:"bytes,1,rep,name=spec" json:"spec,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetDevicesResponse) Reset() {
	*x = GetDevicesResponse{}
	mi := &file_pbdeviceregistry_models_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDevicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDevicesResponse) ProtoMessage() {}

func (x *GetDevicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pbdeviceregistry_models_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetDevicesResponse) GetSpec() []*DeviceSpec {
	if x != nil {
		if x.xxx_hidden_Spec != nil {
			return *x.xxx_hidden_Spec
		}
	}
	return nil
}

func (x *GetDevicesResponse) SetSpec(v []*DeviceSpec) {
	x.xxx_hidden_Spec = &v
}

type GetDevicesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Spec []*DeviceSpec
}

func (b0 GetDevicesResponse_builder) Build() *GetDevicesResponse {
	m0 := &GetDevicesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Spec = &b.Spec
	return m0
}

// Sub-message - the device specification.
type DeviceSpec struct {
	state                          protoimpl.MessageState                    `protogen:"opaque.v1"`
	xxx_hidden_Id                  *string                                   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	xxx_hidden_ExternalId          *string                                   `protobuf:"bytes,2,opt,name=external_id,json=externalId" json:"external_id,omitempty"`
	xxx_hidden_Name                *string                                   `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	xxx_hidden_Attributes          map[string]*pbdrivermodels.AttributeValue `protobuf:"bytes,4,rep,name=attributes" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_CommunicationUnitId []string                                  `protobuf:"bytes,5,rep,name=communication_unit_id,json=communicationUnitId" json:"communication_unit_id,omitempty"`
	xxx_hidden_Timezone            *string                                   `protobuf:"bytes,6,opt,name=timezone" json:"timezone,omitempty"`
	XXX_raceDetectHookData         protoimpl.RaceDetectHookData
	XXX_presence                   [1]uint32
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *DeviceSpec) Reset() {
	*x = DeviceSpec{}
	mi := &file_pbdeviceregistry_models_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceSpec) ProtoMessage() {}

func (x *DeviceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_pbdeviceregistry_models_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeviceSpec) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *DeviceSpec) GetExternalId() string {
	if x != nil {
		if x.xxx_hidden_ExternalId != nil {
			return *x.xxx_hidden_ExternalId
		}
		return ""
	}
	return ""
}

func (x *DeviceSpec) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DeviceSpec) GetAttributes() map[string]*pbdrivermodels.AttributeValue {
	if x != nil {
		return x.xxx_hidden_Attributes
	}
	return nil
}

func (x *DeviceSpec) GetCommunicationUnitId() []string {
	if x != nil {
		return x.xxx_hidden_CommunicationUnitId
	}
	return nil
}

func (x *DeviceSpec) GetTimezone() string {
	if x != nil {
		if x.xxx_hidden_Timezone != nil {
			return *x.xxx_hidden_Timezone
		}
		return ""
	}
	return ""
}

func (x *DeviceSpec) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *DeviceSpec) SetExternalId(v string) {
	x.xxx_hidden_ExternalId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *DeviceSpec) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *DeviceSpec) SetAttributes(v map[string]*pbdrivermodels.AttributeValue) {
	x.xxx_hidden_Attributes = v
}

func (x *DeviceSpec) SetCommunicationUnitId(v []string) {
	x.xxx_hidden_CommunicationUnitId = v
}

func (x *DeviceSpec) SetTimezone(v string) {
	x.xxx_hidden_Timezone = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *DeviceSpec) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeviceSpec) HasExternalId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeviceSpec) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DeviceSpec) HasTimezone() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *DeviceSpec) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *DeviceSpec) ClearExternalId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ExternalId = nil
}

func (x *DeviceSpec) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *DeviceSpec) ClearTimezone() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Timezone = nil
}

type DeviceSpec_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id                  *string
	ExternalId          *string
	Name                *string
	Attributes          map[string]*pbdrivermodels.AttributeValue
	CommunicationUnitId []string
	Timezone            *string
}

func (b0 DeviceSpec_builder) Build() *DeviceSpec {
	m0 := &DeviceSpec{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Id = b.Id
	}
	if b.ExternalId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_ExternalId = b.ExternalId
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_Attributes = b.Attributes
	x.xxx_hidden_CommunicationUnitId = b.CommunicationUnitId
	if b.Timezone != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_Timezone = b.Timezone
	}
	return m0
}

// Sub-message that represents the device group.
type DeviceGroupSpec struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	xxx_hidden_ExternalId  *string                `protobuf:"bytes,2,opt,name=external_id,json=externalId" json:"external_id,omitempty"`
	xxx_hidden_Name        *string                `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	xxx_hidden_DeviceId    []string               `protobuf:"bytes,4,rep,name=device_id,json=deviceId" json:"device_id,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeviceGroupSpec) Reset() {
	*x = DeviceGroupSpec{}
	mi := &file_pbdeviceregistry_models_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceGroupSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceGroupSpec) ProtoMessage() {}

func (x *DeviceGroupSpec) ProtoReflect() protoreflect.Message {
	mi := &file_pbdeviceregistry_models_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeviceGroupSpec) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *DeviceGroupSpec) GetExternalId() string {
	if x != nil {
		if x.xxx_hidden_ExternalId != nil {
			return *x.xxx_hidden_ExternalId
		}
		return ""
	}
	return ""
}

func (x *DeviceGroupSpec) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DeviceGroupSpec) GetDeviceId() []string {
	if x != nil {
		return x.xxx_hidden_DeviceId
	}
	return nil
}

func (x *DeviceGroupSpec) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *DeviceGroupSpec) SetExternalId(v string) {
	x.xxx_hidden_ExternalId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *DeviceGroupSpec) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *DeviceGroupSpec) SetDeviceId(v []string) {
	x.xxx_hidden_DeviceId = v
}

func (x *DeviceGroupSpec) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeviceGroupSpec) HasExternalId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeviceGroupSpec) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DeviceGroupSpec) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *DeviceGroupSpec) ClearExternalId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ExternalId = nil
}

func (x *DeviceGroupSpec) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

type DeviceGroupSpec_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id         *string
	ExternalId *string
	Name       *string
	DeviceId   []string
}

func (b0 DeviceGroupSpec_builder) Build() *DeviceGroupSpec {
	m0 := &DeviceGroupSpec{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Id = b.Id
	}
	if b.ExternalId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_ExternalId = b.ExternalId
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_DeviceId = b.DeviceId
	return m0
}

// RestApi -> DriverRegistry - the request message to get the information about the device group.
type CreateDeviceGroupRequest struct {
	state           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Spec *DeviceGroupSpec       `protobuf:"bytes,1,opt,name=spec" json:"spec,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateDeviceGroupRequest) Reset() {
	*x = CreateDeviceGroupRequest{}
	mi := &file_pbdeviceregistry_models_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDeviceGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceGroupRequest) ProtoMessage() {}

func (x *CreateDeviceGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pbdeviceregistry_models_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateDeviceGroupRequest) GetSpec() *DeviceGroupSpec {
	if x != nil {
		return x.xxx_hidden_Spec
	}
	return nil
}

func (x *CreateDeviceGroupRequest) SetSpec(v *DeviceGroupSpec) {
	x.xxx_hidden_Spec = v
}

func (x *CreateDeviceGroupRequest) HasSpec() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Spec != nil
}

func (x *CreateDeviceGroupRequest) ClearSpec() {
	x.xxx_hidden_Spec = nil
}

type CreateDeviceGroupRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Spec *DeviceGroupSpec
}

func (b0 CreateDeviceGroupRequest_builder) Build() *CreateDeviceGroupRequest {
	m0 := &CreateDeviceGroupRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Spec = b.Spec
	return m0
}

// DriverRegistry -> RestApi - the message holds the information about the device group.
type GetDeviceGroupsResponse struct {
	state             protoimpl.MessageState              `protogen:"opaque.v1"`
	xxx_hidden_Groups map[string]*DeviceGroupOverviewSpec `protobuf:"bytes,1,rep,name=groups" json:"groups,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetDeviceGroupsResponse) Reset() {
	*x = GetDeviceGroupsResponse{}
	mi := &file_pbdeviceregistry_models_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeviceGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceGroupsResponse) ProtoMessage() {}

func (x *GetDeviceGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pbdeviceregistry_models_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetDeviceGroupsResponse) GetGroups() map[string]*DeviceGroupOverviewSpec {
	if x != nil {
		return x.xxx_hidden_Groups
	}
	return nil
}

func (x *GetDeviceGroupsResponse) SetGroups(v map[string]*DeviceGroupOverviewSpec) {
	x.xxx_hidden_Groups = v
}

type GetDeviceGroupsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Groups map[string]*DeviceGroupOverviewSpec
}

func (b0 GetDeviceGroupsResponse_builder) Build() *GetDeviceGroupsResponse {
	m0 := &GetDeviceGroupsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Groups = b.Groups
	return m0
}

type DeviceGroupOverviewSpec struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	xxx_hidden_ExternalId  *string                `protobuf:"bytes,2,opt,name=external_id,json=externalId" json:"external_id,omitempty"`
	xxx_hidden_Name        *string                `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeviceGroupOverviewSpec) Reset() {
	*x = DeviceGroupOverviewSpec{}
	mi := &file_pbdeviceregistry_models_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceGroupOverviewSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceGroupOverviewSpec) ProtoMessage() {}

func (x *DeviceGroupOverviewSpec) ProtoReflect() protoreflect.Message {
	mi := &file_pbdeviceregistry_models_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeviceGroupOverviewSpec) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *DeviceGroupOverviewSpec) GetExternalId() string {
	if x != nil {
		if x.xxx_hidden_ExternalId != nil {
			return *x.xxx_hidden_ExternalId
		}
		return ""
	}
	return ""
}

func (x *DeviceGroupOverviewSpec) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DeviceGroupOverviewSpec) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *DeviceGroupOverviewSpec) SetExternalId(v string) {
	x.xxx_hidden_ExternalId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *DeviceGroupOverviewSpec) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *DeviceGroupOverviewSpec) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeviceGroupOverviewSpec) HasExternalId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeviceGroupOverviewSpec) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DeviceGroupOverviewSpec) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *DeviceGroupOverviewSpec) ClearExternalId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ExternalId = nil
}

func (x *DeviceGroupOverviewSpec) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

type DeviceGroupOverviewSpec_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id         *string
	ExternalId *string
	Name       *string
}

func (b0 DeviceGroupOverviewSpec_builder) Build() *DeviceGroupOverviewSpec {
	m0 := &DeviceGroupOverviewSpec{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Id = b.Id
	}
	if b.ExternalId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_ExternalId = b.ExternalId
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

// DriverRegistry -> RestApi - the message holds the information about the device group.
type GetDeviceGroupResponse struct {
	state           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Spec *DeviceGroupSpec       `protobuf:"bytes,1,opt,name=spec" json:"spec,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetDeviceGroupResponse) Reset() {
	*x = GetDeviceGroupResponse{}
	mi := &file_pbdeviceregistry_models_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeviceGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceGroupResponse) ProtoMessage() {}

func (x *GetDeviceGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pbdeviceregistry_models_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetDeviceGroupResponse) GetSpec() *DeviceGroupSpec {
	if x != nil {
		return x.xxx_hidden_Spec
	}
	return nil
}

func (x *GetDeviceGroupResponse) SetSpec(v *DeviceGroupSpec) {
	x.xxx_hidden_Spec = v
}

func (x *GetDeviceGroupResponse) HasSpec() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Spec != nil
}

func (x *GetDeviceGroupResponse) ClearSpec() {
	x.xxx_hidden_Spec = nil
}

type GetDeviceGroupResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Spec *DeviceGroupSpec
}

func (b0 GetDeviceGroupResponse_builder) Build() *GetDeviceGroupResponse {
	m0 := &GetDeviceGroupResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Spec = b.Spec
	return m0
}

// RestApi -> DriverRegistry - the request message to add a new device to the device group.
type AddDevicesToGroupRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_GroupId     *string                `protobuf:"bytes,1,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	xxx_hidden_DeviceId    []string               `protobuf:"bytes,2,rep,name=device_id,json=deviceId" json:"device_id,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AddDevicesToGroupRequest) Reset() {
	*x = AddDevicesToGroupRequest{}
	mi := &file_pbdeviceregistry_models_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddDevicesToGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDevicesToGroupRequest) ProtoMessage() {}

func (x *AddDevicesToGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pbdeviceregistry_models_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AddDevicesToGroupRequest) GetGroupId() string {
	if x != nil {
		if x.xxx_hidden_GroupId != nil {
			return *x.xxx_hidden_GroupId
		}
		return ""
	}
	return ""
}

func (x *AddDevicesToGroupRequest) GetDeviceId() []string {
	if x != nil {
		return x.xxx_hidden_DeviceId
	}
	return nil
}

func (x *AddDevicesToGroupRequest) SetGroupId(v string) {
	x.xxx_hidden_GroupId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *AddDevicesToGroupRequest) SetDeviceId(v []string) {
	x.xxx_hidden_DeviceId = v
}

func (x *AddDevicesToGroupRequest) HasGroupId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AddDevicesToGroupRequest) ClearGroupId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_GroupId = nil
}

type AddDevicesToGroupRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	GroupId  *string
	DeviceId []string
}

func (b0 AddDevicesToGroupRequest_builder) Build() *AddDevicesToGroupRequest {
	m0 := &AddDevicesToGroupRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.GroupId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_GroupId = b.GroupId
	}
	x.xxx_hidden_DeviceId = b.DeviceId
	return m0
}

// RestApi -> DriverRegistry - the request message to remove a device from the device group.
type RemoveDevicesFromGroupRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_GroupId     *string                `protobuf:"bytes,1,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	xxx_hidden_DeviceId    []string               `protobuf:"bytes,2,rep,name=device_id,json=deviceId" json:"device_id,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RemoveDevicesFromGroupRequest) Reset() {
	*x = RemoveDevicesFromGroupRequest{}
	mi := &file_pbdeviceregistry_models_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveDevicesFromGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveDevicesFromGroupRequest) ProtoMessage() {}

func (x *RemoveDevicesFromGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pbdeviceregistry_models_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RemoveDevicesFromGroupRequest) GetGroupId() string {
	if x != nil {
		if x.xxx_hidden_GroupId != nil {
			return *x.xxx_hidden_GroupId
		}
		return ""
	}
	return ""
}

func (x *RemoveDevicesFromGroupRequest) GetDeviceId() []string {
	if x != nil {
		return x.xxx_hidden_DeviceId
	}
	return nil
}

func (x *RemoveDevicesFromGroupRequest) SetGroupId(v string) {
	x.xxx_hidden_GroupId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *RemoveDevicesFromGroupRequest) SetDeviceId(v []string) {
	x.xxx_hidden_DeviceId = v
}

func (x *RemoveDevicesFromGroupRequest) HasGroupId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RemoveDevicesFromGroupRequest) ClearGroupId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_GroupId = nil
}

type RemoveDevicesFromGroupRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	GroupId  *string
	DeviceId []string
}

func (b0 RemoveDevicesFromGroupRequest_builder) Build() *RemoveDevicesFromGroupRequest {
	m0 := &RemoveDevicesFromGroupRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.GroupId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_GroupId = b.GroupId
	}
	x.xxx_hidden_DeviceId = b.DeviceId
	return m0
}

// RestApi -> DriverRegistry - the request message to add a new device to the communication unit.
type SetDeviceCommunicationUnitsRequest struct {
	state                         protoimpl.MessageState      `protogen:"opaque.v1"`
	xxx_hidden_DeviceId           *string                     `protobuf:"bytes,1,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	xxx_hidden_CommunicationUnits *[]*DeviceCommunicationUnit `protobuf:"bytes,2,rep,name=communication_units,json=communicationUnits" json:"communication_units,omitempty"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *SetDeviceCommunicationUnitsRequest) Reset() {
	*x = SetDeviceCommunicationUnitsRequest{}
	mi := &file_pbdeviceregistry_models_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetDeviceCommunicationUnitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDeviceCommunicationUnitsRequest) ProtoMessage() {}

func (x *SetDeviceCommunicationUnitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pbdeviceregistry_models_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SetDeviceCommunicationUnitsRequest) GetDeviceId() string {
	if x != nil {
		if x.xxx_hidden_DeviceId != nil {
			return *x.xxx_hidden_DeviceId
		}
		return ""
	}
	return ""
}

func (x *SetDeviceCommunicationUnitsRequest) GetCommunicationUnits() []*DeviceCommunicationUnit {
	if x != nil {
		if x.xxx_hidden_CommunicationUnits != nil {
			return *x.xxx_hidden_CommunicationUnits
		}
	}
	return nil
}

func (x *SetDeviceCommunicationUnitsRequest) SetDeviceId(v string) {
	x.xxx_hidden_DeviceId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *SetDeviceCommunicationUnitsRequest) SetCommunicationUnits(v []*DeviceCommunicationUnit) {
	x.xxx_hidden_CommunicationUnits = &v
}

func (x *SetDeviceCommunicationUnitsRequest) HasDeviceId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SetDeviceCommunicationUnitsRequest) ClearDeviceId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DeviceId = nil
}

type SetDeviceCommunicationUnitsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DeviceId           *string
	CommunicationUnits []*DeviceCommunicationUnit
}

func (b0 SetDeviceCommunicationUnitsRequest_builder) Build() *SetDeviceCommunicationUnitsRequest {
	m0 := &SetDeviceCommunicationUnitsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DeviceId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_DeviceId = b.DeviceId
	}
	x.xxx_hidden_CommunicationUnits = &b.CommunicationUnits
	return m0
}

type DeviceCommunicationUnit struct {
	state                          protoimpl.MessageState             `protogen:"opaque.v1"`
	xxx_hidden_CommunicationUnitId *string                            `protobuf:"bytes,1,opt,name=communication_unit_id,json=communicationUnitId" json:"communication_unit_id,omitempty"`
	xxx_hidden_AppProtocol         pbdrivermodels.ApplicationProtocol `protobuf:"varint,2,opt,name=app_protocol,json=appProtocol,enum=io.clbs.openhes.pbdriver.ApplicationProtocol" json:"app_protocol,omitempty"`
	XXX_raceDetectHookData         protoimpl.RaceDetectHookData
	XXX_presence                   [1]uint32
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *DeviceCommunicationUnit) Reset() {
	*x = DeviceCommunicationUnit{}
	mi := &file_pbdeviceregistry_models_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceCommunicationUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceCommunicationUnit) ProtoMessage() {}

func (x *DeviceCommunicationUnit) ProtoReflect() protoreflect.Message {
	mi := &file_pbdeviceregistry_models_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeviceCommunicationUnit) GetCommunicationUnitId() string {
	if x != nil {
		if x.xxx_hidden_CommunicationUnitId != nil {
			return *x.xxx_hidden_CommunicationUnitId
		}
		return ""
	}
	return ""
}

func (x *DeviceCommunicationUnit) GetAppProtocol() pbdrivermodels.ApplicationProtocol {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_AppProtocol
		}
	}
	return pbdrivermodels.ApplicationProtocol(0)
}

func (x *DeviceCommunicationUnit) SetCommunicationUnitId(v string) {
	x.xxx_hidden_CommunicationUnitId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *DeviceCommunicationUnit) SetAppProtocol(v pbdrivermodels.ApplicationProtocol) {
	x.xxx_hidden_AppProtocol = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *DeviceCommunicationUnit) HasCommunicationUnitId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeviceCommunicationUnit) HasAppProtocol() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeviceCommunicationUnit) ClearCommunicationUnitId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_CommunicationUnitId = nil
}

func (x *DeviceCommunicationUnit) ClearAppProtocol() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_AppProtocol = pbdrivermodels.ApplicationProtocol_APPPROTO_IEC_62056_21
}

type DeviceCommunicationUnit_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	CommunicationUnitId *string
	AppProtocol         *pbdrivermodels.ApplicationProtocol
}

func (b0 DeviceCommunicationUnit_builder) Build() *DeviceCommunicationUnit {
	m0 := &DeviceCommunicationUnit{}
	b, x := &b0, m0
	_, _ = b, x
	if b.CommunicationUnitId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_CommunicationUnitId = b.CommunicationUnitId
	}
	if b.AppProtocol != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_AppProtocol = *b.AppProtocol
	}
	return m0
}

// RestApi -> DriverRegistry - the request message to get
type GetDevicesCommunicationUnitsRequest struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_DeviceId []string               `protobuf:"bytes,1,rep,name=device_id,json=deviceId" json:"device_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetDevicesCommunicationUnitsRequest) Reset() {
	*x = GetDevicesCommunicationUnitsRequest{}
	mi := &file_pbdeviceregistry_models_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDevicesCommunicationUnitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDevicesCommunicationUnitsRequest) ProtoMessage() {}

func (x *GetDevicesCommunicationUnitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pbdeviceregistry_models_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetDevicesCommunicationUnitsRequest) GetDeviceId() []string {
	if x != nil {
		return x.xxx_hidden_DeviceId
	}
	return nil
}

func (x *GetDevicesCommunicationUnitsRequest) SetDeviceId(v []string) {
	x.xxx_hidden_DeviceId = v
}

type GetDevicesCommunicationUnitsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DeviceId []string
}

func (b0 GetDevicesCommunicationUnitsRequest_builder) Build() *GetDevicesCommunicationUnitsRequest {
	m0 := &GetDevicesCommunicationUnitsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_DeviceId = b.DeviceId
	return m0
}

// DriverRegistry -> RestApi - the message holds the information about the communication units linked to the device.
type GetDevicesCommunicationUnitsResponse struct {
	state              protoimpl.MessageState               `protogen:"opaque.v1"`
	xxx_hidden_Devices map[string]*DeviceCommunicationUnits `protobuf:"bytes,1,rep,name=devices" json:"devices,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetDevicesCommunicationUnitsResponse) Reset() {
	*x = GetDevicesCommunicationUnitsResponse{}
	mi := &file_pbdeviceregistry_models_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDevicesCommunicationUnitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDevicesCommunicationUnitsResponse) ProtoMessage() {}

func (x *GetDevicesCommunicationUnitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pbdeviceregistry_models_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetDevicesCommunicationUnitsResponse) GetDevices() map[string]*DeviceCommunicationUnits {
	if x != nil {
		return x.xxx_hidden_Devices
	}
	return nil
}

func (x *GetDevicesCommunicationUnitsResponse) SetDevices(v map[string]*DeviceCommunicationUnits) {
	x.xxx_hidden_Devices = v
}

type GetDevicesCommunicationUnitsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Devices map[string]*DeviceCommunicationUnits
}

func (b0 GetDevicesCommunicationUnitsResponse_builder) Build() *GetDevicesCommunicationUnitsResponse {
	m0 := &GetDevicesCommunicationUnitsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Devices = b.Devices
	return m0
}

// Sub-message that represents the communication units linked to the device.
type DeviceCommunicationUnits struct {
	state                         protoimpl.MessageState   `protogen:"opaque.v1"`
	xxx_hidden_CommunicationUnits *[]*DeviceConnectionInfo `protobuf:"bytes,1,rep,name=communication_units,json=communicationUnits" json:"communication_units,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *DeviceCommunicationUnits) Reset() {
	*x = DeviceCommunicationUnits{}
	mi := &file_pbdeviceregistry_models_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceCommunicationUnits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceCommunicationUnits) ProtoMessage() {}

func (x *DeviceCommunicationUnits) ProtoReflect() protoreflect.Message {
	mi := &file_pbdeviceregistry_models_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeviceCommunicationUnits) GetCommunicationUnits() []*DeviceConnectionInfo {
	if x != nil {
		if x.xxx_hidden_CommunicationUnits != nil {
			return *x.xxx_hidden_CommunicationUnits
		}
	}
	return nil
}

func (x *DeviceCommunicationUnits) SetCommunicationUnits(v []*DeviceConnectionInfo) {
	x.xxx_hidden_CommunicationUnits = &v
}

type DeviceCommunicationUnits_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	CommunicationUnits []*DeviceConnectionInfo
}

func (b0 DeviceCommunicationUnits_builder) Build() *DeviceCommunicationUnits {
	m0 := &DeviceCommunicationUnits{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_CommunicationUnits = &b.CommunicationUnits
	return m0
}

type DeviceConnectionInfo struct {
	state                        protoimpl.MessageState             `protogen:"opaque.v1"`
	xxx_hidden_CommunicationUnit *pbdrivermodels.ConnectionInfo     `protobuf:"bytes,1,opt,name=communication_unit,json=communicationUnit" json:"communication_unit,omitempty"`
	xxx_hidden_AppProtocol       pbdrivermodels.ApplicationProtocol `protobuf:"varint,2,opt,name=app_protocol,json=appProtocol,enum=io.clbs.openhes.pbdriver.ApplicationProtocol" json:"app_protocol,omitempty"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *DeviceConnectionInfo) Reset() {
	*x = DeviceConnectionInfo{}
	mi := &file_pbdeviceregistry_models_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceConnectionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceConnectionInfo) ProtoMessage() {}

func (x *DeviceConnectionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pbdeviceregistry_models_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeviceConnectionInfo) GetCommunicationUnit() *pbdrivermodels.ConnectionInfo {
	if x != nil {
		return x.xxx_hidden_CommunicationUnit
	}
	return nil
}

func (x *DeviceConnectionInfo) GetAppProtocol() pbdrivermodels.ApplicationProtocol {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_AppProtocol
		}
	}
	return pbdrivermodels.ApplicationProtocol(0)
}

func (x *DeviceConnectionInfo) SetCommunicationUnit(v *pbdrivermodels.ConnectionInfo) {
	x.xxx_hidden_CommunicationUnit = v
}

func (x *DeviceConnectionInfo) SetAppProtocol(v pbdrivermodels.ApplicationProtocol) {
	x.xxx_hidden_AppProtocol = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *DeviceConnectionInfo) HasCommunicationUnit() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CommunicationUnit != nil
}

func (x *DeviceConnectionInfo) HasAppProtocol() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeviceConnectionInfo) ClearCommunicationUnit() {
	x.xxx_hidden_CommunicationUnit = nil
}

func (x *DeviceConnectionInfo) ClearAppProtocol() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_AppProtocol = pbdrivermodels.ApplicationProtocol_APPPROTO_IEC_62056_21
}

type DeviceConnectionInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	CommunicationUnit *pbdrivermodels.ConnectionInfo
	AppProtocol       *pbdrivermodels.ApplicationProtocol
}

func (b0 DeviceConnectionInfo_builder) Build() *DeviceConnectionInfo {
	m0 := &DeviceConnectionInfo{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_CommunicationUnit = b.CommunicationUnit
	if b.AppProtocol != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_AppProtocol = *b.AppProtocol
	}
	return m0
}

// Sub-message that represents the modem pool.
type ModemPoolSpec struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PoolId      *string                `protobuf:"bytes,1,opt,name=pool_id,json=poolId" json:"pool_id,omitempty"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ModemPoolSpec) Reset() {
	*x = ModemPoolSpec{}
	mi := &file_pbdeviceregistry_models_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModemPoolSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModemPoolSpec) ProtoMessage() {}

func (x *ModemPoolSpec) ProtoReflect() protoreflect.Message {
	mi := &file_pbdeviceregistry_models_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ModemPoolSpec) GetPoolId() string {
	if x != nil {
		if x.xxx_hidden_PoolId != nil {
			return *x.xxx_hidden_PoolId
		}
		return ""
	}
	return ""
}

func (x *ModemPoolSpec) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ModemPoolSpec) SetPoolId(v string) {
	x.xxx_hidden_PoolId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ModemPoolSpec) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ModemPoolSpec) HasPoolId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ModemPoolSpec) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ModemPoolSpec) ClearPoolId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_PoolId = nil
}

func (x *ModemPoolSpec) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

type ModemPoolSpec_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PoolId *string
	Name   *string
}

func (b0 ModemPoolSpec_builder) Build() *ModemPoolSpec {
	m0 := &ModemPoolSpec{}
	b, x := &b0, m0
	_, _ = b, x
	if b.PoolId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_PoolId = b.PoolId
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

// RestApi -> DriverRegistry - the request message to get the modem pools.
type GetModemPoolsResponse struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Pools *[]*ModemPoolSpec      `protobuf:"bytes,1,rep,name=pools" json:"pools,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetModemPoolsResponse) Reset() {
	*x = GetModemPoolsResponse{}
	mi := &file_pbdeviceregistry_models_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetModemPoolsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModemPoolsResponse) ProtoMessage() {}

func (x *GetModemPoolsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pbdeviceregistry_models_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetModemPoolsResponse) GetPools() []*ModemPoolSpec {
	if x != nil {
		if x.xxx_hidden_Pools != nil {
			return *x.xxx_hidden_Pools
		}
	}
	return nil
}

func (x *GetModemPoolsResponse) SetPools(v []*ModemPoolSpec) {
	x.xxx_hidden_Pools = &v
}

type GetModemPoolsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Pools []*ModemPoolSpec
}

func (b0 GetModemPoolsResponse_builder) Build() *GetModemPoolsResponse {
	m0 := &GetModemPoolsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Pools = &b.Pools
	return m0
}

// RestApi -> DriverRegistry - the request message to get the modem pool info.
type GetModemPoolRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PoolId      *string                `protobuf:"bytes,1,opt,name=pool_id,json=poolId" json:"pool_id,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetModemPoolRequest) Reset() {
	*x = GetModemPoolRequest{}
	mi := &file_pbdeviceregistry_models_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetModemPoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModemPoolRequest) ProtoMessage() {}

func (x *GetModemPoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pbdeviceregistry_models_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetModemPoolRequest) GetPoolId() string {
	if x != nil {
		if x.xxx_hidden_PoolId != nil {
			return *x.xxx_hidden_PoolId
		}
		return ""
	}
	return ""
}

func (x *GetModemPoolRequest) SetPoolId(v string) {
	x.xxx_hidden_PoolId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *GetModemPoolRequest) HasPoolId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetModemPoolRequest) ClearPoolId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_PoolId = nil
}

type GetModemPoolRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PoolId *string
}

func (b0 GetModemPoolRequest_builder) Build() *GetModemPoolRequest {
	m0 := &GetModemPoolRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.PoolId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_PoolId = b.PoolId
	}
	return m0
}

// DriverRegistry -> RestApi - the message holds the information about the modem pool.
type GetModemPoolResponse struct {
	state                  protoimpl.MessageState       `protogen:"opaque.v1"`
	xxx_hidden_Modems      *[]*pbdrivermodels.ModemInfo `protobuf:"bytes,1,rep,name=modems" json:"modems,omitempty"`
	xxx_hidden_Name        *string                      `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetModemPoolResponse) Reset() {
	*x = GetModemPoolResponse{}
	mi := &file_pbdeviceregistry_models_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetModemPoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModemPoolResponse) ProtoMessage() {}

func (x *GetModemPoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pbdeviceregistry_models_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetModemPoolResponse) GetModems() []*pbdrivermodels.ModemInfo {
	if x != nil {
		if x.xxx_hidden_Modems != nil {
			return *x.xxx_hidden_Modems
		}
	}
	return nil
}

func (x *GetModemPoolResponse) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *GetModemPoolResponse) SetModems(v []*pbdrivermodels.ModemInfo) {
	x.xxx_hidden_Modems = &v
}

func (x *GetModemPoolResponse) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *GetModemPoolResponse) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetModemPoolResponse) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

type GetModemPoolResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Modems []*pbdrivermodels.ModemInfo
	Name   *string
}

func (b0 GetModemPoolResponse_builder) Build() *GetModemPoolResponse {
	m0 := &GetModemPoolResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Modems = &b.Modems
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type SetModemPoolRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PoolId      *string                `protobuf:"bytes,1,opt,name=pool_id,json=poolId" json:"pool_id,omitempty"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SetModemPoolRequest) Reset() {
	*x = SetModemPoolRequest{}
	mi := &file_pbdeviceregistry_models_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetModemPoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetModemPoolRequest) ProtoMessage() {}

func (x *SetModemPoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pbdeviceregistry_models_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SetModemPoolRequest) GetPoolId() string {
	if x != nil {
		if x.xxx_hidden_PoolId != nil {
			return *x.xxx_hidden_PoolId
		}
		return ""
	}
	return ""
}

func (x *SetModemPoolRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *SetModemPoolRequest) SetPoolId(v string) {
	x.xxx_hidden_PoolId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *SetModemPoolRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *SetModemPoolRequest) HasPoolId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SetModemPoolRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SetModemPoolRequest) ClearPoolId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_PoolId = nil
}

func (x *SetModemPoolRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

type SetModemPoolRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PoolId *string
	Name   *string
}

func (b0 SetModemPoolRequest_builder) Build() *SetModemPoolRequest {
	m0 := &SetModemPoolRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.PoolId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_PoolId = b.PoolId
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type SetModemRequest struct {
	state                  protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_PoolId      *string                   `protobuf:"bytes,1,opt,name=pool_id,json=poolId" json:"pool_id,omitempty"`
	xxx_hidden_Modem       *pbdrivermodels.ModemInfo `protobuf:"bytes,2,opt,name=modem" json:"modem,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SetModemRequest) Reset() {
	*x = SetModemRequest{}
	mi := &file_pbdeviceregistry_models_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetModemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetModemRequest) ProtoMessage() {}

func (x *SetModemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pbdeviceregistry_models_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SetModemRequest) GetPoolId() string {
	if x != nil {
		if x.xxx_hidden_PoolId != nil {
			return *x.xxx_hidden_PoolId
		}
		return ""
	}
	return ""
}

func (x *SetModemRequest) GetModem() *pbdrivermodels.ModemInfo {
	if x != nil {
		return x.xxx_hidden_Modem
	}
	return nil
}

func (x *SetModemRequest) SetPoolId(v string) {
	x.xxx_hidden_PoolId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *SetModemRequest) SetModem(v *pbdrivermodels.ModemInfo) {
	x.xxx_hidden_Modem = v
}

func (x *SetModemRequest) HasPoolId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SetModemRequest) HasModem() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Modem != nil
}

func (x *SetModemRequest) ClearPoolId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_PoolId = nil
}

func (x *SetModemRequest) ClearModem() {
	x.xxx_hidden_Modem = nil
}

type SetModemRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PoolId *string
	Modem  *pbdrivermodels.ModemInfo
}

func (b0 SetModemRequest_builder) Build() *SetModemRequest {
	m0 := &SetModemRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.PoolId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_PoolId = b.PoolId
	}
	x.xxx_hidden_Modem = b.Modem
	return m0
}

var File_pbdeviceregistry_models_proto protoreflect.FileDescriptor

var file_pbdeviceregistry_models_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x62, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x2d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x20, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73,
	0x2e, 0x70, 0x62, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15,
	0x70, 0x62, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6d, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04,
	0x73, 0x70, 0x65, 0x63, 0x22, 0x63, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6c, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c,
	0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x70, 0x65,
	0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0xaf, 0x01, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x51, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65,
	0x73, 0x2e, 0x70, 0x62, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x57, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x40, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73,
	0x2e, 0x70, 0x62, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x22, 0x58, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x56, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x40, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68,
	0x65, 0x73, 0x2e, 0x70, 0x62, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04,
	0x73, 0x70, 0x65, 0x63, 0x22, 0xe8, 0x02, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x5c, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x69,
	0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x70,
	0x62, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x1a, 0x67, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3e, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6f, 0x2e,
	0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x73, 0x0a, 0x0f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x45, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73,
	0x2e, 0x70, 0x62, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x70, 0x65,
	0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0xee, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x1a, 0x74, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x4f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x39, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x68, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x53, 0x70, 0x65, 0x63, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5e, 0x0a, 0x17, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x45, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68,
	0x65, 0x73, 0x2e, 0x70, 0x62, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x52, 0x0a, 0x18, 0x41, 0x64, 0x64,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x57, 0x0a,
	0x1d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x46, 0x72,
	0x6f, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0xad, 0x01, 0x0a, 0x22, 0x53, 0x65, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x6a, 0x0a, 0x13, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x69, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62,
	0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e,
	0x69, 0x74, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x17, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e,
	0x69, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x69,
	0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x70,
	0x62, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x0b, 0x61, 0x70, 0x70,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x42, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x8d, 0x02, 0x0a,
	0x24, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x1a, 0x76, 0x0a, 0x0c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x50, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74,
	0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x83, 0x01, 0x0a,
	0x18, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x67, 0x0a, 0x13, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69,
	0x74, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x57, 0x0a, 0x12, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x69,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62,
	0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x6e, 0x69, 0x74, 0x12, 0x50, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x69, 0x6f, 0x2e,
	0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x3c, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x65, 0x6d, 0x50,
	0x6f, 0x6f, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6d,
	0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a,
	0x05, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x69,
	0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x70,
	0x62, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x52, 0x05, 0x70,
	0x6f, 0x6f, 0x6c, 0x73, 0x22, 0x2e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6d,
	0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70,
	0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f,
	0x6f, 0x6c, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6d,
	0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06,
	0x6d, 0x6f, 0x64, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69,
	0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x70,
	0x62, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x42, 0x0a,
	0x13, 0x53, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x65, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69,
	0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x70,
	0x62, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6d, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x79, 0x62, 0x72, 0x6f, 0x73, 0x6c, 0x61, 0x62,
	0x73, 0x2f, 0x68, 0x65, 0x73, 0x2d, 0x32, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x70, 0x62, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x62, 0x08, 0x65, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x70, 0xe8, 0x07,
}

var file_pbdeviceregistry_models_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_pbdeviceregistry_models_proto_goTypes = []any{
	(*CreateCommunicationUnitRequest)(nil),       // 0: io.clbs.openhes.pbdeviceregistry.CreateCommunicationUnitRequest
	(*GetCommunicationUnitsRequest)(nil),         // 1: io.clbs.openhes.pbdeviceregistry.GetCommunicationUnitsRequest
	(*GetCommunicationUnitsResponse)(nil),        // 2: io.clbs.openhes.pbdeviceregistry.GetCommunicationUnitsResponse
	(*CommunicationUnitSpec)(nil),                // 3: io.clbs.openhes.pbdeviceregistry.CommunicationUnitSpec
	(*CreateDeviceRequest)(nil),                  // 4: io.clbs.openhes.pbdeviceregistry.CreateDeviceRequest
	(*GetDevicesRequest)(nil),                    // 5: io.clbs.openhes.pbdeviceregistry.GetDevicesRequest
	(*GetDevicesResponse)(nil),                   // 6: io.clbs.openhes.pbdeviceregistry.GetDevicesResponse
	(*DeviceSpec)(nil),                           // 7: io.clbs.openhes.pbdeviceregistry.DeviceSpec
	(*DeviceGroupSpec)(nil),                      // 8: io.clbs.openhes.pbdeviceregistry.DeviceGroupSpec
	(*CreateDeviceGroupRequest)(nil),             // 9: io.clbs.openhes.pbdeviceregistry.CreateDeviceGroupRequest
	(*GetDeviceGroupsResponse)(nil),              // 10: io.clbs.openhes.pbdeviceregistry.GetDeviceGroupsResponse
	(*DeviceGroupOverviewSpec)(nil),              // 11: io.clbs.openhes.pbdeviceregistry.DeviceGroupOverviewSpec
	(*GetDeviceGroupResponse)(nil),               // 12: io.clbs.openhes.pbdeviceregistry.GetDeviceGroupResponse
	(*AddDevicesToGroupRequest)(nil),             // 13: io.clbs.openhes.pbdeviceregistry.AddDevicesToGroupRequest
	(*RemoveDevicesFromGroupRequest)(nil),        // 14: io.clbs.openhes.pbdeviceregistry.RemoveDevicesFromGroupRequest
	(*SetDeviceCommunicationUnitsRequest)(nil),   // 15: io.clbs.openhes.pbdeviceregistry.SetDeviceCommunicationUnitsRequest
	(*DeviceCommunicationUnit)(nil),              // 16: io.clbs.openhes.pbdeviceregistry.DeviceCommunicationUnit
	(*GetDevicesCommunicationUnitsRequest)(nil),  // 17: io.clbs.openhes.pbdeviceregistry.GetDevicesCommunicationUnitsRequest
	(*GetDevicesCommunicationUnitsResponse)(nil), // 18: io.clbs.openhes.pbdeviceregistry.GetDevicesCommunicationUnitsResponse
	(*DeviceCommunicationUnits)(nil),             // 19: io.clbs.openhes.pbdeviceregistry.DeviceCommunicationUnits
	(*DeviceConnectionInfo)(nil),                 // 20: io.clbs.openhes.pbdeviceregistry.DeviceConnectionInfo
	(*ModemPoolSpec)(nil),                        // 21: io.clbs.openhes.pbdeviceregistry.ModemPoolSpec
	(*GetModemPoolsResponse)(nil),                // 22: io.clbs.openhes.pbdeviceregistry.GetModemPoolsResponse
	(*GetModemPoolRequest)(nil),                  // 23: io.clbs.openhes.pbdeviceregistry.GetModemPoolRequest
	(*GetModemPoolResponse)(nil),                 // 24: io.clbs.openhes.pbdeviceregistry.GetModemPoolResponse
	(*SetModemPoolRequest)(nil),                  // 25: io.clbs.openhes.pbdeviceregistry.SetModemPoolRequest
	(*SetModemRequest)(nil),                      // 26: io.clbs.openhes.pbdeviceregistry.SetModemRequest
	nil,                                          // 27: io.clbs.openhes.pbdeviceregistry.DeviceSpec.AttributesEntry
	nil,                                          // 28: io.clbs.openhes.pbdeviceregistry.GetDeviceGroupsResponse.GroupsEntry
	nil,                                          // 29: io.clbs.openhes.pbdeviceregistry.GetDevicesCommunicationUnitsResponse.DevicesEntry
	(*pbdrivermodels.ConnectionInfo)(nil),        // 30: io.clbs.openhes.pbdriver.ConnectionInfo
	(pbdrivermodels.ApplicationProtocol)(0),      // 31: io.clbs.openhes.pbdriver.ApplicationProtocol
	(*pbdrivermodels.ModemInfo)(nil),             // 32: io.clbs.openhes.pbdriver.ModemInfo
	(*pbdrivermodels.AttributeValue)(nil),        // 33: io.clbs.openhes.pbdriver.AttributeValue
}
var file_pbdeviceregistry_models_proto_depIdxs = []int32{
	3,  // 0: io.clbs.openhes.pbdeviceregistry.CreateCommunicationUnitRequest.spec:type_name -> io.clbs.openhes.pbdeviceregistry.CommunicationUnitSpec
	3,  // 1: io.clbs.openhes.pbdeviceregistry.GetCommunicationUnitsResponse.spec:type_name -> io.clbs.openhes.pbdeviceregistry.CommunicationUnitSpec
	30, // 2: io.clbs.openhes.pbdeviceregistry.CommunicationUnitSpec.connection_info:type_name -> io.clbs.openhes.pbdriver.ConnectionInfo
	7,  // 3: io.clbs.openhes.pbdeviceregistry.CreateDeviceRequest.spec:type_name -> io.clbs.openhes.pbdeviceregistry.DeviceSpec
	7,  // 4: io.clbs.openhes.pbdeviceregistry.GetDevicesResponse.spec:type_name -> io.clbs.openhes.pbdeviceregistry.DeviceSpec
	27, // 5: io.clbs.openhes.pbdeviceregistry.DeviceSpec.attributes:type_name -> io.clbs.openhes.pbdeviceregistry.DeviceSpec.AttributesEntry
	8,  // 6: io.clbs.openhes.pbdeviceregistry.CreateDeviceGroupRequest.spec:type_name -> io.clbs.openhes.pbdeviceregistry.DeviceGroupSpec
	28, // 7: io.clbs.openhes.pbdeviceregistry.GetDeviceGroupsResponse.groups:type_name -> io.clbs.openhes.pbdeviceregistry.GetDeviceGroupsResponse.GroupsEntry
	8,  // 8: io.clbs.openhes.pbdeviceregistry.GetDeviceGroupResponse.spec:type_name -> io.clbs.openhes.pbdeviceregistry.DeviceGroupSpec
	16, // 9: io.clbs.openhes.pbdeviceregistry.SetDeviceCommunicationUnitsRequest.communication_units:type_name -> io.clbs.openhes.pbdeviceregistry.DeviceCommunicationUnit
	31, // 10: io.clbs.openhes.pbdeviceregistry.DeviceCommunicationUnit.app_protocol:type_name -> io.clbs.openhes.pbdriver.ApplicationProtocol
	29, // 11: io.clbs.openhes.pbdeviceregistry.GetDevicesCommunicationUnitsResponse.devices:type_name -> io.clbs.openhes.pbdeviceregistry.GetDevicesCommunicationUnitsResponse.DevicesEntry
	20, // 12: io.clbs.openhes.pbdeviceregistry.DeviceCommunicationUnits.communication_units:type_name -> io.clbs.openhes.pbdeviceregistry.DeviceConnectionInfo
	30, // 13: io.clbs.openhes.pbdeviceregistry.DeviceConnectionInfo.communication_unit:type_name -> io.clbs.openhes.pbdriver.ConnectionInfo
	31, // 14: io.clbs.openhes.pbdeviceregistry.DeviceConnectionInfo.app_protocol:type_name -> io.clbs.openhes.pbdriver.ApplicationProtocol
	21, // 15: io.clbs.openhes.pbdeviceregistry.GetModemPoolsResponse.pools:type_name -> io.clbs.openhes.pbdeviceregistry.ModemPoolSpec
	32, // 16: io.clbs.openhes.pbdeviceregistry.GetModemPoolResponse.modems:type_name -> io.clbs.openhes.pbdriver.ModemInfo
	32, // 17: io.clbs.openhes.pbdeviceregistry.SetModemRequest.modem:type_name -> io.clbs.openhes.pbdriver.ModemInfo
	33, // 18: io.clbs.openhes.pbdeviceregistry.DeviceSpec.AttributesEntry.value:type_name -> io.clbs.openhes.pbdriver.AttributeValue
	11, // 19: io.clbs.openhes.pbdeviceregistry.GetDeviceGroupsResponse.GroupsEntry.value:type_name -> io.clbs.openhes.pbdeviceregistry.DeviceGroupOverviewSpec
	19, // 20: io.clbs.openhes.pbdeviceregistry.GetDevicesCommunicationUnitsResponse.DevicesEntry.value:type_name -> io.clbs.openhes.pbdeviceregistry.DeviceCommunicationUnits
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_pbdeviceregistry_models_proto_init() }
func file_pbdeviceregistry_models_proto_init() {
	if File_pbdeviceregistry_models_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pbdeviceregistry_models_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pbdeviceregistry_models_proto_goTypes,
		DependencyIndexes: file_pbdeviceregistry_models_proto_depIdxs,
		MessageInfos:      file_pbdeviceregistry_models_proto_msgTypes,
	}.Build()
	File_pbdeviceregistry_models_proto = out.File
	file_pbdeviceregistry_models_proto_rawDesc = nil
	file_pbdeviceregistry_models_proto_goTypes = nil
	file_pbdeviceregistry_models_proto_depIdxs = nil
}
