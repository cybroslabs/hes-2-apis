// Editions version of proto3 file

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.29.2
// source: pbtaskmaster-models.proto

package pbtaskmastermodels

import (
	pbdrivermodels "github.com/cybroslabs/hes-2-apis/protobuf/pbdrivermodels"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Job statuses
type JobStatusCode int32

const (
	// The job is waiting in the queue
	JobStatusCode_JOB_STATUS_QUEUED JobStatusCode = 0
	// The job is running
	JobStatusCode_JOB_STATUS_RUNNING JobStatusCode = 1
	// The job is completed
	JobStatusCode_JOB_STATUS_COMPLETED JobStatusCode = 2
	// The job is failed
	JobStatusCode_JOB_STATUS_FAILED JobStatusCode = 3
	// The job is cancelled
	JobStatusCode_JOB_STATUS_CANCELLED JobStatusCode = 4
	// The job has expired
	JobStatusCode_JOB_STATUS_EXPIRED JobStatusCode = 5
)

// Enum value maps for JobStatusCode.
var (
	JobStatusCode_name = map[int32]string{
		0: "JOB_STATUS_QUEUED",
		1: "JOB_STATUS_RUNNING",
		2: "JOB_STATUS_COMPLETED",
		3: "JOB_STATUS_FAILED",
		4: "JOB_STATUS_CANCELLED",
		5: "JOB_STATUS_EXPIRED",
	}
	JobStatusCode_value = map[string]int32{
		"JOB_STATUS_QUEUED":    0,
		"JOB_STATUS_RUNNING":   1,
		"JOB_STATUS_COMPLETED": 2,
		"JOB_STATUS_FAILED":    3,
		"JOB_STATUS_CANCELLED": 4,
		"JOB_STATUS_EXPIRED":   5,
	}
)

func (x JobStatusCode) Enum() *JobStatusCode {
	p := new(JobStatusCode)
	*p = x
	return p
}

func (x JobStatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobStatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pbtaskmaster_models_proto_enumTypes[0].Descriptor()
}

func (JobStatusCode) Type() protoreflect.EnumType {
	return &file_pbtaskmaster_models_proto_enumTypes[0]
}

func (x JobStatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Taskmaster -> Dataproxy event message
type StreamEventsData struct {
	state           protoimpl.MessageState  `protogen:"opaque.v1"`
	xxx_hidden_Data isStreamEventsData_Data `protobuf_oneof:"data"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StreamEventsData) Reset() {
	*x = StreamEventsData{}
	mi := &file_pbtaskmaster_models_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamEventsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEventsData) ProtoMessage() {}

func (x *StreamEventsData) ProtoReflect() protoreflect.Message {
	mi := &file_pbtaskmaster_models_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StreamEventsData) GetJobDone() *StreamEventsDataJobFinished {
	if x != nil {
		if x, ok := x.xxx_hidden_Data.(*streamEventsData_JobDone); ok {
			return x.JobDone
		}
	}
	return nil
}

func (x *StreamEventsData) SetJobDone(v *StreamEventsDataJobFinished) {
	if v == nil {
		x.xxx_hidden_Data = nil
		return
	}
	x.xxx_hidden_Data = &streamEventsData_JobDone{v}
}

func (x *StreamEventsData) HasData() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Data != nil
}

func (x *StreamEventsData) HasJobDone() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Data.(*streamEventsData_JobDone)
	return ok
}

func (x *StreamEventsData) ClearData() {
	x.xxx_hidden_Data = nil
}

func (x *StreamEventsData) ClearJobDone() {
	if _, ok := x.xxx_hidden_Data.(*streamEventsData_JobDone); ok {
		x.xxx_hidden_Data = nil
	}
}

const StreamEventsData_Data_not_set_case case_StreamEventsData_Data = 0
const StreamEventsData_JobDone_case case_StreamEventsData_Data = 1

func (x *StreamEventsData) WhichData() case_StreamEventsData_Data {
	if x == nil {
		return StreamEventsData_Data_not_set_case
	}
	switch x.xxx_hidden_Data.(type) {
	case *streamEventsData_JobDone:
		return StreamEventsData_JobDone_case
	default:
		return StreamEventsData_Data_not_set_case
	}
}

type StreamEventsData_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Data:
	JobDone *StreamEventsDataJobFinished
	// -- end of xxx_hidden_Data
}

func (b0 StreamEventsData_builder) Build() *StreamEventsData {
	m0 := &StreamEventsData{}
	b, x := &b0, m0
	_, _ = b, x
	if b.JobDone != nil {
		x.xxx_hidden_Data = &streamEventsData_JobDone{b.JobDone}
	}
	return m0
}

type case_StreamEventsData_Data protoreflect.FieldNumber

func (x case_StreamEventsData_Data) String() string {
	md := file_pbtaskmaster_models_proto_msgTypes[0].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isStreamEventsData_Data interface {
	isStreamEventsData_Data()
}

type streamEventsData_JobDone struct {
	JobDone *StreamEventsDataJobFinished `protobuf:"bytes,1,opt,name=job_done,json=jobDone,oneof"`
}

func (*streamEventsData_JobDone) isStreamEventsData_Data() {}

// Sub-message - job-finished event data
type StreamEventsDataJobFinished struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_JobId       *string                `protobuf:"bytes,1,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *StreamEventsDataJobFinished) Reset() {
	*x = StreamEventsDataJobFinished{}
	mi := &file_pbtaskmaster_models_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamEventsDataJobFinished) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEventsDataJobFinished) ProtoMessage() {}

func (x *StreamEventsDataJobFinished) ProtoReflect() protoreflect.Message {
	mi := &file_pbtaskmaster_models_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StreamEventsDataJobFinished) GetJobId() string {
	if x != nil {
		if x.xxx_hidden_JobId != nil {
			return *x.xxx_hidden_JobId
		}
		return ""
	}
	return ""
}

func (x *StreamEventsDataJobFinished) SetJobId(v string) {
	x.xxx_hidden_JobId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *StreamEventsDataJobFinished) HasJobId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *StreamEventsDataJobFinished) ClearJobId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_JobId = nil
}

type StreamEventsDataJobFinished_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	JobId *string
}

func (b0 StreamEventsDataJobFinished_builder) Build() *StreamEventsDataJobFinished {
	m0 := &StreamEventsDataJobFinished{}
	b, x := &b0, m0
	_, _ = b, x
	if b.JobId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_JobId = b.JobId
	}
	return m0
}

// Driver -> Taskmaster cache set request message
type CacheSetRequest struct {
	state                  protoimpl.MessageState         `protogen:"opaque.v1"`
	xxx_hidden_Key         *string                        `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	xxx_hidden_Value       *pbdrivermodels.AttributeValue `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CacheSetRequest) Reset() {
	*x = CacheSetRequest{}
	mi := &file_pbtaskmaster_models_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CacheSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheSetRequest) ProtoMessage() {}

func (x *CacheSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pbtaskmaster_models_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CacheSetRequest) GetKey() string {
	if x != nil {
		if x.xxx_hidden_Key != nil {
			return *x.xxx_hidden_Key
		}
		return ""
	}
	return ""
}

func (x *CacheSetRequest) GetValue() *pbdrivermodels.AttributeValue {
	if x != nil {
		return x.xxx_hidden_Value
	}
	return nil
}

func (x *CacheSetRequest) SetKey(v string) {
	x.xxx_hidden_Key = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *CacheSetRequest) SetValue(v *pbdrivermodels.AttributeValue) {
	x.xxx_hidden_Value = v
}

func (x *CacheSetRequest) HasKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CacheSetRequest) HasValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Value != nil
}

func (x *CacheSetRequest) ClearKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Key = nil
}

func (x *CacheSetRequest) ClearValue() {
	x.xxx_hidden_Value = nil
}

type CacheSetRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Key   *string
	Value *pbdrivermodels.AttributeValue
}

func (b0 CacheSetRequest_builder) Build() *CacheSetRequest {
	m0 := &CacheSetRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Key != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Key = b.Key
	}
	x.xxx_hidden_Value = b.Value
	return m0
}

// Driver -> Taskmaster cache get request message
type CacheGetRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Key         *string                `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CacheGetRequest) Reset() {
	*x = CacheGetRequest{}
	mi := &file_pbtaskmaster_models_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CacheGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheGetRequest) ProtoMessage() {}

func (x *CacheGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pbtaskmaster_models_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CacheGetRequest) GetKey() string {
	if x != nil {
		if x.xxx_hidden_Key != nil {
			return *x.xxx_hidden_Key
		}
		return ""
	}
	return ""
}

func (x *CacheGetRequest) SetKey(v string) {
	x.xxx_hidden_Key = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *CacheGetRequest) HasKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CacheGetRequest) ClearKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Key = nil
}

type CacheGetRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Key *string
}

func (b0 CacheGetRequest_builder) Build() *CacheGetRequest {
	m0 := &CacheGetRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Key != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Key = b.Key
	}
	return m0
}

// Taskmaster -> Driver cache get response message
type CacheGetResponse struct {
	state                  protoimpl.MessageState         `protogen:"opaque.v1"`
	xxx_hidden_Result      pbdrivermodels.ErrorCode       `protobuf:"varint,1,opt,name=result,enum=io.clbs.openhes.pbdriver.ErrorCode" json:"result,omitempty"`
	xxx_hidden_Value       *pbdrivermodels.AttributeValue `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CacheGetResponse) Reset() {
	*x = CacheGetResponse{}
	mi := &file_pbtaskmaster_models_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CacheGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheGetResponse) ProtoMessage() {}

func (x *CacheGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pbtaskmaster_models_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CacheGetResponse) GetResult() pbdrivermodels.ErrorCode {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Result
		}
	}
	return pbdrivermodels.ErrorCode(0)
}

func (x *CacheGetResponse) GetValue() *pbdrivermodels.AttributeValue {
	if x != nil {
		return x.xxx_hidden_Value
	}
	return nil
}

func (x *CacheGetResponse) SetResult(v pbdrivermodels.ErrorCode) {
	x.xxx_hidden_Result = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *CacheGetResponse) SetValue(v *pbdrivermodels.AttributeValue) {
	x.xxx_hidden_Value = v
}

func (x *CacheGetResponse) HasResult() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CacheGetResponse) HasValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Value != nil
}

func (x *CacheGetResponse) ClearResult() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Result = pbdrivermodels.ErrorCode_ERROR_CODE_OK
}

func (x *CacheGetResponse) ClearValue() {
	x.xxx_hidden_Value = nil
}

type CacheGetResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Result *pbdrivermodels.ErrorCode
	Value  *pbdrivermodels.AttributeValue
}

func (b0 CacheGetResponse_builder) Build() *CacheGetResponse {
	m0 := &CacheGetResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Result != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Result = *b.Result
	}
	x.xxx_hidden_Value = b.Value
	return m0
}

// API -> Taskmaster cancel job request message
type CancelJobsRequest struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_JobId []string               `protobuf:"bytes,1,rep,name=job_id,json=jobId" json:"job_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CancelJobsRequest) Reset() {
	*x = CancelJobsRequest{}
	mi := &file_pbtaskmaster_models_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelJobsRequest) ProtoMessage() {}

func (x *CancelJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pbtaskmaster_models_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CancelJobsRequest) GetJobId() []string {
	if x != nil {
		return x.xxx_hidden_JobId
	}
	return nil
}

func (x *CancelJobsRequest) SetJobId(v []string) {
	x.xxx_hidden_JobId = v
}

type CancelJobsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	JobId []string
}

func (b0 CancelJobsRequest_builder) Build() *CancelJobsRequest {
	m0 := &CancelJobsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_JobId = b.JobId
	return m0
}

// API -> Taskmaster queue jobs request message
type QueueJobsRequest struct {
	state           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Spec *[]*JobSpec            `protobuf:"bytes,1,rep,name=spec" json:"spec,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *QueueJobsRequest) Reset() {
	*x = QueueJobsRequest{}
	mi := &file_pbtaskmaster_models_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueJobsRequest) ProtoMessage() {}

func (x *QueueJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pbtaskmaster_models_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QueueJobsRequest) GetSpec() []*JobSpec {
	if x != nil {
		if x.xxx_hidden_Spec != nil {
			return *x.xxx_hidden_Spec
		}
	}
	return nil
}

func (x *QueueJobsRequest) SetSpec(v []*JobSpec) {
	x.xxx_hidden_Spec = &v
}

type QueueJobsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Spec []*JobSpec
}

func (b0 QueueJobsRequest_builder) Build() *QueueJobsRequest {
	m0 := &QueueJobsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Spec = &b.Spec
	return m0
}

// Sub-message - job specification
type JobSpec struct {
	state                  protoimpl.MessageState       `protogen:"opaque.v1"`
	xxx_hidden_Device      *JobDevice                   `protobuf:"bytes,2,opt,name=device" json:"device,omitempty"`
	xxx_hidden_JobSettings *pbdrivermodels.JobSettings  `protobuf:"bytes,3,opt,name=job_settings,json=jobSettings" json:"job_settings,omitempty"`
	xxx_hidden_DriverType  *string                      `protobuf:"bytes,4,opt,name=driver_type,json=driverType" json:"driver_type,omitempty"`
	xxx_hidden_JobActions  *[]*pbdrivermodels.JobAction `protobuf:"bytes,5,rep,name=job_actions,json=jobActions" json:"job_actions,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *JobSpec) Reset() {
	*x = JobSpec{}
	mi := &file_pbtaskmaster_models_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSpec) ProtoMessage() {}

func (x *JobSpec) ProtoReflect() protoreflect.Message {
	mi := &file_pbtaskmaster_models_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *JobSpec) GetDevice() *JobDevice {
	if x != nil {
		return x.xxx_hidden_Device
	}
	return nil
}

func (x *JobSpec) GetJobSettings() *pbdrivermodels.JobSettings {
	if x != nil {
		return x.xxx_hidden_JobSettings
	}
	return nil
}

func (x *JobSpec) GetDriverType() string {
	if x != nil {
		if x.xxx_hidden_DriverType != nil {
			return *x.xxx_hidden_DriverType
		}
		return ""
	}
	return ""
}

func (x *JobSpec) GetJobActions() []*pbdrivermodels.JobAction {
	if x != nil {
		if x.xxx_hidden_JobActions != nil {
			return *x.xxx_hidden_JobActions
		}
	}
	return nil
}

func (x *JobSpec) SetDevice(v *JobDevice) {
	x.xxx_hidden_Device = v
}

func (x *JobSpec) SetJobSettings(v *pbdrivermodels.JobSettings) {
	x.xxx_hidden_JobSettings = v
}

func (x *JobSpec) SetDriverType(v string) {
	x.xxx_hidden_DriverType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *JobSpec) SetJobActions(v []*pbdrivermodels.JobAction) {
	x.xxx_hidden_JobActions = &v
}

func (x *JobSpec) HasDevice() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Device != nil
}

func (x *JobSpec) HasJobSettings() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_JobSettings != nil
}

func (x *JobSpec) HasDriverType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *JobSpec) ClearDevice() {
	x.xxx_hidden_Device = nil
}

func (x *JobSpec) ClearJobSettings() {
	x.xxx_hidden_JobSettings = nil
}

func (x *JobSpec) ClearDriverType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_DriverType = nil
}

type JobSpec_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Device      *JobDevice
	JobSettings *pbdrivermodels.JobSettings
	DriverType  *string
	JobActions  []*pbdrivermodels.JobAction
}

func (b0 JobSpec_builder) Build() *JobSpec {
	m0 := &JobSpec{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Device = b.Device
	x.xxx_hidden_JobSettings = b.JobSettings
	if b.DriverType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_DriverType = b.DriverType
	}
	x.xxx_hidden_JobActions = &b.JobActions
	return m0
}

// Sub-message representing a single device info.
type JobDevice struct {
	state                       protoimpl.MessageState                    `protogen:"opaque.v1"`
	xxx_hidden_Id               *string                                   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	xxx_hidden_DeviceId         *string                                   `protobuf:"bytes,2,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	xxx_hidden_ExternalId       *string                                   `protobuf:"bytes,3,opt,name=external_id,json=externalId" json:"external_id,omitempty"`
	xxx_hidden_DeviceAttributes map[string]*pbdrivermodels.AttributeValue `protobuf:"bytes,4,rep,name=device_attributes,json=deviceAttributes" json:"device_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_ConnectionInfo   *[]*pbdrivermodels.ConnectionInfo         `protobuf:"bytes,5,rep,name=connection_info,json=connectionInfo" json:"connection_info,omitempty"`
	xxx_hidden_AppProtocol      pbdrivermodels.ApplicationProtocol        `protobuf:"varint,6,opt,name=app_protocol,json=appProtocol,enum=io.clbs.openhes.pbdriver.ApplicationProtocol" json:"app_protocol,omitempty"`
	xxx_hidden_Timezone         *string                                   `protobuf:"bytes,7,opt,name=timezone" json:"timezone,omitempty"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *JobDevice) Reset() {
	*x = JobDevice{}
	mi := &file_pbtaskmaster_models_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobDevice) ProtoMessage() {}

func (x *JobDevice) ProtoReflect() protoreflect.Message {
	mi := &file_pbtaskmaster_models_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *JobDevice) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *JobDevice) GetDeviceId() string {
	if x != nil {
		if x.xxx_hidden_DeviceId != nil {
			return *x.xxx_hidden_DeviceId
		}
		return ""
	}
	return ""
}

func (x *JobDevice) GetExternalId() string {
	if x != nil {
		if x.xxx_hidden_ExternalId != nil {
			return *x.xxx_hidden_ExternalId
		}
		return ""
	}
	return ""
}

func (x *JobDevice) GetDeviceAttributes() map[string]*pbdrivermodels.AttributeValue {
	if x != nil {
		return x.xxx_hidden_DeviceAttributes
	}
	return nil
}

func (x *JobDevice) GetConnectionInfo() []*pbdrivermodels.ConnectionInfo {
	if x != nil {
		if x.xxx_hidden_ConnectionInfo != nil {
			return *x.xxx_hidden_ConnectionInfo
		}
	}
	return nil
}

func (x *JobDevice) GetAppProtocol() pbdrivermodels.ApplicationProtocol {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 5) {
			return x.xxx_hidden_AppProtocol
		}
	}
	return pbdrivermodels.ApplicationProtocol(0)
}

func (x *JobDevice) GetTimezone() string {
	if x != nil {
		if x.xxx_hidden_Timezone != nil {
			return *x.xxx_hidden_Timezone
		}
		return ""
	}
	return ""
}

func (x *JobDevice) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *JobDevice) SetDeviceId(v string) {
	x.xxx_hidden_DeviceId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *JobDevice) SetExternalId(v string) {
	x.xxx_hidden_ExternalId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *JobDevice) SetDeviceAttributes(v map[string]*pbdrivermodels.AttributeValue) {
	x.xxx_hidden_DeviceAttributes = v
}

func (x *JobDevice) SetConnectionInfo(v []*pbdrivermodels.ConnectionInfo) {
	x.xxx_hidden_ConnectionInfo = &v
}

func (x *JobDevice) SetAppProtocol(v pbdrivermodels.ApplicationProtocol) {
	x.xxx_hidden_AppProtocol = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *JobDevice) SetTimezone(v string) {
	x.xxx_hidden_Timezone = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *JobDevice) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *JobDevice) HasDeviceId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *JobDevice) HasExternalId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *JobDevice) HasAppProtocol() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *JobDevice) HasTimezone() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *JobDevice) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *JobDevice) ClearDeviceId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_DeviceId = nil
}

func (x *JobDevice) ClearExternalId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ExternalId = nil
}

func (x *JobDevice) ClearAppProtocol() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_AppProtocol = pbdrivermodels.ApplicationProtocol_APPPROTO_IEC_62056_21
}

func (x *JobDevice) ClearTimezone() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Timezone = nil
}

type JobDevice_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id               *string
	DeviceId         *string
	ExternalId       *string
	DeviceAttributes map[string]*pbdrivermodels.AttributeValue
	ConnectionInfo   []*pbdrivermodels.ConnectionInfo
	AppProtocol      *pbdrivermodels.ApplicationProtocol
	Timezone         *string
}

func (b0 JobDevice_builder) Build() *JobDevice {
	m0 := &JobDevice{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Id = b.Id
	}
	if b.DeviceId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_DeviceId = b.DeviceId
	}
	if b.ExternalId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_ExternalId = b.ExternalId
	}
	x.xxx_hidden_DeviceAttributes = b.DeviceAttributes
	x.xxx_hidden_ConnectionInfo = &b.ConnectionInfo
	if b.AppProtocol != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_AppProtocol = *b.AppProtocol
	}
	if b.Timezone != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_Timezone = b.Timezone
	}
	return m0
}

// Dataproxy -> Taskmaster get job request message
type GetJobRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_JobId       *string                `protobuf:"bytes,1,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetJobRequest) Reset() {
	*x = GetJobRequest{}
	mi := &file_pbtaskmaster_models_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobRequest) ProtoMessage() {}

func (x *GetJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pbtaskmaster_models_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetJobRequest) GetJobId() string {
	if x != nil {
		if x.xxx_hidden_JobId != nil {
			return *x.xxx_hidden_JobId
		}
		return ""
	}
	return ""
}

func (x *GetJobRequest) SetJobId(v string) {
	x.xxx_hidden_JobId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *GetJobRequest) HasJobId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetJobRequest) ClearJobId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_JobId = nil
}

type GetJobRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	JobId *string
}

func (b0 GetJobRequest_builder) Build() *GetJobRequest {
	m0 := &GetJobRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.JobId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_JobId = b.JobId
	}
	return m0
}

// Taskmaster -> API get job response message
type GetJobResponse struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Status *JobStatus             `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetJobResponse) Reset() {
	*x = GetJobResponse{}
	mi := &file_pbtaskmaster_models_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobResponse) ProtoMessage() {}

func (x *GetJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pbtaskmaster_models_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetJobResponse) GetStatus() *JobStatus {
	if x != nil {
		return x.xxx_hidden_Status
	}
	return nil
}

func (x *GetJobResponse) SetStatus(v *JobStatus) {
	x.xxx_hidden_Status = v
}

func (x *GetJobResponse) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Status != nil
}

func (x *GetJobResponse) ClearStatus() {
	x.xxx_hidden_Status = nil
}

type GetJobResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Status *JobStatus
}

func (b0 GetJobResponse_builder) Build() *GetJobResponse {
	m0 := &GetJobResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Status = b.Status
	return m0
}

// Sub-message containing job status info
type JobStatus struct {
	state                   protoimpl.MessageState      `protogen:"opaque.v1"`
	xxx_hidden_Status       JobStatusCode               `protobuf:"varint,1,opt,name=status,enum=io.clbs.openhes.pbtaskmaster.JobStatusCode" json:"status,omitempty"`
	xxx_hidden_Code         pbdrivermodels.JobErrorCode `protobuf:"varint,2,opt,name=code,enum=io.clbs.openhes.pbdriver.JobErrorCode" json:"code,omitempty"`
	xxx_hidden_Results      *[]*ActionResult            `protobuf:"bytes,3,rep,name=results" json:"results,omitempty"`
	xxx_hidden_CreatedAt    *timestamppb.Timestamp      `protobuf:"bytes,4,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	xxx_hidden_StartedAt    *timestamppb.Timestamp      `protobuf:"bytes,5,opt,name=started_at,json=startedAt" json:"started_at,omitempty"`
	xxx_hidden_FinishedAt   *timestamppb.Timestamp      `protobuf:"bytes,6,opt,name=finished_at,json=finishedAt" json:"finished_at,omitempty"`
	xxx_hidden_AttemptsDone int32                       `protobuf:"varint,7,opt,name=attempts_done,json=attemptsDone" json:"attempts_done,omitempty"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *JobStatus) Reset() {
	*x = JobStatus{}
	mi := &file_pbtaskmaster_models_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStatus) ProtoMessage() {}

func (x *JobStatus) ProtoReflect() protoreflect.Message {
	mi := &file_pbtaskmaster_models_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *JobStatus) GetStatus() JobStatusCode {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Status
		}
	}
	return JobStatusCode_JOB_STATUS_QUEUED
}

func (x *JobStatus) GetCode() pbdrivermodels.JobErrorCode {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Code
		}
	}
	return pbdrivermodels.JobErrorCode(0)
}

func (x *JobStatus) GetResults() []*ActionResult {
	if x != nil {
		if x.xxx_hidden_Results != nil {
			return *x.xxx_hidden_Results
		}
	}
	return nil
}

func (x *JobStatus) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CreatedAt
	}
	return nil
}

func (x *JobStatus) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_StartedAt
	}
	return nil
}

func (x *JobStatus) GetFinishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_FinishedAt
	}
	return nil
}

func (x *JobStatus) GetAttemptsDone() int32 {
	if x != nil {
		return x.xxx_hidden_AttemptsDone
	}
	return 0
}

func (x *JobStatus) SetStatus(v JobStatusCode) {
	x.xxx_hidden_Status = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *JobStatus) SetCode(v pbdrivermodels.JobErrorCode) {
	x.xxx_hidden_Code = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *JobStatus) SetResults(v []*ActionResult) {
	x.xxx_hidden_Results = &v
}

func (x *JobStatus) SetCreatedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_CreatedAt = v
}

func (x *JobStatus) SetStartedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_StartedAt = v
}

func (x *JobStatus) SetFinishedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_FinishedAt = v
}

func (x *JobStatus) SetAttemptsDone(v int32) {
	x.xxx_hidden_AttemptsDone = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *JobStatus) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *JobStatus) HasCode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *JobStatus) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CreatedAt != nil
}

func (x *JobStatus) HasStartedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_StartedAt != nil
}

func (x *JobStatus) HasFinishedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_FinishedAt != nil
}

func (x *JobStatus) HasAttemptsDone() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *JobStatus) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Status = JobStatusCode_JOB_STATUS_QUEUED
}

func (x *JobStatus) ClearCode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Code = pbdrivermodels.JobErrorCode_JOB_ERROR_CODE_NONE
}

func (x *JobStatus) ClearCreatedAt() {
	x.xxx_hidden_CreatedAt = nil
}

func (x *JobStatus) ClearStartedAt() {
	x.xxx_hidden_StartedAt = nil
}

func (x *JobStatus) ClearFinishedAt() {
	x.xxx_hidden_FinishedAt = nil
}

func (x *JobStatus) ClearAttemptsDone() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_AttemptsDone = 0
}

type JobStatus_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Status       *JobStatusCode
	Code         *pbdrivermodels.JobErrorCode
	Results      []*ActionResult
	CreatedAt    *timestamppb.Timestamp
	StartedAt    *timestamppb.Timestamp
	FinishedAt   *timestamppb.Timestamp
	AttemptsDone *int32
}

func (b0 JobStatus_builder) Build() *JobStatus {
	m0 := &JobStatus{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Status = *b.Status
	}
	if b.Code != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_Code = *b.Code
	}
	x.xxx_hidden_Results = &b.Results
	x.xxx_hidden_CreatedAt = b.CreatedAt
	x.xxx_hidden_StartedAt = b.StartedAt
	x.xxx_hidden_FinishedAt = b.FinishedAt
	if b.AttemptsDone != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_AttemptsDone = *b.AttemptsDone
	}
	return m0
}

// Sub-message containing action result for a single action.
type ActionResult struct {
	state                  protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_ActionId    *string                         `protobuf:"bytes,1,opt,name=action_id,json=actionId" json:"action_id,omitempty"`
	xxx_hidden_Status      pbdrivermodels.ActionResultCode `protobuf:"varint,2,opt,name=status,enum=io.clbs.openhes.pbdriver.ActionResultCode" json:"status,omitempty"`
	xxx_hidden_Data        *pbdrivermodels.ActionData      `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ActionResult) Reset() {
	*x = ActionResult{}
	mi := &file_pbtaskmaster_models_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResult) ProtoMessage() {}

func (x *ActionResult) ProtoReflect() protoreflect.Message {
	mi := &file_pbtaskmaster_models_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ActionResult) GetActionId() string {
	if x != nil {
		if x.xxx_hidden_ActionId != nil {
			return *x.xxx_hidden_ActionId
		}
		return ""
	}
	return ""
}

func (x *ActionResult) GetStatus() pbdrivermodels.ActionResultCode {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Status
		}
	}
	return pbdrivermodels.ActionResultCode(0)
}

func (x *ActionResult) GetData() *pbdrivermodels.ActionData {
	if x != nil {
		return x.xxx_hidden_Data
	}
	return nil
}

func (x *ActionResult) SetActionId(v string) {
	x.xxx_hidden_ActionId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ActionResult) SetStatus(v pbdrivermodels.ActionResultCode) {
	x.xxx_hidden_Status = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ActionResult) SetData(v *pbdrivermodels.ActionData) {
	x.xxx_hidden_Data = v
}

func (x *ActionResult) HasActionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ActionResult) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ActionResult) HasData() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Data != nil
}

func (x *ActionResult) ClearActionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ActionId = nil
}

func (x *ActionResult) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Status = pbdrivermodels.ActionResultCode_ERROR_CODE_ACTION_OK
}

func (x *ActionResult) ClearData() {
	x.xxx_hidden_Data = nil
}

type ActionResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ActionId *string
	Status   *pbdrivermodels.ActionResultCode
	Data     *pbdrivermodels.ActionData
}

func (b0 ActionResult_builder) Build() *ActionResult {
	m0 := &ActionResult{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ActionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_ActionId = b.ActionId
	}
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Status = *b.Status
	}
	x.xxx_hidden_Data = b.Data
	return m0
}

// API <-> Taskmaster request/response for system configuration
type SystemConfig struct {
	state                            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_MaxReplicas           int32                  `protobuf:"varint,1,opt,name=max_replicas,json=maxReplicas" json:"max_replicas,omitempty"`
	xxx_hidden_MaxCascadeDeviceCount int32                  `protobuf:"varint,2,opt,name=max_cascade_device_count,json=maxCascadeDeviceCount" json:"max_cascade_device_count,omitempty"`
	XXX_raceDetectHookData           protoimpl.RaceDetectHookData
	XXX_presence                     [1]uint32
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *SystemConfig) Reset() {
	*x = SystemConfig{}
	mi := &file_pbtaskmaster_models_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemConfig) ProtoMessage() {}

func (x *SystemConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pbtaskmaster_models_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SystemConfig) GetMaxReplicas() int32 {
	if x != nil {
		return x.xxx_hidden_MaxReplicas
	}
	return 0
}

func (x *SystemConfig) GetMaxCascadeDeviceCount() int32 {
	if x != nil {
		return x.xxx_hidden_MaxCascadeDeviceCount
	}
	return 0
}

func (x *SystemConfig) SetMaxReplicas(v int32) {
	x.xxx_hidden_MaxReplicas = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *SystemConfig) SetMaxCascadeDeviceCount(v int32) {
	x.xxx_hidden_MaxCascadeDeviceCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *SystemConfig) HasMaxReplicas() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SystemConfig) HasMaxCascadeDeviceCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SystemConfig) ClearMaxReplicas() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_MaxReplicas = 0
}

func (x *SystemConfig) ClearMaxCascadeDeviceCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_MaxCascadeDeviceCount = 0
}

type SystemConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	MaxReplicas           *int32
	MaxCascadeDeviceCount *int32
}

func (b0 SystemConfig_builder) Build() *SystemConfig {
	m0 := &SystemConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.MaxReplicas != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_MaxReplicas = *b.MaxReplicas
	}
	if b.MaxCascadeDeviceCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_MaxCascadeDeviceCount = *b.MaxCascadeDeviceCount
	}
	return m0
}

// API <-> Taskmaster request/response for system configuration
type SystemConfigResponse struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Config *SystemConfig          `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
	xxx_hidden_Status *SystemConfigStatus    `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SystemConfigResponse) Reset() {
	*x = SystemConfigResponse{}
	mi := &file_pbtaskmaster_models_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemConfigResponse) ProtoMessage() {}

func (x *SystemConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pbtaskmaster_models_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SystemConfigResponse) GetConfig() *SystemConfig {
	if x != nil {
		return x.xxx_hidden_Config
	}
	return nil
}

func (x *SystemConfigResponse) GetStatus() *SystemConfigStatus {
	if x != nil {
		return x.xxx_hidden_Status
	}
	return nil
}

func (x *SystemConfigResponse) SetConfig(v *SystemConfig) {
	x.xxx_hidden_Config = v
}

func (x *SystemConfigResponse) SetStatus(v *SystemConfigStatus) {
	x.xxx_hidden_Status = v
}

func (x *SystemConfigResponse) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Config != nil
}

func (x *SystemConfigResponse) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Status != nil
}

func (x *SystemConfigResponse) ClearConfig() {
	x.xxx_hidden_Config = nil
}

func (x *SystemConfigResponse) ClearStatus() {
	x.xxx_hidden_Status = nil
}

type SystemConfigResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Config *SystemConfig
	Status *SystemConfigStatus
}

func (b0 SystemConfigResponse_builder) Build() *SystemConfigResponse {
	m0 := &SystemConfigResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Config = b.Config
	x.xxx_hidden_Status = b.Status
	return m0
}

// Sub-message containing system status
type SystemConfigStatus struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_QueueLength int64                  `protobuf:"varint,1,opt,name=queue_length,json=queueLength" json:"queue_length,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SystemConfigStatus) Reset() {
	*x = SystemConfigStatus{}
	mi := &file_pbtaskmaster_models_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemConfigStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemConfigStatus) ProtoMessage() {}

func (x *SystemConfigStatus) ProtoReflect() protoreflect.Message {
	mi := &file_pbtaskmaster_models_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SystemConfigStatus) GetQueueLength() int64 {
	if x != nil {
		return x.xxx_hidden_QueueLength
	}
	return 0
}

func (x *SystemConfigStatus) SetQueueLength(v int64) {
	x.xxx_hidden_QueueLength = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *SystemConfigStatus) HasQueueLength() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SystemConfigStatus) ClearQueueLength() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_QueueLength = 0
}

type SystemConfigStatus_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	QueueLength *int64
}

func (b0 SystemConfigStatus_builder) Build() *SystemConfigStatus {
	m0 := &SystemConfigStatus{}
	b, x := &b0, m0
	_, _ = b, x
	if b.QueueLength != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_QueueLength = *b.QueueLength
	}
	return m0
}

// Taskmaster -> Dataproxy job/action progress update message
type JobEventData struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_JobId       []byte                 `protobuf:"bytes,1,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *JobEventData) Reset() {
	*x = JobEventData{}
	mi := &file_pbtaskmaster_models_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobEventData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobEventData) ProtoMessage() {}

func (x *JobEventData) ProtoReflect() protoreflect.Message {
	mi := &file_pbtaskmaster_models_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *JobEventData) GetJobId() []byte {
	if x != nil {
		return x.xxx_hidden_JobId
	}
	return nil
}

func (x *JobEventData) SetJobId(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_JobId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *JobEventData) HasJobId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *JobEventData) ClearJobId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_JobId = nil
}

type JobEventData_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	JobId []byte
}

func (b0 JobEventData_builder) Build() *JobEventData {
	m0 := &JobEventData{}
	b, x := &b0, m0
	_, _ = b, x
	if b.JobId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_JobId = b.JobId
	}
	return m0
}

var File_pbtaskmaster_models_proto protoreflect.FileDescriptor

var file_pbtaskmaster_models_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2d, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x69, 0x6f, 0x2e,
	0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x74,
	0x61, 0x73, 0x6b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x70, 0x62, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x2d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x72,
	0x0a, 0x10, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x56, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x4a, 0x6f, 0x62, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x48,
	0x00, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x44, 0x6f, 0x6e, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x34, 0x0a, 0x1b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x4a, 0x6f, 0x62, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x0f, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3e, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69,
	0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x70,
	0x62, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x23, 0x0a,
	0x0f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x22, 0x8f, 0x01, 0x0a, 0x10, 0x43, 0x61, 0x63, 0x68, 0x65, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62,
	0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x3e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x2a, 0x0a, 0x11, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4a, 0x6f,
	0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64,
	0x22, 0x4d, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x68, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22,
	0xfb, 0x01, 0x0a, 0x07, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x12, 0x3f, 0x0a, 0x06, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x6f,
	0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x70, 0x62,
	0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4a, 0x6f, 0x62, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0c,
	0x6a, 0x6f, 0x62, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x68, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x4a, 0x6f,
	0x62, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0b, 0x6a, 0x6f, 0x62, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x6a, 0x6f, 0x62, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69,
	0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x70,
	0x62, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x4a, 0x6f, 0x62, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x6a, 0x6f, 0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xf5, 0x03,
	0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x6a, 0x0a, 0x11, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73,
	0x2e, 0x70, 0x62, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x50, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d,
	0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73,
	0x2e, 0x70, 0x62, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x0b, 0x61,
	0x70, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x1a, 0x6d, 0x0a, 0x15, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x3e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68,
	0x65, 0x73, 0x2e, 0x70, 0x62, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x26, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x51, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65,
	0x73, 0x2e, 0x70, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4a,
	0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0xaa, 0x03, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x43,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b,
	0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73,
	0x2e, 0x70, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4a, 0x6f,
	0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x26, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x68, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x4a, 0x6f, 0x62,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x44, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68,
	0x65, 0x73, 0x2e, 0x70, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x73, 0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x44, 0x6f, 0x6e, 0x65, 0x22, 0xa9, 0x01,
	0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x69, 0x6f,
	0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x70, 0x62,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e,
	0x70, 0x62, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6a, 0x0a, 0x0c, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78,
	0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x37, 0x0a, 0x18,
	0x6d, 0x61, 0x78, 0x5f, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15,
	0x6d, 0x61, 0x78, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x14, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73,
	0x2e, 0x70, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x48, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x68, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x37, 0x0a, 0x12,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x25, 0x0a, 0x0c, 0x4a, 0x6f, 0x62, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x2a, 0xa1, 0x01, 0x0a,
	0x0d, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x15,
	0x0a, 0x11, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x51, 0x55, 0x45,
	0x55, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x18, 0x0a,
	0x14, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50,
	0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x4a, 0x4f, 0x42, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x18,
	0x0a, 0x14, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e,
	0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x4a, 0x4f, 0x42, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x05,
	0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x79, 0x62, 0x72, 0x6f, 0x73, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x68, 0x65, 0x73, 0x2d, 0x32, 0x2d,
	0x61, 0x70, 0x69, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x70, 0x62,
	0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x62, 0x08, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x70, 0xe8, 0x07,
}

var file_pbtaskmaster_models_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pbtaskmaster_models_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_pbtaskmaster_models_proto_goTypes = []any{
	(JobStatusCode)(0),                      // 0: io.clbs.openhes.pbtaskmaster.JobStatusCode
	(*StreamEventsData)(nil),                // 1: io.clbs.openhes.pbtaskmaster.StreamEventsData
	(*StreamEventsDataJobFinished)(nil),     // 2: io.clbs.openhes.pbtaskmaster.StreamEventsDataJobFinished
	(*CacheSetRequest)(nil),                 // 3: io.clbs.openhes.pbtaskmaster.CacheSetRequest
	(*CacheGetRequest)(nil),                 // 4: io.clbs.openhes.pbtaskmaster.CacheGetRequest
	(*CacheGetResponse)(nil),                // 5: io.clbs.openhes.pbtaskmaster.CacheGetResponse
	(*CancelJobsRequest)(nil),               // 6: io.clbs.openhes.pbtaskmaster.CancelJobsRequest
	(*QueueJobsRequest)(nil),                // 7: io.clbs.openhes.pbtaskmaster.QueueJobsRequest
	(*JobSpec)(nil),                         // 8: io.clbs.openhes.pbtaskmaster.JobSpec
	(*JobDevice)(nil),                       // 9: io.clbs.openhes.pbtaskmaster.JobDevice
	(*GetJobRequest)(nil),                   // 10: io.clbs.openhes.pbtaskmaster.GetJobRequest
	(*GetJobResponse)(nil),                  // 11: io.clbs.openhes.pbtaskmaster.GetJobResponse
	(*JobStatus)(nil),                       // 12: io.clbs.openhes.pbtaskmaster.JobStatus
	(*ActionResult)(nil),                    // 13: io.clbs.openhes.pbtaskmaster.ActionResult
	(*SystemConfig)(nil),                    // 14: io.clbs.openhes.pbtaskmaster.SystemConfig
	(*SystemConfigResponse)(nil),            // 15: io.clbs.openhes.pbtaskmaster.SystemConfigResponse
	(*SystemConfigStatus)(nil),              // 16: io.clbs.openhes.pbtaskmaster.SystemConfigStatus
	(*JobEventData)(nil),                    // 17: io.clbs.openhes.pbtaskmaster.JobEventData
	nil,                                     // 18: io.clbs.openhes.pbtaskmaster.JobDevice.DeviceAttributesEntry
	(*pbdrivermodels.AttributeValue)(nil),   // 19: io.clbs.openhes.pbdriver.AttributeValue
	(pbdrivermodels.ErrorCode)(0),           // 20: io.clbs.openhes.pbdriver.ErrorCode
	(*pbdrivermodels.JobSettings)(nil),      // 21: io.clbs.openhes.pbdriver.JobSettings
	(*pbdrivermodels.JobAction)(nil),        // 22: io.clbs.openhes.pbdriver.JobAction
	(*pbdrivermodels.ConnectionInfo)(nil),   // 23: io.clbs.openhes.pbdriver.ConnectionInfo
	(pbdrivermodels.ApplicationProtocol)(0), // 24: io.clbs.openhes.pbdriver.ApplicationProtocol
	(pbdrivermodels.JobErrorCode)(0),        // 25: io.clbs.openhes.pbdriver.JobErrorCode
	(*timestamppb.Timestamp)(nil),           // 26: google.protobuf.Timestamp
	(pbdrivermodels.ActionResultCode)(0),    // 27: io.clbs.openhes.pbdriver.ActionResultCode
	(*pbdrivermodels.ActionData)(nil),       // 28: io.clbs.openhes.pbdriver.ActionData
}
var file_pbtaskmaster_models_proto_depIdxs = []int32{
	2,  // 0: io.clbs.openhes.pbtaskmaster.StreamEventsData.job_done:type_name -> io.clbs.openhes.pbtaskmaster.StreamEventsDataJobFinished
	19, // 1: io.clbs.openhes.pbtaskmaster.CacheSetRequest.value:type_name -> io.clbs.openhes.pbdriver.AttributeValue
	20, // 2: io.clbs.openhes.pbtaskmaster.CacheGetResponse.result:type_name -> io.clbs.openhes.pbdriver.ErrorCode
	19, // 3: io.clbs.openhes.pbtaskmaster.CacheGetResponse.value:type_name -> io.clbs.openhes.pbdriver.AttributeValue
	8,  // 4: io.clbs.openhes.pbtaskmaster.QueueJobsRequest.spec:type_name -> io.clbs.openhes.pbtaskmaster.JobSpec
	9,  // 5: io.clbs.openhes.pbtaskmaster.JobSpec.device:type_name -> io.clbs.openhes.pbtaskmaster.JobDevice
	21, // 6: io.clbs.openhes.pbtaskmaster.JobSpec.job_settings:type_name -> io.clbs.openhes.pbdriver.JobSettings
	22, // 7: io.clbs.openhes.pbtaskmaster.JobSpec.job_actions:type_name -> io.clbs.openhes.pbdriver.JobAction
	18, // 8: io.clbs.openhes.pbtaskmaster.JobDevice.device_attributes:type_name -> io.clbs.openhes.pbtaskmaster.JobDevice.DeviceAttributesEntry
	23, // 9: io.clbs.openhes.pbtaskmaster.JobDevice.connection_info:type_name -> io.clbs.openhes.pbdriver.ConnectionInfo
	24, // 10: io.clbs.openhes.pbtaskmaster.JobDevice.app_protocol:type_name -> io.clbs.openhes.pbdriver.ApplicationProtocol
	12, // 11: io.clbs.openhes.pbtaskmaster.GetJobResponse.status:type_name -> io.clbs.openhes.pbtaskmaster.JobStatus
	0,  // 12: io.clbs.openhes.pbtaskmaster.JobStatus.status:type_name -> io.clbs.openhes.pbtaskmaster.JobStatusCode
	25, // 13: io.clbs.openhes.pbtaskmaster.JobStatus.code:type_name -> io.clbs.openhes.pbdriver.JobErrorCode
	13, // 14: io.clbs.openhes.pbtaskmaster.JobStatus.results:type_name -> io.clbs.openhes.pbtaskmaster.ActionResult
	26, // 15: io.clbs.openhes.pbtaskmaster.JobStatus.created_at:type_name -> google.protobuf.Timestamp
	26, // 16: io.clbs.openhes.pbtaskmaster.JobStatus.started_at:type_name -> google.protobuf.Timestamp
	26, // 17: io.clbs.openhes.pbtaskmaster.JobStatus.finished_at:type_name -> google.protobuf.Timestamp
	27, // 18: io.clbs.openhes.pbtaskmaster.ActionResult.status:type_name -> io.clbs.openhes.pbdriver.ActionResultCode
	28, // 19: io.clbs.openhes.pbtaskmaster.ActionResult.data:type_name -> io.clbs.openhes.pbdriver.ActionData
	14, // 20: io.clbs.openhes.pbtaskmaster.SystemConfigResponse.config:type_name -> io.clbs.openhes.pbtaskmaster.SystemConfig
	16, // 21: io.clbs.openhes.pbtaskmaster.SystemConfigResponse.status:type_name -> io.clbs.openhes.pbtaskmaster.SystemConfigStatus
	19, // 22: io.clbs.openhes.pbtaskmaster.JobDevice.DeviceAttributesEntry.value:type_name -> io.clbs.openhes.pbdriver.AttributeValue
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_pbtaskmaster_models_proto_init() }
func file_pbtaskmaster_models_proto_init() {
	if File_pbtaskmaster_models_proto != nil {
		return
	}
	file_pbtaskmaster_models_proto_msgTypes[0].OneofWrappers = []any{
		(*streamEventsData_JobDone)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pbtaskmaster_models_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pbtaskmaster_models_proto_goTypes,
		DependencyIndexes: file_pbtaskmaster_models_proto_depIdxs,
		EnumInfos:         file_pbtaskmaster_models_proto_enumTypes,
		MessageInfos:      file_pbtaskmaster_models_proto_msgTypes,
	}.Build()
	File_pbtaskmaster_models_proto = out.File
	file_pbtaskmaster_models_proto_rawDesc = nil
	file_pbtaskmaster_models_proto_goTypes = nil
	file_pbtaskmaster_models_proto_depIdxs = nil
}
