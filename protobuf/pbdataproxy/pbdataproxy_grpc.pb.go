// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v5.26.1
// source: protobuf/pbdataproxy/pbdataproxy.proto

package pbdataproxy

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	DataproxyHost_NotifyBulkJonFinished_FullMethodName = "/pbdataproxy.DataproxyHost/NotifyBulkJonFinished"
)

// DataproxyHostClient is the client API for DataproxyHost service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type DataproxyHostClient interface {
	// The method called by the Taskmaster to start a new job. The parameter contains the job specification and the list of actions to be executed.
	NotifyBulkJonFinished(ctx context.Context, in *BulkJobEventData, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type dataproxyHostClient struct {
	cc grpc.ClientConnInterface
}

func NewDataproxyHostClient(cc grpc.ClientConnInterface) DataproxyHostClient {
	return &dataproxyHostClient{cc}
}

func (c *dataproxyHostClient) NotifyBulkJonFinished(ctx context.Context, in *BulkJobEventData, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, DataproxyHost_NotifyBulkJonFinished_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataproxyHostServer is the server API for DataproxyHost service.
// All implementations must embed UnimplementedDataproxyHostServer
// for forward compatibility
type DataproxyHostServer interface {
	// The method called by the Taskmaster to start a new job. The parameter contains the job specification and the list of actions to be executed.
	NotifyBulkJonFinished(context.Context, *BulkJobEventData) (*emptypb.Empty, error)
	mustEmbedUnimplementedDataproxyHostServer()
}

// UnimplementedDataproxyHostServer must be embedded to have forward compatible implementations.
type UnimplementedDataproxyHostServer struct {
}

func (UnimplementedDataproxyHostServer) NotifyBulkJonFinished(context.Context, *BulkJobEventData) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotifyBulkJonFinished not implemented")
}
func (UnimplementedDataproxyHostServer) mustEmbedUnimplementedDataproxyHostServer() {}

// UnsafeDataproxyHostServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DataproxyHostServer will
// result in compilation errors.
type UnsafeDataproxyHostServer interface {
	mustEmbedUnimplementedDataproxyHostServer()
}

func RegisterDataproxyHostServer(s grpc.ServiceRegistrar, srv DataproxyHostServer) {
	s.RegisterService(&DataproxyHost_ServiceDesc, srv)
}

func _DataproxyHost_NotifyBulkJonFinished_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BulkJobEventData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataproxyHostServer).NotifyBulkJonFinished(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DataproxyHost_NotifyBulkJonFinished_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataproxyHostServer).NotifyBulkJonFinished(ctx, req.(*BulkJobEventData))
	}
	return interceptor(ctx, in, info, handler)
}

// DataproxyHost_ServiceDesc is the grpc.ServiceDesc for DataproxyHost service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var DataproxyHost_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pbdataproxy.DataproxyHost",
	HandlerType: (*DataproxyHostServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NotifyBulkJonFinished",
			Handler:    _DataproxyHost_NotifyBulkJonFinished_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protobuf/pbdataproxy/pbdataproxy.proto",
}
