package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.73

import (
	"context"
	"fmt"

	"github.com/cybroslabs/hes-2-apis/graph/model"
)

// ListBulks is the resolver for the listBulks field.
func (r *queryResolver) ListBulks(ctx context.Context) (*model.ListOfBulk, error) {
	panic(fmt.Errorf("not implemented: ListBulks - listBulks"))
}

// ListBulkJobs is the resolver for the listBulkJobs field.
func (r *queryResolver) ListBulkJobs(ctx context.Context) (*model.ListOfBulkJob, error) {
	panic(fmt.Errorf("not implemented: ListBulkJobs - listBulkJobs"))
}

// GetBulkJob is the resolver for the getBulkJob field.
func (r *queryResolver) GetBulkJob(ctx context.Context) (*model.BulkJob, error) {
	panic(fmt.Errorf("not implemented: GetBulkJob - getBulkJob"))
}

// UpdateBulkJob is the resolver for the updateBulkJob field.
func (r *queryResolver) UpdateBulkJob(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: UpdateBulkJob - updateBulkJob"))
}

// CancelBulk is the resolver for the cancelBulk field.
func (r *queryResolver) CancelBulk(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: CancelBulk - cancelBulk"))
}

// CreateProxyBulk is the resolver for the createProxyBulk field.
func (r *queryResolver) CreateProxyBulk(ctx context.Context) (*model.StringValue, error) {
	panic(fmt.Errorf("not implemented: CreateProxyBulk - createProxyBulk"))
}

// GetProxyBulk is the resolver for the getProxyBulk field.
func (r *queryResolver) GetProxyBulk(ctx context.Context) (*model.ProxyBulk, error) {
	panic(fmt.Errorf("not implemented: GetProxyBulk - getProxyBulk"))
}

// CreateBulk is the resolver for the createBulk field.
func (r *queryResolver) CreateBulk(ctx context.Context) (*model.StringValue, error) {
	panic(fmt.Errorf("not implemented: CreateBulk - createBulk"))
}

// GetBulk is the resolver for the getBulk field.
func (r *queryResolver) GetBulk(ctx context.Context) (*model.Bulk, error) {
	panic(fmt.Errorf("not implemented: GetBulk - getBulk"))
}

// UpdateBulk is the resolver for the updateBulk field.
func (r *queryResolver) UpdateBulk(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: UpdateBulk - updateBulk"))
}

// GetApplicationConfig is the resolver for the getApplicationConfig field.
func (r *queryResolver) GetApplicationConfig(ctx context.Context) (*model.ApplicationConfigDescriptor, error) {
	panic(fmt.Errorf("not implemented: GetApplicationConfig - getApplicationConfig"))
}

// UpdateApplicationConfig is the resolver for the updateApplicationConfig field.
func (r *queryResolver) UpdateApplicationConfig(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: UpdateApplicationConfig - updateApplicationConfig"))
}

// SynchronizeComponentConfig is the resolver for the synchronizeComponentConfig field.
func (r *queryResolver) SynchronizeComponentConfig(ctx context.Context) (*model.ComponentConfig, error) {
	panic(fmt.Errorf("not implemented: SynchronizeComponentConfig - synchronizeComponentConfig"))
}

// CreateDeviceConfigurationRegister is the resolver for the createDeviceConfigurationRegister field.
func (r *queryResolver) CreateDeviceConfigurationRegister(ctx context.Context) (*model.StringValue, error) {
	panic(fmt.Errorf("not implemented: CreateDeviceConfigurationRegister - createDeviceConfigurationRegister"))
}

// ListDeviceConfigurationRegisters is the resolver for the listDeviceConfigurationRegisters field.
func (r *queryResolver) ListDeviceConfigurationRegisters(ctx context.Context) (*model.ListOfDeviceConfigurationRegister, error) {
	panic(fmt.Errorf("not implemented: ListDeviceConfigurationRegisters - listDeviceConfigurationRegisters"))
}

// GetDeviceConfigurationRegister is the resolver for the getDeviceConfigurationRegister field.
func (r *queryResolver) GetDeviceConfigurationRegister(ctx context.Context) (*model.DeviceConfigurationRegister, error) {
	panic(fmt.Errorf("not implemented: GetDeviceConfigurationRegister - getDeviceConfigurationRegister"))
}

// UpdateDeviceConfigurationRegister is the resolver for the updateDeviceConfigurationRegister field.
func (r *queryResolver) UpdateDeviceConfigurationRegister(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: UpdateDeviceConfigurationRegister - updateDeviceConfigurationRegister"))
}

// DeleteDeviceConfigurationRegister is the resolver for the deleteDeviceConfigurationRegister field.
func (r *queryResolver) DeleteDeviceConfigurationRegister(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: DeleteDeviceConfigurationRegister - deleteDeviceConfigurationRegister"))
}

// CreateDeviceConfigurationTemplate is the resolver for the createDeviceConfigurationTemplate field.
func (r *queryResolver) CreateDeviceConfigurationTemplate(ctx context.Context) (*model.StringValue, error) {
	panic(fmt.Errorf("not implemented: CreateDeviceConfigurationTemplate - createDeviceConfigurationTemplate"))
}

// ListDeviceConfigurationTemplates is the resolver for the listDeviceConfigurationTemplates field.
func (r *queryResolver) ListDeviceConfigurationTemplates(ctx context.Context) (*model.ListOfDeviceConfigurationTemplate, error) {
	panic(fmt.Errorf("not implemented: ListDeviceConfigurationTemplates - listDeviceConfigurationTemplates"))
}

// GetDeviceConfigurationTemplate is the resolver for the getDeviceConfigurationTemplate field.
func (r *queryResolver) GetDeviceConfigurationTemplate(ctx context.Context) (*model.DeviceConfigurationTemplate, error) {
	panic(fmt.Errorf("not implemented: GetDeviceConfigurationTemplate - getDeviceConfigurationTemplate"))
}

// UpdateDeviceConfigurationTemplate is the resolver for the updateDeviceConfigurationTemplate field.
func (r *queryResolver) UpdateDeviceConfigurationTemplate(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: UpdateDeviceConfigurationTemplate - updateDeviceConfigurationTemplate"))
}

// DeleteDeviceConfigurationTemplate is the resolver for the deleteDeviceConfigurationTemplate field.
func (r *queryResolver) DeleteDeviceConfigurationTemplate(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: DeleteDeviceConfigurationTemplate - deleteDeviceConfigurationTemplate"))
}

// AddDeviceConfigurationRegisterToDeviceConfigurationTemplate is the resolver for the addDeviceConfigurationRegisterToDeviceConfigurationTemplate field.
func (r *queryResolver) AddDeviceConfigurationRegisterToDeviceConfigurationTemplate(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: AddDeviceConfigurationRegisterToDeviceConfigurationTemplate - addDeviceConfigurationRegisterToDeviceConfigurationTemplate"))
}

// RemoveDeviceConfigurationRegisterFromDeviceConfigurationTemplate is the resolver for the removeDeviceConfigurationRegisterFromDeviceConfigurationTemplate field.
func (r *queryResolver) RemoveDeviceConfigurationRegisterFromDeviceConfigurationTemplate(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: RemoveDeviceConfigurationRegisterFromDeviceConfigurationTemplate - removeDeviceConfigurationRegisterFromDeviceConfigurationTemplate"))
}

// CreateCommunicationUnit is the resolver for the createCommunicationUnit field.
func (r *queryResolver) CreateCommunicationUnit(ctx context.Context) (*model.StringValue, error) {
	panic(fmt.Errorf("not implemented: CreateCommunicationUnit - createCommunicationUnit"))
}

// UpdateCommunicationUnit is the resolver for the updateCommunicationUnit field.
func (r *queryResolver) UpdateCommunicationUnit(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: UpdateCommunicationUnit - updateCommunicationUnit"))
}

// ListCommunicationUnits is the resolver for the listCommunicationUnits field.
func (r *queryResolver) ListCommunicationUnits(ctx context.Context) (*model.ListOfCommunicationUnit, error) {
	panic(fmt.Errorf("not implemented: ListCommunicationUnits - listCommunicationUnits"))
}

// GetCommunicationUnit is the resolver for the getCommunicationUnit field.
func (r *queryResolver) GetCommunicationUnit(ctx context.Context) (*model.CommunicationUnit, error) {
	panic(fmt.Errorf("not implemented: GetCommunicationUnit - getCommunicationUnit"))
}

// CreateCommunicationBus is the resolver for the createCommunicationBus field.
func (r *queryResolver) CreateCommunicationBus(ctx context.Context) (*model.StringValue, error) {
	panic(fmt.Errorf("not implemented: CreateCommunicationBus - createCommunicationBus"))
}

// ListCommunicationBuses is the resolver for the listCommunicationBuses field.
func (r *queryResolver) ListCommunicationBuses(ctx context.Context) (*model.ListOfCommunicationBus, error) {
	panic(fmt.Errorf("not implemented: ListCommunicationBuses - listCommunicationBuses"))
}

// AddCommunicationUnitsToCommunicationBus is the resolver for the addCommunicationUnitsToCommunicationBus field.
func (r *queryResolver) AddCommunicationUnitsToCommunicationBus(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: AddCommunicationUnitsToCommunicationBus - addCommunicationUnitsToCommunicationBus"))
}

// RemoveCommunicationUnitsFromCommunicationBus is the resolver for the removeCommunicationUnitsFromCommunicationBus field.
func (r *queryResolver) RemoveCommunicationUnitsFromCommunicationBus(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: RemoveCommunicationUnitsFromCommunicationBus - removeCommunicationUnitsFromCommunicationBus"))
}

// CreateDevice is the resolver for the createDevice field.
func (r *queryResolver) CreateDevice(ctx context.Context) (*model.StringValue, error) {
	panic(fmt.Errorf("not implemented: CreateDevice - createDevice"))
}

// UpdateDevice is the resolver for the updateDevice field.
func (r *queryResolver) UpdateDevice(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: UpdateDevice - updateDevice"))
}

// ListDevices is the resolver for the listDevices field.
func (r *queryResolver) ListDevices(ctx context.Context) (*model.ListOfDevice, error) {
	panic(fmt.Errorf("not implemented: ListDevices - listDevices"))
}

// GetDevice is the resolver for the getDevice field.
func (r *queryResolver) GetDevice(ctx context.Context) (*model.Device, error) {
	panic(fmt.Errorf("not implemented: GetDevice - getDevice"))
}

// GetDeviceInfo is the resolver for the getDeviceInfo field.
func (r *queryResolver) GetDeviceInfo(ctx context.Context) (*model.DeviceInfo, error) {
	panic(fmt.Errorf("not implemented: GetDeviceInfo - getDeviceInfo"))
}

// SetDeviceCommunicationUnits is the resolver for the setDeviceCommunicationUnits field.
func (r *queryResolver) SetDeviceCommunicationUnits(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: SetDeviceCommunicationUnits - setDeviceCommunicationUnits"))
}

// GetDeviceCommunicationUnits is the resolver for the getDeviceCommunicationUnits field.
func (r *queryResolver) GetDeviceCommunicationUnits(ctx context.Context) (*model.ListOfDeviceCommunicationUnit, error) {
	panic(fmt.Errorf("not implemented: GetDeviceCommunicationUnits - getDeviceCommunicationUnits"))
}

// CreateDeviceGroup is the resolver for the createDeviceGroup field.
func (r *queryResolver) CreateDeviceGroup(ctx context.Context) (*model.StringValue, error) {
	panic(fmt.Errorf("not implemented: CreateDeviceGroup - createDeviceGroup"))
}

// ListDeviceGroups is the resolver for the listDeviceGroups field.
func (r *queryResolver) ListDeviceGroups(ctx context.Context) (*model.ListOfDeviceGroup, error) {
	panic(fmt.Errorf("not implemented: ListDeviceGroups - listDeviceGroups"))
}

// GetDeviceGroup is the resolver for the getDeviceGroup field.
func (r *queryResolver) GetDeviceGroup(ctx context.Context) (*model.DeviceGroup, error) {
	panic(fmt.Errorf("not implemented: GetDeviceGroup - getDeviceGroup"))
}

// AddDevicesToGroup is the resolver for the addDevicesToGroup field.
func (r *queryResolver) AddDevicesToGroup(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: AddDevicesToGroup - addDevicesToGroup"))
}

// RemoveDevicesFromGroup is the resolver for the removeDevicesFromGroup field.
func (r *queryResolver) RemoveDevicesFromGroup(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: RemoveDevicesFromGroup - removeDevicesFromGroup"))
}

// ListDeviceGroupDevices is the resolver for the listDeviceGroupDevices field.
func (r *queryResolver) ListDeviceGroupDevices(ctx context.Context) (*model.ListOfDevice, error) {
	panic(fmt.Errorf("not implemented: ListDeviceGroupDevices - listDeviceGroupDevices"))
}

// ListModemPools is the resolver for the listModemPools field.
func (r *queryResolver) ListModemPools(ctx context.Context) (*model.ListOfModemPool, error) {
	panic(fmt.Errorf("not implemented: ListModemPools - listModemPools"))
}

// GetModemPool is the resolver for the getModemPool field.
func (r *queryResolver) GetModemPool(ctx context.Context) (*model.ModemPool, error) {
	panic(fmt.Errorf("not implemented: GetModemPool - getModemPool"))
}

// CreateModemPool is the resolver for the createModemPool field.
func (r *queryResolver) CreateModemPool(ctx context.Context) (*model.StringValue, error) {
	panic(fmt.Errorf("not implemented: CreateModemPool - createModemPool"))
}

// UpdateModemPool is the resolver for the updateModemPool field.
func (r *queryResolver) UpdateModemPool(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: UpdateModemPool - updateModemPool"))
}

// DeleteModemPool is the resolver for the deleteModemPool field.
func (r *queryResolver) DeleteModemPool(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: DeleteModemPool - deleteModemPool"))
}

// CreateModem is the resolver for the createModem field.
func (r *queryResolver) CreateModem(ctx context.Context) (*model.StringValue, error) {
	panic(fmt.Errorf("not implemented: CreateModem - createModem"))
}

// UpdateModem is the resolver for the updateModem field.
func (r *queryResolver) UpdateModem(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: UpdateModem - updateModem"))
}

// DeleteModem is the resolver for the deleteModem field.
func (r *queryResolver) DeleteModem(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: DeleteModem - deleteModem"))
}

// ListDrivers is the resolver for the listDrivers field.
func (r *queryResolver) ListDrivers(ctx context.Context) (*model.ListOfDriver, error) {
	panic(fmt.Errorf("not implemented: ListDrivers - listDrivers"))
}

// GetDriver is the resolver for the getDriver field.
func (r *queryResolver) GetDriver(ctx context.Context) (*model.Driver, error) {
	panic(fmt.Errorf("not implemented: GetDriver - getDriver"))
}

// ListFieldDescriptors is the resolver for the listFieldDescriptors field.
func (r *queryResolver) ListFieldDescriptors(ctx context.Context) (*model.ListOfFieldDescriptor, error) {
	panic(fmt.Errorf("not implemented: ListFieldDescriptors - listFieldDescriptors"))
}

// GetMeterDataRegisters is the resolver for the getMeterDataRegisters field.
func (r *queryResolver) GetMeterDataRegisters(ctx context.Context) (*model.RegisterValues, error) {
	panic(fmt.Errorf("not implemented: GetMeterDataRegisters - getMeterDataRegisters"))
}

// GetMeterDataProfiles is the resolver for the getMeterDataProfiles field.
func (r *queryResolver) GetMeterDataProfiles(ctx context.Context) (*model.ProfileValues, error) {
	panic(fmt.Errorf("not implemented: GetMeterDataProfiles - getMeterDataProfiles"))
}

// GetMeterDataIrregularProfiles is the resolver for the getMeterDataIrregularProfiles field.
func (r *queryResolver) GetMeterDataIrregularProfiles(ctx context.Context) (*model.IrregularProfileValues, error) {
	panic(fmt.Errorf("not implemented: GetMeterDataIrregularProfiles - getMeterDataIrregularProfiles"))
}

// GetMeterEvents is the resolver for the getMeterEvents field.
func (r *queryResolver) GetMeterEvents(ctx context.Context) (*model.EventRecords, error) {
	panic(fmt.Errorf("not implemented: GetMeterEvents - getMeterEvents"))
}

// CreateTimeOfUseTable is the resolver for the createTimeOfUseTable field.
func (r *queryResolver) CreateTimeOfUseTable(ctx context.Context) (*model.StringValue, error) {
	panic(fmt.Errorf("not implemented: CreateTimeOfUseTable - createTimeOfUseTable"))
}

// ListTimeOfUseTables is the resolver for the listTimeOfUseTables field.
func (r *queryResolver) ListTimeOfUseTables(ctx context.Context) (*model.ListOfTimeOfUseTable, error) {
	panic(fmt.Errorf("not implemented: ListTimeOfUseTables - listTimeOfUseTables"))
}

// GetTimeOfUseTable is the resolver for the getTimeOfUseTable field.
func (r *queryResolver) GetTimeOfUseTable(ctx context.Context) (*model.TimeOfUseTable, error) {
	panic(fmt.Errorf("not implemented: GetTimeOfUseTable - getTimeOfUseTable"))
}

// UpdateTimeOfUseTable is the resolver for the updateTimeOfUseTable field.
func (r *queryResolver) UpdateTimeOfUseTable(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: UpdateTimeOfUseTable - updateTimeOfUseTable"))
}

// DeleteTimeOfUseTable is the resolver for the deleteTimeOfUseTable field.
func (r *queryResolver) DeleteTimeOfUseTable(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: DeleteTimeOfUseTable - deleteTimeOfUseTable"))
}

// CreateVariable is the resolver for the createVariable field.
func (r *queryResolver) CreateVariable(ctx context.Context) (*model.StringValue, error) {
	panic(fmt.Errorf("not implemented: CreateVariable - createVariable"))
}

// ListVariables is the resolver for the listVariables field.
func (r *queryResolver) ListVariables(ctx context.Context) (*model.ListOfVariable, error) {
	panic(fmt.Errorf("not implemented: ListVariables - listVariables"))
}

// UpdateVariable is the resolver for the updateVariable field.
func (r *queryResolver) UpdateVariable(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: UpdateVariable - updateVariable"))
}

// DeleteVariable is the resolver for the deleteVariable field.
func (r *queryResolver) DeleteVariable(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: DeleteVariable - deleteVariable"))
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
