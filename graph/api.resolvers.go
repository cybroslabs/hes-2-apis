package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.63

import (
	"context"
	"fmt"

	"github.com/cybroslabs/hes-2-apis/graph/model"
)

// CreateBulk is the resolver for the createBulk field.
func (r *queryResolver) CreateBulk(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: CreateBulk - createBulk"))
}

// GetBulks is the resolver for the getBulks field.
func (r *queryResolver) GetBulks(ctx context.Context) (*model.GetBulksResponse, error) {
	panic(fmt.Errorf("not implemented: GetBulks - getBulks"))
}

// GetBulk is the resolver for the getBulk field.
func (r *queryResolver) GetBulk(ctx context.Context) (*model.GetBulkResponse, error) {
	panic(fmt.Errorf("not implemented: GetBulk - getBulk"))
}

// GetJobStatus is the resolver for the getJobStatus field.
func (r *queryResolver) GetJobStatus(ctx context.Context) (*model.GetJobStatusResponse, error) {
	panic(fmt.Errorf("not implemented: GetJobStatus - getJobStatus"))
}

// CancelBulk is the resolver for the cancelBulk field.
func (r *queryResolver) CancelBulk(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: CancelBulk - cancelBulk"))
}

// CancelJobs is the resolver for the cancelJobs field.
func (r *queryResolver) CancelJobs(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: CancelJobs - cancelJobs"))
}

// GetConfig is the resolver for the getConfig field.
func (r *queryResolver) GetConfig(ctx context.Context) (*model.SystemConfig, error) {
	panic(fmt.Errorf("not implemented: GetConfig - getConfig"))
}

// SetConfig is the resolver for the setConfig field.
func (r *queryResolver) SetConfig(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: SetConfig - setConfig"))
}

// CreateCommunicationUnit is the resolver for the createCommunicationUnit field.
func (r *queryResolver) CreateCommunicationUnit(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: CreateCommunicationUnit - createCommunicationUnit"))
}

// GetCommunicationUnits is the resolver for the getCommunicationUnits field.
func (r *queryResolver) GetCommunicationUnits(ctx context.Context) (*model.GetCommunicationUnitsResponse, error) {
	panic(fmt.Errorf("not implemented: GetCommunicationUnits - getCommunicationUnits"))
}

// CreateDevice is the resolver for the createDevice field.
func (r *queryResolver) CreateDevice(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: CreateDevice - createDevice"))
}

// GetDevices is the resolver for the getDevices field.
func (r *queryResolver) GetDevices(ctx context.Context) (*model.GetDevicesResponse, error) {
	panic(fmt.Errorf("not implemented: GetDevices - getDevices"))
}

// SetDeviceCommunicationUnits is the resolver for the setDeviceCommunicationUnits field.
func (r *queryResolver) SetDeviceCommunicationUnits(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: SetDeviceCommunicationUnits - setDeviceCommunicationUnits"))
}

// GetDevicesCommunicationUnits is the resolver for the getDevicesCommunicationUnits field.
func (r *queryResolver) GetDevicesCommunicationUnits(ctx context.Context) (*model.GetDevicesCommunicationUnitsResponse, error) {
	panic(fmt.Errorf("not implemented: GetDevicesCommunicationUnits - getDevicesCommunicationUnits"))
}

// CreateDeviceGroup is the resolver for the createDeviceGroup field.
func (r *queryResolver) CreateDeviceGroup(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: CreateDeviceGroup - createDeviceGroup"))
}

// GetDeviceGroups is the resolver for the getDeviceGroups field.
func (r *queryResolver) GetDeviceGroups(ctx context.Context) (*model.GetDeviceGroupsResponse, error) {
	panic(fmt.Errorf("not implemented: GetDeviceGroups - getDeviceGroups"))
}

// GetDeviceGroup is the resolver for the getDeviceGroup field.
func (r *queryResolver) GetDeviceGroup(ctx context.Context) (*model.GetDeviceGroupResponse, error) {
	panic(fmt.Errorf("not implemented: GetDeviceGroup - getDeviceGroup"))
}

// AddDevicesToGroup is the resolver for the addDevicesToGroup field.
func (r *queryResolver) AddDevicesToGroup(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: AddDevicesToGroup - addDevicesToGroup"))
}

// RemoveDevicesFromGroup is the resolver for the removeDevicesFromGroup field.
func (r *queryResolver) RemoveDevicesFromGroup(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: RemoveDevicesFromGroup - removeDevicesFromGroup"))
}

// GetModemPools is the resolver for the getModemPools field.
func (r *queryResolver) GetModemPools(ctx context.Context) (*model.GetModemPoolsResponse, error) {
	panic(fmt.Errorf("not implemented: GetModemPools - getModemPools"))
}

// GetModemPool is the resolver for the getModemPool field.
func (r *queryResolver) GetModemPool(ctx context.Context) (*model.GetModemPoolResponse, error) {
	panic(fmt.Errorf("not implemented: GetModemPool - getModemPool"))
}

// CreateModemPool is the resolver for the createModemPool field.
func (r *queryResolver) CreateModemPool(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: CreateModemPool - createModemPool"))
}

// UpdateModemPool is the resolver for the updateModemPool field.
func (r *queryResolver) UpdateModemPool(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: UpdateModemPool - updateModemPool"))
}

// DeleteModemPool is the resolver for the deleteModemPool field.
func (r *queryResolver) DeleteModemPool(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: DeleteModemPool - deleteModemPool"))
}

// CreateModem is the resolver for the createModem field.
func (r *queryResolver) CreateModem(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: CreateModem - createModem"))
}

// UpdateModem is the resolver for the updateModem field.
func (r *queryResolver) UpdateModem(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: UpdateModem - updateModem"))
}

// DeleteModem is the resolver for the deleteModem field.
func (r *queryResolver) DeleteModem(ctx context.Context) (*model.Empty, error) {
	panic(fmt.Errorf("not implemented: DeleteModem - deleteModem"))
}

// GetDrivers is the resolver for the getDrivers field.
func (r *queryResolver) GetDrivers(ctx context.Context) (*model.GetDriversResponse, error) {
	panic(fmt.Errorf("not implemented: GetDrivers - getDrivers"))
}

// GetDriverTemplates is the resolver for the getDriverTemplates field.
func (r *queryResolver) GetDriverTemplates(ctx context.Context) (*model.DriverTemplates, error) {
	panic(fmt.Errorf("not implemented: GetDriverTemplates - getDriverTemplates"))
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
