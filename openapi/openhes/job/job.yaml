openapi: "3.0.3"
info:
  version: 0.1.0
  title: Common API models for OpenHES
  license:
    name: BSL-1.0
    url: https://opensource.org/licenses/BSL-1.0
  contact:
    name: Cybros Labs team
    email: info@cybroslabs.com
    url: https://www.cybroslabs.com/index-en.html

components:
  schemas:
    JobStatusCodeEnumSchema:
      type: integer
      description: The status of the job.
      enum: [0, 1, 2, 3, 4]
      x-enum-varnames:
        - QUEUED
        - RUNNING
        - COMPLETED
        - CANCELLED
        - EXPIRED
      x-enum-descriptions:
        - The job is queued for processing. This status is also set after an attempt fails.
        - The job is currently being processed.
        - The job is completed.
        - The job has been cancelled.
        - The job has expired.

    JobErrorCodeSchema:
      type: string
      enum:
        - NONE
        - ERROR
        - FATAL
      description: >
        The result of the job.
          * `NONE` - No error, the job has been successfully processed.
          * `ERROR` - Some error(s) have occurred during the processing of the job.
          * `FATAL` - The job could not be processed due to a fatal error.

    JobStatusSchema:
      description: Schema that describes the status of a job.
      type: object
      properties:
        startedAt:
          description: >
            The time when the driver started processing the job.
          type: string
          format: date-time
          nullable: true
        finishedAt:
          description: >
            The time when the driver finished processing the job.
          type: string
          format: date-time
          nullable: true
        status:
          $ref: "#/components/schemas/JobStatusCodeEnumSchema"
        code:
          $ref: "#/components/schemas/JobErrorCodeSchema"
        results:
          description: >
            The results of the actions. If an action has not been processed, the result is not present.
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/JobActionResultSchema"
      required:
        - status
        - code

    ConnectionTypeTcpIpSchema:
      type: object
      description: >
        Schema that describes the TCP/IP connection.
      properties:
        type_tcp:
          type: integer
          minimum: 1
          maximum: 1
        host:
          type: string
          description: >
            The IP address or the hostname of the device.
        port:
          type: integer
          description: >
            The port number of the device.
          minimum: 1
          maximum: 65535
      required:
        - type_tcp
        - host
        - port

    ConnectionTypePhoneLineSchema:
      type: object
      description: >
        Schema that describes the phone line (modem) connection.
      properties:
        type_modem:
          type: integer
          minimum: 1
          maximum: 1
        number:
          type: string
          description: >
            The phone number of the device.
          minLength: 1
        pool_id:
          type: string
          description: >
            The modem pool ID.
          format: uuid
      required:
        - type_modem
        - number
        - pool_id

    ConnectionTypeSerialMoxaSchema:
      type: object
      description: >
        Schema that describes the MOXA connection.
      properties:
        type_moxa:
          type: integer
          minimum: 1
          maximum: 1
        host:
          type: string
          description: >
            The IP address or the hostname of the device.
        dataPort:
          type: integer
          description: >
            The port number of the device.
          minimum: 1
          maximum: 65535
        commandPort:
          type: integer
          description: >
            The port number of the device.
          minimum: 1
          maximum: 65535
      required:
        - type_moxa
        - host
        - dataPort
        - commandPort

    ConnectionInfoSchema:
      allOf:
        - type: object
          properties:
            linkProtocol:
              $ref: "../driver/driver.yaml#/components/schemas/DataLinkProtocolSchema"
        - oneOf:
          - $ref: "#/components/schemas/ConnectionTypeTcpIpSchema"
          - $ref: "#/components/schemas/ConnectionTypePhoneLineSchema"
          - $ref: "#/components/schemas/ConnectionTypeSerialMoxaSchema"

    JobDeviceSchema:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/JobID"
        deviceId:
          type: string
          description: >
            The ID of the device.
          format: uuid
      required:
        - id
        - deviceId

    JobCustomDeviceSchema:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/JobID"
        externalID:
          type: string
          description: >
            The public ID of the device.
          nullable: true
        connectionInfo:
          type: array
          description: >
            The connection information of the device.
          minItems: 1
          items:
            $ref: "#/components/schemas/ConnectionInfoSchema"
        deviceAttributes:
          $ref: "#/components/schemas/AttributesSchema"
        applicationProtocol:
          $ref: "../driver/driver.yaml#/components/schemas/ApplicationProtocolSchema"
        timezone:
          type: string
          description: >
            The timezone of the device.
          nullable: true
      required:
        - id
        - connectionInfo
        - deviceAttributes

    JobDeviceListSchema:
      type: array
      description: >
        List of device identifiers to be queued, look for devices in device registry.
      minLength: 1
      items:
        $ref: "#/components/schemas/JobDeviceSchema"

    JobCustomDeviceListSchema:
      type: array
      description: >
        List of custom-devices to be queued.
      minLength: 1
      items:
        $ref: "#/components/schemas/JobCustomDeviceSchema"

    JobActionSchema:
      description: Schema that describes actions.
      oneOf:
        - $ref: "#/components/schemas/JobActionGetRegisterSchema"
        - $ref: "#/components/schemas/JobActionGetPeriodicalProfileSchema"
        - $ref: "#/components/schemas/JobActionGetIrregularProfileSchema"
        - $ref: "#/components/schemas/JobActionGetEventsSchema"
        - $ref: "#/components/schemas/JobActionGetClockSchema"
        - $ref: "#/components/schemas/JobActionSyncClockSchema"
        - $ref: "#/components/schemas/JobActionGetRelayStateSchema"
        - $ref: "#/components/schemas/JobActionSetRelayStateSchema"
        - $ref: "#/components/schemas/JobActionGetDisconnectorStateSchema"
        - $ref: "#/components/schemas/JobActionSetDisconnectorStateSchema"
        - $ref: "#/components/schemas/JobActionGetTouSchema"
        - $ref: "#/components/schemas/JobActionSetTouSchema"
        - $ref: "#/components/schemas/JobActionGetLimiterSchema"
        - $ref: "#/components/schemas/JobActionSetLimiterSchema"
        - $ref: "#/components/schemas/JobActionResetBillingPeriodSchema"
        - $ref: "#/components/schemas/JobActionFwUpdateSchema"

    JobActionCommonSchema:
      type: object
      description: >
        Common fields shared for all actions.
      properties:
        id:
          $ref: "#/components/schemas/ActionID"
        attributes:
          $ref: "#/components/schemas/AttributesSchema"
      required:
        - id
        - attributes

    JobActionGetRegisterSchema:
      description: Schema that describes the action to get a register.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type_get_register:
              type: integer
              minimum: 1
              maximum: 1
          required:
            - type_get_register

    JobActionGetPeriodicalProfileSchema:
      description: Schema that describes the action to get a periodical profile.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type_get_periodical_profile:
              type: integer
              minimum: 1
              maximum: 1
            param_tfrom:
              type: string
              format: date-time
              description: >
                The start time of the profile data.
            param_tto:
              type: string
              format: date-time
              description: >
                The end time of the profile data.
          required:
            - type_get_periodical_profile

    JobActionGetIrregularProfileSchema:
      description: Schema that describes the action to get an irregular profile.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type_get_irregular_profile:
              type: integer
              minimum: 1
              maximum: 1
          required:
            - type_get_irregular_profile

    JobActionGetEventsSchema:
      description: Schema that describes the action to get events.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type_get_events:
              type: integer
              minimum: 1
              maximum: 1
          required:
            - type_get_events

    JobActionGetClockSchema:
      description: Schema that describes the action to get the clock.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type_get_clock:
              type: integer
              minimum: 1
              maximum: 1
          required:
            - type_get_clock

    JobActionSyncClockSchema:
      description: Schema that describes the action to synchronize the clock.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type_sync_clock:
              type: integer
              minimum: 1
              maximum: 1
          required:
            - type_sync_clock

    JobActionGetRelayStateSchema:
      description: Schema that describes the action to get the relay state.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type_get_relay_state:
              type: integer
              minimum: 1
              maximum: 1
          required:
            - type_get_relay_state

    JobActionSetRelayStateSchema:
      description: Schema that describes the action to set the relay state.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type_set_relay_state:
              type: integer
              minimum: 1
              maximum: 1
          required:
            - type_set_relay_state

    JobActionGetDisconnectorStateSchema:
      description: Schema that describes the action to get the disconnector state.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type_get_disconnector_state:
              type: integer
              minimum: 1
              maximum: 1
          required:
            - type_get_disconnector_state

    JobActionSetDisconnectorStateSchema:
      description: Schema that describes the action to set the disconnector state.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type_set_disconnector_state:
              type: integer
              minimum: 1
              maximum: 1
          required:
            - type_set_disconnector_state

    JobActionGetTouSchema:
      description: Schema that describes the action to get the time-of-use table.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type_get_tou:
              type: integer
              minimum: 1
              maximum: 1
          required:
            - type_get_tou

    JobActionSetTouSchema:
      description: Schema that describes the action to set the time-of-use table.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type_set_tou:
              type: integer
              minimum: 1
              maximum: 1
          required:
            - type_set_tou

    JobActionGetLimiterSchema:
      description: Schema that describes the action to get the limiter settings.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type_get_limiter:
              type: integer
              minimum: 1
              maximum: 1
          required:
            - type_get_limiter

    JobActionSetLimiterSchema:
      description: Schema that describes the action to set the limiter settings.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type_set_limiter:
              type: integer
              minimum: 1
              maximum: 1
          required:
            - type_set_limiter

    JobActionResetBillingPeriodSchema:
      description: Schema that describes the action to reset the billing period.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type_reset_billing_period:
              type: integer
              minimum: 1
              maximum: 1
          required:
            - type_reset_billing_period

    JobActionFwUpdateSchema:
      description: Schema that describes the action to start a firmware update.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type_fw_update:
              type: integer
              minimum: 1
              maximum: 1
          required:
            - type_fw_update

    JobActionListSchema:
      type: array
      description: >
        A list of actions to be processed. An empty array is not valid, at least one action must be present.
        The actions are processed in the same order as they are defined in the list.
      minLength: 1
      items:
        $ref: "#/components/schemas/JobActionSchema"

    JobActionResultSchema:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ActionID"
        code:
          type: string
          enum:
            - OK
            - UNSUPPORTED
            - ERROR
            - NOT_PROCESSED
          description: >
            The result of the action. If the action is successful, the value is true and vice versa.
              * `OK` - The action has been successfully processed.
              * `UNSUPPORTED` - The action is not supported by the driver.
              * `ERROR` - Some errors have occurred during the processing of the action.
              * `NOT_PROCESSED` - The action has not been processed.
        data:
          description: >
            The result data of the action.
          oneOf:
            - $ref: "../driver/driverdata/driverdata.yaml#/components/schemas/DeviceRegistersDataSchema"
            - $ref: "../driver/driverdata/driverdata.yaml#/components/schemas/DeviceProfileDataSchema"
      required:
        - id
        - code
        - data

    BulkSpecSchema:
      type: object
      description: >
        Schema that describes jobs for a specific driver type.
      properties:
        id:
          $ref: "#/components/schemas/BulkID"
        correlationID:
          type: string
          description: >
            The correlation ID of the bulk. The correlation ID is used to group bulks.
          nullable: true
        devices:
          oneOf:
            - $ref: "#/components/schemas/JobCustomDeviceListSchema"
            - $ref: "#/components/schemas/JobDeviceListSchema"
        settings:
          $ref: "#/components/schemas/JobSettingsSchema"
        actions:
          $ref: "#/components/schemas/JobActionListSchema"
        driverType:
          description: >
            The driver type related to the job. The type must be one of the supported driver types.
          type: string
          minLength: 1
        webhookURL:
          type: string
          description: >
            The URL of the webhook to send a notification when any job in the bulk is done.
          format: uri
          nullable: true
      required:
        - id
        - devices
        - actions
        - driverType

    BulkStatusEnumSchema:
      type: integer
      description: The status of a bulk.
      enum: [0, 1, 2, 3, 4]
      x-enum-varnames:
        - QUEUED
        - RUNNING
        - COMPLETED
        - CANCELLED
        - EXPIRED
      x-enum-descriptions:
        - The bulk is queued for processing. This status is also set after an attempt fails.
        - The bulk is currently being processed.
        - The bulk is completed.
        - The bulk has been cancelled.
        - The bulk has expired.

    BulkStatusSchema:
      description: Schema that describes the bulk status.
      type: object
      properties:
        startedAt:
          description: >
            The time when the bulk has been queued for processing.
          type: string
          format: date-time
          nullable: true
        finishedAt:
          description: >
            The time when the bulk has been marked as completed.
          type: string
          format: date-time
          nullable: true
        status:
          $ref: "#/components/schemas/BulkStatusEnumSchema"
      required:
        - status

    # map[string](string|boolean|int|float|binary)
    AttributesSchema:
      type: object
      description: >
        Schema that describes a set of attributes and their values.
        The key is the property name and the value is the property value.
        The value can be of type string, integer, number, boolean, binary, or null.
      x-go-type: attribute.Attributes
      x-go-type-import:
        path: github.com/cybroslabs/hes-2-apis/openapi/openhes/attribute
      additionalProperties:
        anyOf:
          - type: string
          - type: integer
          - type: number
          - type: boolean
        nullable: true

    BulkID:
      type: string
      description: >
        The ID of the job bulk. The ID must be unique across all OpenHES components.
      format: uuid

    JobID:
      type: string
      description: >
        The ID of the job. The ID must be unique across all OpenHES components.
      format: uuid

    ActionID:
      type: string
      format: uuid
      description: >
        The ID of the action.

    JobSettingsSchema:
      type: object
      description: >
        Schema that describes job settings.
      example:
        maxDuration: 3600
        priority: 0
        attempts: [1]
        retryDelay: 60
        deferStart: 0
        expiresAt: "2027-12-31T23:59:59Z"
      properties:
        maxDuration:
          description: The maximum duration in seconds to process the job.
          type: integer
          format: int64
          minimum: 15
          maximum: 7200
          default: 3600
        priority:
          description: The priority of the job. The lower the value, the lower the priority.
          type: integer
          format: int32
          minimum: 0
          maximum: 9
          default: 0
        attempts:
          description: The number of attempts to process the job per communication unit. The default is [1].
          type: array
          minItems: 1
          default: [1]
          items:
            type: integer
            format: int32
            minimum: 1
            maximum: 99
        retryDelay:
          description: The delay in seconds before retrying the job.
          type: integer
          format: int64
          minimum: 0
          maximum: 999
          default: 60
        deferStart:
          description: The delay in seconds before starting the first attempt of the job.
          type: integer
          format: int64
          minimum: 0
          maximum: 86400
          default: 0
        expiresAt:
          description: The time when the job expires.
          type: string
          format: date-time
