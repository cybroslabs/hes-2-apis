openapi: "3.1.0"
info:
  version: 0.1.0
  title: Common API models for OpenHES
  license:
    name: BSL-1.0
    url: https://opensource.org/licenses/BSL-1.0
  contact:
    name: Cybros Labs team
    email: info@cybroslabs.com
    url: https://www.cybroslabs.com/index-en.html

components:
  schemas:
    JobStatusCodeEnumSchema:
      type: integer
      description: The status of the job.
      enum: [0, 1, 2, 3, 4]
      x-enum-varnames:
        - QUEUED
        - RUNNING
        - COMPLETED
        - CANCELLED
        - EXPIRED
      x-enum-descriptions:
        - The job is queued for processing. This status is also set after attempt fails.
        - The job is currently being processed.
        - The job is completed.
        - The job has been cancelled.
        - The job has expired.

    JobErrorCodeSchema:
      type: string
      enum:
        - NONE
        - ERROR
        - FATAL
      description: >
        The result of the job.
          * `NONE` - No error, the job has been successfully processed.
          * `ERROR` - Some error(s) have occurred during the processing of the job.
          * `FATAL` - The job could not be processed due to a fatal error.

    JobStatusSchema:
      description: Schema that holds the status of the job.
      type: object
      properties:
        startedAt:
          description: >
            The time when the driver started processing the job.
          type: string
          format: date-time
          nullable: true
        finishedAt:
          description: >
            The time when the driver finished processing the job.
          type: string
          format: date-time
          nullable: true
        status:
          $ref: "#/components/schemas/JobStatusCodeEnumSchema"
        code:
          $ref: "#/components/schemas/JobErrorCodeSchema"
        results:
          description: >
            The results of the actions. If an action has not been processed, the result is not present.
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/JobActionResultSchema"
      required:
        - status
        - code

    JobDeviceSchema:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/JobID"
        externalID:
          type: string
          description: >
            The public ID of the device.         
        endpoint:
          description: >
            The endpoint of the device. Depending on the device driver supported technology, the endpoint can be an IP address, a hostname, a phone number or similar id.
          type: string
        communicationUnitAttributes:
          $ref: "#/components/schemas/AttributesSchema"
        deviceAttributes:
          $ref: "#/components/schemas/AttributesSchema"
      required:
        - id
        - endpoint
        - communicationUnitAttributes
        - deviceAttributes

    JobDeviceListSchema:
      type: array
      description: >
        List of devices to be queued.
      minLength: 1
      items:
        $ref: "#/components/schemas/JobDeviceSchema"

    JobActionSchema:
      description: Schema that holds the action definition.
      oneOf:
        - $ref: "#/components/schemas/JobActionGetRegisterSchema"
        - $ref: "#/components/schemas/JobActionGetPeriodicalProfileSchema"
        - $ref: "#/components/schemas/JobActionGetIrregularProfileSchema"
        - $ref: "#/components/schemas/JobActionGetEventsSchema"
        - $ref: "#/components/schemas/JobActionGetClockSchema"
        - $ref: "#/components/schemas/JobActionSyncClockSchema"
        - $ref: "#/components/schemas/JobActionGetRelayStateSchema"
        - $ref: "#/components/schemas/JobActionSetRelayStateSchema"
        - $ref: "#/components/schemas/JobActionGetDisconnectorStateSchema"
        - $ref: "#/components/schemas/JobActionSetDisconnectorStateSchema"
        - $ref: "#/components/schemas/JobActionGetTouSchema"
        - $ref: "#/components/schemas/JobActionSetTouSchema"
        - $ref: "#/components/schemas/JobActionGetLimiterSchema"
        - $ref: "#/components/schemas/JobActionSetLimiterSchema"
        - $ref: "#/components/schemas/JobActionResetBillingPeriodSchema"
        - $ref: "#/components/schemas/JobActionFwUpdateSchema"        
    
    JobActionCommonSchema:
      type: object
      description: >
        Common fields shared for all actions.
      properties:
        id:
          $ref: "#/components/schemas/ActionID"
        attributes:
          $ref: "#/components/schemas/AttributesSchema"
      required:
        - id
        - attributes
      
    JobActionGetRegisterSchema:
      description: Schema that holds the action definition to get register.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type:
              type: string
              pattern: '^GET_REGISTER$'
          required:
            - type

    JobActionGetPeriodicalProfileSchema:
      description: Schema that holds the action definition to get periodical profile.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type:
              type: string
              pattern: '^GET_PERIODICAL_PROFILE$'
            param_tfrom:
              type: string
              format: date-time
              description: >
                The start time of the profile data.
            param_tto:
              type: string
              format: date-time
              description: >
                The end time of the profile data.
          required:
            - type            

    JobActionGetIrregularProfileSchema:
      description: Schema that holds the action definition to get irregular profile.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type:
              type: string
              pattern: '^GET_IRREGULAR_PROFILE$'
          required:
            - type

    JobActionGetEventsSchema:
      description: Schema that holds the action definition to get events.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type:
              type: string
              pattern: '^GET_EVENTS$'
          required:
            - type

    JobActionGetClockSchema:
      description: Schema that holds the action definition to get clock.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type:
              type: string
              pattern: '^GET_CLOCK$'
          required:
            - type

    JobActionSyncClockSchema:
      description: Schema that holds the action definition to sync clock.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type:
              type: string
              pattern: '^SYNC_CLOCK$'
          required:
            - type

    JobActionGetRelayStateSchema:
      description: Schema that holds the action definition to get relay state.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type:
              type: string
              pattern: '^GET_RELAY_STATE$'
          required:
            - type

    JobActionSetRelayStateSchema:
      description: Schema that holds the action definition to set relay state.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type:
              type: string
              pattern: '^SET_RELAY_STATE$'
          required:
            - type

    JobActionGetDisconnectorStateSchema:
      description: Schema that holds the action definition to get disconnector state.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type:
              type: string
              pattern: '^GET_DISCONNECTOR_STATE$'
          required:
            - type

    JobActionSetDisconnectorStateSchema:
      description: Schema that holds the action definition to set disconnector state.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type:
              type: string
              pattern: '^SET_DISCONNECTOR_STATE$'
          required:
            - type

    JobActionGetTouSchema:
      description: Schema that holds the action definition to get time-of-use table.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type:
              type: string
              pattern: '^GET_TOU$'
          required:
            - type

    JobActionSetTouSchema:
      description: Schema that holds the action definition to set time-of-use table.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type:
              type: string
              pattern: '^SET_TOU$'
          required:
            - type

    JobActionGetLimiterSchema:
      description: Schema that holds the action definition to get limiter settings.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type:
              type: string
              pattern: '^GET_LIMITER$'
          required:
            - type

    JobActionSetLimiterSchema:
      description: Schema that holds the action definition to set limiter settings.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type:
              type: string
              pattern: '^SET_LIMITER$'
          required:
            - type

    JobActionResetBillingPeriodSchema:
      description: Schema that holds the action definition to reset billing period.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type:
              type: string
              pattern: '^RESET_BILLING_PERIOD$'
          required:
            - type

    JobActionFwUpdateSchema:
      description: Schema that holds the action definition to start firmware update.
      allOf:
        - $ref: "#/components/schemas/JobActionCommonSchema"
        - type: object
          properties:
            type:
              type: string
              pattern: '^FW_UPDATE$'
          required:
            - type

    JobActionListSchema:
      type: array
      description: >
        List of actions to be queued. The empty array is not valid, at least one action must be present.
        The actions are processed in the order they are defined in the list.
      minLength: 1
      items:
        $ref: "#/components/schemas/JobActionSchema"

    JobActionResultSchema:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ActionID"
        code:
          type: string
          enum:
            - OK
            - UNSUPPORTED
            - ERROR
            - NOT_PROCESSED
          description: >
            The result of the action. If the action was successful, the value is true and vice versa.
              * `OK` - The action has been successfully processed.
              * `UNSUPPORTED` - The action is not supported by the driver.
              * `ERROR` - Some error(s) have occurred during the processing of the action.
              * `NOT_PROCESSED` - The action has not been processed.
        data:
          description: >
            The result data of the action.
          oneOf:
            - $ref: "../driver/driverdata/driverdata.yaml#/components/schemas/DeviceRegistersDataSchema"
            - $ref: "../driver/driverdata/driverdata.yaml#/components/schemas/DeviceProfileDataSchema"
      required:
        - id
        - code
        - data

    BulkSpecSchema:
      type: object
      description: >
        Schema that holds the jobs for single device type.
      properties:
        id:
          $ref: "#/components/schemas/BulkID"
        correlationID:
          type: string
          description: >
            The correlation ID of the bulk. The correlation ID is used to group the bulks.
          nullable: true
        devices:
          $ref: "#/components/schemas/JobDeviceListSchema"
        settings:
          $ref: "#/components/schemas/JobSettingsSchema"
        actions:
          $ref: "#/components/schemas/JobActionListSchema"
        deviceDriverType:
          description: >
            The device type related to the job. The type must be one of the supported device types.
          type: string
          minLength: 1
        webhookURL:
          type: string
          description: >
            The URL of the webhook to send the notification when any job in the bulk is done.
          format: uri
          nullable: true
      required:
        - id
        - devices
        - actions
        - deviceDriverType

    BulkStatusEnumSchema:
      type: integer
      description: The status of the bulk.
      enum: [0, 1, 2, 3, 4]
      x-enum-varnames:
        - QUEUED
        - RUNNING
        - COMPLETED
        - CANCELLED
        - EXPIRED
      x-enum-descriptions:
        - The bulk is queued for processing. This status is also set after attempt fails.
        - The bulk is currently being processed.
        - The bulk is completed.
        - The bulk has been cancelled.
        - The bulk has expired.

    BulkStatusSchema:
      description: Schema that holds the status of the bulk of jobs.
      type: object
      properties:
        startedAt:
          description: >
            The time when the bulk has been queued for processing.
          type: string
          format: date-time
          nullable: true
        finishedAt:
          description: >
            The time when the bulk has been marked as completed.
          type: string
          format: date-time
          nullable: true
        status:
          $ref: "#/components/schemas/BulkStatusEnumSchema"
      required:
        - status

    # map[string](string|boolean|int|float|binary)
    AttributesSchema:
      type: object
      description: >
        Schema that holds a set of attributes and their values.
        The key is the property name and the value is the property value.
        The value can be of type string, integer, number, boolean, binary, or null.
      x-go-type: attribute.Attributes
      x-go-type-import:
        path: github.com/cybroslabs/hes-2-apis/openapi/openhes/attribute
      additionalProperties:
        anyOf:
          - type: string
          - type: integer
          - type: number
          - type: boolean
        nullable: true

    BulkID:
      type: string
      description: >
        The ID of the bulk job. The ID must be unique across the OpenHES components.
      format: uuid

    JobID:
      type: string
      description: >
        The ID of the job. The ID must be unique across the OpenHES components.
      format: uuid

    ActionID:
      type: string
      format: uuid
      description: >
        The ID of the action.

    ActionTypeSchema:
      type: string
      enum:
        - GET_REGISTER
        - GET_PERIODICAL_PROFILE
        - GET_IRREGULAR_PROFILE
        - GET_EVENTS
        - GET_CLOCK
        - SYNC_CLOCK
        - GET_RELAY_STATE
        - SET_RELAY_STATE
        - GET_DISCONNECTOR_STATE
        - SET_DISCONNECTOR_STATE
        - GET_TOU
        - SET_TOU
        - GET_LIMITER
        - SET_LIMITER
        - RESET_BILLING_PERIOD
        - FW_UPDATE
      description: >
        The type of action.
          * `GET_REGISTER` - The action is to get billing value, for example instantaneous values.
          * `GET_PERIODICAL_PROFILE` - The action is to get periodical profile, for example load-profile.
          * `GET_IRREGULAR_PROFILE` - The action is to get non-periodical profile, for example daily profile or monthly billing registers.
          * `GET_EVENTS` - The action is to get event log.
          * `GET_CLOCK` - The action is to get the clock.
          * `SYNC_CLOCK` - The action is to synchronize the clock. The action synchronizes the clock in the device, it can forcefully set it if force attribute is set.
          * `GET_RELAY_STATE` - The action is to get the relay state.
          * `SET_RELAY_STATE` - The action is to set the relay state.
          * `GET_DISCONNECTOR_STATE` - The action is to get the disconnector state.
          * `SET_DISCONNECTOR_STATE` - The action is to set the disconnector state.
          * `GET_TOU` - The action is to get the time-of-use table.
          * `SET_TOU` - The action is to set the time-of-use table.
          * `GET_LIMITER` - The action is to get the limiter settings.
          * `SET_LIMITER` - The action is to set the limiter settings.
          * `RESET_BILLING_PERIOD` - The action is to reset billing period.
          * `FW_UPDATE` - The action is to start firmware update.

    JobSettingsSchema:
      type: object
      description: >
        Schema that holds the settings of the job.
      properties:
        maxDuration:
          description: Maximum duration in seconds to process the job.
          type: integer
          format: int64
          minimum: 15
          maximum: 7200
        priority:
          description: Priority of the job.
          type: integer
          format: int32
          minimum: 0
          maximum: 9
        attempts:
          description: Number of attempts to process the job.
          type: integer
          format: int32
          minimum: 1
          maximum: 99
        retryDelay:
          description: Delay in seconds before retrying the job.
          type: integer
          format: int64
          minimum: 0
          maximum: 999
        deferStart:
          description: Delay in seconds before starting the first attempt of the job.
          type: integer
          format: int64
          minimum: 0
          maximum: 86400
        expiresAt:
          description: Time when the job expires.
          type: string
          format: date-time
