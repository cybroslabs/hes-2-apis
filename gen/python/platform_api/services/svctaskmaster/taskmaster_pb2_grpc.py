# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from acquisition import internal_pb2 as acquisition_dot_internal__pb2
from acquisition import main_pb2 as acquisition_dot_main__pb2
from common import internal_pb2 as common_dot_internal__pb2
from common import types_pb2 as common_dot_types__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2


class TaskmasterServiceStub(object):
    """The Taskmaster service definition.
    Those are the gRPC services that the Taskmaster provides for other components.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.QueueJobs = channel.unary_unary(
                '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/QueueJobs',
                request_serializer=acquisition_dot_internal__pb2.QueueJobsRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetJob = channel.unary_unary(
                '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/GetJob',
                request_serializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
                response_deserializer=acquisition_dot_internal__pb2.GetJobResponse.FromString,
                _registered_method=True)
        self.CancelJobs = channel.unary_unary(
                '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/CancelJobs',
                request_serializer=common_dot_types__pb2.ListOfId.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.SetDriver = channel.unary_unary(
                '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/SetDriver',
                request_serializer=acquisition_dot_main__pb2.SetDriver.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.SetCache = channel.unary_unary(
                '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/SetCache',
                request_serializer=acquisition_dot_internal__pb2.SetCacheRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetCache = channel.unary_unary(
                '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/GetCache',
                request_serializer=acquisition_dot_internal__pb2.GetCacheRequest.SerializeToString,
                response_deserializer=acquisition_dot_internal__pb2.GetCacheResponse.FromString,
                _registered_method=True)
        self.SetManagedFields = channel.unary_unary(
                '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/SetManagedFields',
                request_serializer=common_dot_internal__pb2.SetManagedFieldsRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class TaskmasterServiceServicer(object):
    """The Taskmaster service definition.
    Those are the gRPC services that the Taskmaster provides for other components.
    """

    def QueueJobs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetJob(self, request, context):
        """The method called by the RestApi to get the job status. The parameter contains the job identifier.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelJobs(self, request, context):
        """The method called by the RestApi to cancel the job.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDriver(self, request, context):
        """@group: Drivers
        The method called by the driver to inform Taskmaster about the instance existence. The parameter contains the driver version, the listening port, the meter type, the maximum number of concurrent jobs, the typical memory usage, the connection attributes template, and the job action templates.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCache(self, request, context):
        """@group: Drivers
        The method called by the driver to store the cache entry. The parameter contains the cache key and the cache value. The key is unique within the driver type.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCache(self, request, context):
        """@group: Drivers
        The method called by the driver to retrieve the cache entry. The parameter contains the cache key. The key is unique within the driver type.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetManagedFields(self, request, context):
        """@group: Drivers
        The method called by the driver to set the managed fields. The method is synchronous and returns a response whether the fields were set successfully or not.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TaskmasterServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'QueueJobs': grpc.unary_unary_rpc_method_handler(
                    servicer.QueueJobs,
                    request_deserializer=acquisition_dot_internal__pb2.QueueJobsRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetJob': grpc.unary_unary_rpc_method_handler(
                    servicer.GetJob,
                    request_deserializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
                    response_serializer=acquisition_dot_internal__pb2.GetJobResponse.SerializeToString,
            ),
            'CancelJobs': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelJobs,
                    request_deserializer=common_dot_types__pb2.ListOfId.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetDriver': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDriver,
                    request_deserializer=acquisition_dot_main__pb2.SetDriver.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetCache': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCache,
                    request_deserializer=acquisition_dot_internal__pb2.SetCacheRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetCache': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCache,
                    request_deserializer=acquisition_dot_internal__pb2.GetCacheRequest.FromString,
                    response_serializer=acquisition_dot_internal__pb2.GetCacheResponse.SerializeToString,
            ),
            'SetManagedFields': grpc.unary_unary_rpc_method_handler(
                    servicer.SetManagedFields,
                    request_deserializer=common_dot_internal__pb2.SetManagedFieldsRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'io.clbs.openhes.services.svctaskmaster.TaskmasterService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('io.clbs.openhes.services.svctaskmaster.TaskmasterService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class TaskmasterService(object):
    """The Taskmaster service definition.
    Those are the gRPC services that the Taskmaster provides for other components.
    """

    @staticmethod
    def QueueJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/QueueJobs',
            acquisition_dot_internal__pb2.QueueJobsRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/GetJob',
            google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
            acquisition_dot_internal__pb2.GetJobResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/CancelJobs',
            common_dot_types__pb2.ListOfId.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetDriver(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/SetDriver',
            acquisition_dot_main__pb2.SetDriver.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetCache(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/SetCache',
            acquisition_dot_internal__pb2.SetCacheRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCache(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/GetCache',
            acquisition_dot_internal__pb2.GetCacheRequest.SerializeToString,
            acquisition_dot_internal__pb2.GetCacheResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetManagedFields(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/SetManagedFields',
            common_dot_internal__pb2.SetManagedFieldsRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
