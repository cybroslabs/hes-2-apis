// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        (unknown)
// source: acquisition/main.proto

package acquisition

import (
	common "github.com/cybroslabs/hes-2-apis/gen/go/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateCommunicationUnitRequest struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Spec     *CommunicationUnitSpec `protobuf:"bytes,1,req,name=spec"`
	xxx_hidden_Metadata *common.MetadataFields `protobuf:"bytes,2,opt,name=metadata"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CreateCommunicationUnitRequest) Reset() {
	*x = CreateCommunicationUnitRequest{}
	mi := &file_acquisition_main_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommunicationUnitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommunicationUnitRequest) ProtoMessage() {}

func (x *CreateCommunicationUnitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateCommunicationUnitRequest) GetSpec() *CommunicationUnitSpec {
	if x != nil {
		return x.xxx_hidden_Spec
	}
	return nil
}

func (x *CreateCommunicationUnitRequest) GetMetadata() *common.MetadataFields {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *CreateCommunicationUnitRequest) SetSpec(v *CommunicationUnitSpec) {
	x.xxx_hidden_Spec = v
}

func (x *CreateCommunicationUnitRequest) SetMetadata(v *common.MetadataFields) {
	x.xxx_hidden_Metadata = v
}

func (x *CreateCommunicationUnitRequest) HasSpec() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Spec != nil
}

func (x *CreateCommunicationUnitRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *CreateCommunicationUnitRequest) ClearSpec() {
	x.xxx_hidden_Spec = nil
}

func (x *CreateCommunicationUnitRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type CreateCommunicationUnitRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Spec     *CommunicationUnitSpec
	Metadata *common.MetadataFields
}

func (b0 CreateCommunicationUnitRequest_builder) Build() *CreateCommunicationUnitRequest {
	m0 := &CreateCommunicationUnitRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Spec = b.Spec
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

type ListOfCommunicationUnit struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Items *[]*CommunicationUnit  `protobuf:"bytes,1,rep,name=items"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ListOfCommunicationUnit) Reset() {
	*x = ListOfCommunicationUnit{}
	mi := &file_acquisition_main_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOfCommunicationUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfCommunicationUnit) ProtoMessage() {}

func (x *ListOfCommunicationUnit) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListOfCommunicationUnit) GetItems() []*CommunicationUnit {
	if x != nil {
		if x.xxx_hidden_Items != nil {
			return *x.xxx_hidden_Items
		}
	}
	return nil
}

func (x *ListOfCommunicationUnit) SetItems(v []*CommunicationUnit) {
	x.xxx_hidden_Items = &v
}

type ListOfCommunicationUnit_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Items []*CommunicationUnit
}

func (b0 ListOfCommunicationUnit_builder) Build() *ListOfCommunicationUnit {
	m0 := &ListOfCommunicationUnit{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Items = &b.Items
	return m0
}

type CreateDeviceRequest struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Spec     *DeviceSpec            `protobuf:"bytes,1,req,name=spec"`
	xxx_hidden_Metadata *common.MetadataFields `protobuf:"bytes,2,opt,name=metadata"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CreateDeviceRequest) Reset() {
	*x = CreateDeviceRequest{}
	mi := &file_acquisition_main_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceRequest) ProtoMessage() {}

func (x *CreateDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateDeviceRequest) GetSpec() *DeviceSpec {
	if x != nil {
		return x.xxx_hidden_Spec
	}
	return nil
}

func (x *CreateDeviceRequest) GetMetadata() *common.MetadataFields {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *CreateDeviceRequest) SetSpec(v *DeviceSpec) {
	x.xxx_hidden_Spec = v
}

func (x *CreateDeviceRequest) SetMetadata(v *common.MetadataFields) {
	x.xxx_hidden_Metadata = v
}

func (x *CreateDeviceRequest) HasSpec() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Spec != nil
}

func (x *CreateDeviceRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *CreateDeviceRequest) ClearSpec() {
	x.xxx_hidden_Spec = nil
}

func (x *CreateDeviceRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type CreateDeviceRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Spec     *DeviceSpec
	Metadata *common.MetadataFields
}

func (b0 CreateDeviceRequest_builder) Build() *CreateDeviceRequest {
	m0 := &CreateDeviceRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Spec = b.Spec
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

type ListOfDevice struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Items *[]*Device             `protobuf:"bytes,1,rep,name=items"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ListOfDevice) Reset() {
	*x = ListOfDevice{}
	mi := &file_acquisition_main_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOfDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfDevice) ProtoMessage() {}

func (x *ListOfDevice) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListOfDevice) GetItems() []*Device {
	if x != nil {
		if x.xxx_hidden_Items != nil {
			return *x.xxx_hidden_Items
		}
	}
	return nil
}

func (x *ListOfDevice) SetItems(v []*Device) {
	x.xxx_hidden_Items = &v
}

type ListOfDevice_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Items []*Device
}

func (b0 ListOfDevice_builder) Build() *ListOfDevice {
	m0 := &ListOfDevice{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Items = &b.Items
	return m0
}

type Device struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Spec     *DeviceSpec            `protobuf:"bytes,1,req,name=spec"`
	xxx_hidden_Metadata *common.MetadataFields `protobuf:"bytes,3,opt,name=metadata"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Device) Reset() {
	*x = Device{}
	mi := &file_acquisition_main_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Device) GetSpec() *DeviceSpec {
	if x != nil {
		return x.xxx_hidden_Spec
	}
	return nil
}

func (x *Device) GetMetadata() *common.MetadataFields {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *Device) SetSpec(v *DeviceSpec) {
	x.xxx_hidden_Spec = v
}

func (x *Device) SetMetadata(v *common.MetadataFields) {
	x.xxx_hidden_Metadata = v
}

func (x *Device) HasSpec() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Spec != nil
}

func (x *Device) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *Device) ClearSpec() {
	x.xxx_hidden_Spec = nil
}

func (x *Device) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type Device_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Spec     *DeviceSpec
	Metadata *common.MetadataFields
}

func (b0 Device_builder) Build() *Device {
	m0 := &Device{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Spec = b.Spec
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

type CreateDeviceGroupRequest struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Spec     *DeviceGroupSpec       `protobuf:"bytes,1,req,name=spec"`
	xxx_hidden_Metadata *common.MetadataFields `protobuf:"bytes,2,opt,name=metadata"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CreateDeviceGroupRequest) Reset() {
	*x = CreateDeviceGroupRequest{}
	mi := &file_acquisition_main_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDeviceGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceGroupRequest) ProtoMessage() {}

func (x *CreateDeviceGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateDeviceGroupRequest) GetSpec() *DeviceGroupSpec {
	if x != nil {
		return x.xxx_hidden_Spec
	}
	return nil
}

func (x *CreateDeviceGroupRequest) GetMetadata() *common.MetadataFields {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *CreateDeviceGroupRequest) SetSpec(v *DeviceGroupSpec) {
	x.xxx_hidden_Spec = v
}

func (x *CreateDeviceGroupRequest) SetMetadata(v *common.MetadataFields) {
	x.xxx_hidden_Metadata = v
}

func (x *CreateDeviceGroupRequest) HasSpec() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Spec != nil
}

func (x *CreateDeviceGroupRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *CreateDeviceGroupRequest) ClearSpec() {
	x.xxx_hidden_Spec = nil
}

func (x *CreateDeviceGroupRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type CreateDeviceGroupRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Spec     *DeviceGroupSpec
	Metadata *common.MetadataFields
}

func (b0 CreateDeviceGroupRequest_builder) Build() *CreateDeviceGroupRequest {
	m0 := &CreateDeviceGroupRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Spec = b.Spec
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

type ListOfDeviceGroup struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Items *[]*DeviceGroup        `protobuf:"bytes,1,rep,name=items"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ListOfDeviceGroup) Reset() {
	*x = ListOfDeviceGroup{}
	mi := &file_acquisition_main_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOfDeviceGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfDeviceGroup) ProtoMessage() {}

func (x *ListOfDeviceGroup) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListOfDeviceGroup) GetItems() []*DeviceGroup {
	if x != nil {
		if x.xxx_hidden_Items != nil {
			return *x.xxx_hidden_Items
		}
	}
	return nil
}

func (x *ListOfDeviceGroup) SetItems(v []*DeviceGroup) {
	x.xxx_hidden_Items = &v
}

type ListOfDeviceGroup_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Items []*DeviceGroup
}

func (b0 ListOfDeviceGroup_builder) Build() *ListOfDeviceGroup {
	m0 := &ListOfDeviceGroup{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Items = &b.Items
	return m0
}

type DeviceGroup struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Spec     *DeviceGroupSpec       `protobuf:"bytes,1,req,name=spec"`
	xxx_hidden_Status   *DeviceGroupStatus     `protobuf:"bytes,2,opt,name=status"`
	xxx_hidden_Metadata *common.MetadataFields `protobuf:"bytes,3,opt,name=metadata"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *DeviceGroup) Reset() {
	*x = DeviceGroup{}
	mi := &file_acquisition_main_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceGroup) ProtoMessage() {}

func (x *DeviceGroup) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeviceGroup) GetSpec() *DeviceGroupSpec {
	if x != nil {
		return x.xxx_hidden_Spec
	}
	return nil
}

func (x *DeviceGroup) GetStatus() *DeviceGroupStatus {
	if x != nil {
		return x.xxx_hidden_Status
	}
	return nil
}

func (x *DeviceGroup) GetMetadata() *common.MetadataFields {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *DeviceGroup) SetSpec(v *DeviceGroupSpec) {
	x.xxx_hidden_Spec = v
}

func (x *DeviceGroup) SetStatus(v *DeviceGroupStatus) {
	x.xxx_hidden_Status = v
}

func (x *DeviceGroup) SetMetadata(v *common.MetadataFields) {
	x.xxx_hidden_Metadata = v
}

func (x *DeviceGroup) HasSpec() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Spec != nil
}

func (x *DeviceGroup) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Status != nil
}

func (x *DeviceGroup) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *DeviceGroup) ClearSpec() {
	x.xxx_hidden_Spec = nil
}

func (x *DeviceGroup) ClearStatus() {
	x.xxx_hidden_Status = nil
}

func (x *DeviceGroup) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type DeviceGroup_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Spec     *DeviceGroupSpec
	Status   *DeviceGroupStatus
	Metadata *common.MetadataFields
}

func (b0 DeviceGroup_builder) Build() *DeviceGroup {
	m0 := &DeviceGroup{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Spec = b.Spec
	x.xxx_hidden_Status = b.Status
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

type DeviceGroupSpec struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ExternalId    *string                `protobuf:"bytes,1,opt,name=external_id,json=externalId"`
	xxx_hidden_DynamicFilter *common.ListSelector   `protobuf:"bytes,2,opt,name=dynamic_filter,json=dynamicFilter"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *DeviceGroupSpec) Reset() {
	*x = DeviceGroupSpec{}
	mi := &file_acquisition_main_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceGroupSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceGroupSpec) ProtoMessage() {}

func (x *DeviceGroupSpec) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeviceGroupSpec) GetExternalId() string {
	if x != nil {
		if x.xxx_hidden_ExternalId != nil {
			return *x.xxx_hidden_ExternalId
		}
		return ""
	}
	return ""
}

func (x *DeviceGroupSpec) GetDynamicFilter() *common.ListSelector {
	if x != nil {
		return x.xxx_hidden_DynamicFilter
	}
	return nil
}

func (x *DeviceGroupSpec) SetExternalId(v string) {
	x.xxx_hidden_ExternalId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *DeviceGroupSpec) SetDynamicFilter(v *common.ListSelector) {
	x.xxx_hidden_DynamicFilter = v
}

func (x *DeviceGroupSpec) HasExternalId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeviceGroupSpec) HasDynamicFilter() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DynamicFilter != nil
}

func (x *DeviceGroupSpec) ClearExternalId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ExternalId = nil
}

func (x *DeviceGroupSpec) ClearDynamicFilter() {
	x.xxx_hidden_DynamicFilter = nil
}

type DeviceGroupSpec_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ExternalId    *string
	DynamicFilter *common.ListSelector
}

func (b0 DeviceGroupSpec_builder) Build() *DeviceGroupSpec {
	m0 := &DeviceGroupSpec{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ExternalId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ExternalId = b.ExternalId
	}
	x.xxx_hidden_DynamicFilter = b.DynamicFilter
	return m0
}

type DeviceGroupStatus struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_DeviceId []string               `protobuf:"bytes,4,rep,name=device_id,json=deviceId"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *DeviceGroupStatus) Reset() {
	*x = DeviceGroupStatus{}
	mi := &file_acquisition_main_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceGroupStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceGroupStatus) ProtoMessage() {}

func (x *DeviceGroupStatus) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeviceGroupStatus) GetDeviceId() []string {
	if x != nil {
		return x.xxx_hidden_DeviceId
	}
	return nil
}

func (x *DeviceGroupStatus) SetDeviceId(v []string) {
	x.xxx_hidden_DeviceId = v
}

type DeviceGroupStatus_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DeviceId []string
}

func (b0 DeviceGroupStatus_builder) Build() *DeviceGroupStatus {
	m0 := &DeviceGroupStatus{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_DeviceId = b.DeviceId
	return m0
}

type SetDeviceCommunicationUnitsRequest struct {
	state                         protoimpl.MessageState      `protogen:"opaque.v1"`
	xxx_hidden_DeviceId           *string                     `protobuf:"bytes,1,opt,name=device_id,json=deviceId"`
	xxx_hidden_CommunicationUnits *[]*DeviceCommunicationUnit `protobuf:"bytes,2,rep,name=communication_units,json=communicationUnits"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *SetDeviceCommunicationUnitsRequest) Reset() {
	*x = SetDeviceCommunicationUnitsRequest{}
	mi := &file_acquisition_main_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetDeviceCommunicationUnitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDeviceCommunicationUnitsRequest) ProtoMessage() {}

func (x *SetDeviceCommunicationUnitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SetDeviceCommunicationUnitsRequest) GetDeviceId() string {
	if x != nil {
		if x.xxx_hidden_DeviceId != nil {
			return *x.xxx_hidden_DeviceId
		}
		return ""
	}
	return ""
}

func (x *SetDeviceCommunicationUnitsRequest) GetCommunicationUnits() []*DeviceCommunicationUnit {
	if x != nil {
		if x.xxx_hidden_CommunicationUnits != nil {
			return *x.xxx_hidden_CommunicationUnits
		}
	}
	return nil
}

func (x *SetDeviceCommunicationUnitsRequest) SetDeviceId(v string) {
	x.xxx_hidden_DeviceId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *SetDeviceCommunicationUnitsRequest) SetCommunicationUnits(v []*DeviceCommunicationUnit) {
	x.xxx_hidden_CommunicationUnits = &v
}

func (x *SetDeviceCommunicationUnitsRequest) HasDeviceId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SetDeviceCommunicationUnitsRequest) ClearDeviceId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DeviceId = nil
}

type SetDeviceCommunicationUnitsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DeviceId           *string
	CommunicationUnits []*DeviceCommunicationUnit
}

func (b0 SetDeviceCommunicationUnitsRequest_builder) Build() *SetDeviceCommunicationUnitsRequest {
	m0 := &SetDeviceCommunicationUnitsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DeviceId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_DeviceId = b.DeviceId
	}
	x.xxx_hidden_CommunicationUnits = &b.CommunicationUnits
	return m0
}

type ListOfDeviceCommunicationUnit struct {
	state                         protoimpl.MessageState      `protogen:"opaque.v1"`
	xxx_hidden_CommunicationUnits *[]*DeviceCommunicationUnit `protobuf:"bytes,1,rep,name=communication_units,json=communicationUnits"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *ListOfDeviceCommunicationUnit) Reset() {
	*x = ListOfDeviceCommunicationUnit{}
	mi := &file_acquisition_main_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOfDeviceCommunicationUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfDeviceCommunicationUnit) ProtoMessage() {}

func (x *ListOfDeviceCommunicationUnit) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListOfDeviceCommunicationUnit) GetCommunicationUnits() []*DeviceCommunicationUnit {
	if x != nil {
		if x.xxx_hidden_CommunicationUnits != nil {
			return *x.xxx_hidden_CommunicationUnits
		}
	}
	return nil
}

func (x *ListOfDeviceCommunicationUnit) SetCommunicationUnits(v []*DeviceCommunicationUnit) {
	x.xxx_hidden_CommunicationUnits = &v
}

type ListOfDeviceCommunicationUnit_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	CommunicationUnits []*DeviceCommunicationUnit
}

func (b0 ListOfDeviceCommunicationUnit_builder) Build() *ListOfDeviceCommunicationUnit {
	m0 := &ListOfDeviceCommunicationUnit{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_CommunicationUnits = &b.CommunicationUnits
	return m0
}

type AddDevicesToGroupRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_GroupId     *string                `protobuf:"bytes,1,opt,name=group_id,json=groupId"`
	xxx_hidden_DeviceId    []string               `protobuf:"bytes,2,rep,name=device_id,json=deviceId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AddDevicesToGroupRequest) Reset() {
	*x = AddDevicesToGroupRequest{}
	mi := &file_acquisition_main_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddDevicesToGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDevicesToGroupRequest) ProtoMessage() {}

func (x *AddDevicesToGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AddDevicesToGroupRequest) GetGroupId() string {
	if x != nil {
		if x.xxx_hidden_GroupId != nil {
			return *x.xxx_hidden_GroupId
		}
		return ""
	}
	return ""
}

func (x *AddDevicesToGroupRequest) GetDeviceId() []string {
	if x != nil {
		return x.xxx_hidden_DeviceId
	}
	return nil
}

func (x *AddDevicesToGroupRequest) SetGroupId(v string) {
	x.xxx_hidden_GroupId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *AddDevicesToGroupRequest) SetDeviceId(v []string) {
	x.xxx_hidden_DeviceId = v
}

func (x *AddDevicesToGroupRequest) HasGroupId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AddDevicesToGroupRequest) ClearGroupId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_GroupId = nil
}

type AddDevicesToGroupRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	GroupId  *string
	DeviceId []string
}

func (b0 AddDevicesToGroupRequest_builder) Build() *AddDevicesToGroupRequest {
	m0 := &AddDevicesToGroupRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.GroupId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_GroupId = b.GroupId
	}
	x.xxx_hidden_DeviceId = b.DeviceId
	return m0
}

type RemoveDevicesFromGroupRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_GroupId     *string                `protobuf:"bytes,1,opt,name=group_id,json=groupId"`
	xxx_hidden_DeviceId    []string               `protobuf:"bytes,2,rep,name=device_id,json=deviceId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RemoveDevicesFromGroupRequest) Reset() {
	*x = RemoveDevicesFromGroupRequest{}
	mi := &file_acquisition_main_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveDevicesFromGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveDevicesFromGroupRequest) ProtoMessage() {}

func (x *RemoveDevicesFromGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RemoveDevicesFromGroupRequest) GetGroupId() string {
	if x != nil {
		if x.xxx_hidden_GroupId != nil {
			return *x.xxx_hidden_GroupId
		}
		return ""
	}
	return ""
}

func (x *RemoveDevicesFromGroupRequest) GetDeviceId() []string {
	if x != nil {
		return x.xxx_hidden_DeviceId
	}
	return nil
}

func (x *RemoveDevicesFromGroupRequest) SetGroupId(v string) {
	x.xxx_hidden_GroupId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *RemoveDevicesFromGroupRequest) SetDeviceId(v []string) {
	x.xxx_hidden_DeviceId = v
}

func (x *RemoveDevicesFromGroupRequest) HasGroupId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RemoveDevicesFromGroupRequest) ClearGroupId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_GroupId = nil
}

type RemoveDevicesFromGroupRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	GroupId  *string
	DeviceId []string
}

func (b0 RemoveDevicesFromGroupRequest_builder) Build() *RemoveDevicesFromGroupRequest {
	m0 := &RemoveDevicesFromGroupRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.GroupId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_GroupId = b.GroupId
	}
	x.xxx_hidden_DeviceId = b.DeviceId
	return m0
}

type CreateBulkRequest struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Spec     *BulkSpec              `protobuf:"bytes,1,req,name=spec"`
	xxx_hidden_Metadata *common.MetadataFields `protobuf:"bytes,2,opt,name=metadata"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CreateBulkRequest) Reset() {
	*x = CreateBulkRequest{}
	mi := &file_acquisition_main_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBulkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBulkRequest) ProtoMessage() {}

func (x *CreateBulkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateBulkRequest) GetSpec() *BulkSpec {
	if x != nil {
		return x.xxx_hidden_Spec
	}
	return nil
}

func (x *CreateBulkRequest) GetMetadata() *common.MetadataFields {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *CreateBulkRequest) SetSpec(v *BulkSpec) {
	x.xxx_hidden_Spec = v
}

func (x *CreateBulkRequest) SetMetadata(v *common.MetadataFields) {
	x.xxx_hidden_Metadata = v
}

func (x *CreateBulkRequest) HasSpec() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Spec != nil
}

func (x *CreateBulkRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *CreateBulkRequest) ClearSpec() {
	x.xxx_hidden_Spec = nil
}

func (x *CreateBulkRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type CreateBulkRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Spec     *BulkSpec
	Metadata *common.MetadataFields
}

func (b0 CreateBulkRequest_builder) Build() *CreateBulkRequest {
	m0 := &CreateBulkRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Spec = b.Spec
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

type ListOfBulk struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Items *[]*Bulk               `protobuf:"bytes,1,rep,name=items"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ListOfBulk) Reset() {
	*x = ListOfBulk{}
	mi := &file_acquisition_main_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOfBulk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfBulk) ProtoMessage() {}

func (x *ListOfBulk) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListOfBulk) GetItems() []*Bulk {
	if x != nil {
		if x.xxx_hidden_Items != nil {
			return *x.xxx_hidden_Items
		}
	}
	return nil
}

func (x *ListOfBulk) SetItems(v []*Bulk) {
	x.xxx_hidden_Items = &v
}

type ListOfBulk_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Items []*Bulk
}

func (b0 ListOfBulk_builder) Build() *ListOfBulk {
	m0 := &ListOfBulk{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Items = &b.Items
	return m0
}

type Bulk struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Spec     *BulkSpec              `protobuf:"bytes,1,req,name=spec"`
	xxx_hidden_Status   *BulkStatus            `protobuf:"bytes,2,opt,name=status"`
	xxx_hidden_Metadata *common.MetadataFields `protobuf:"bytes,3,opt,name=metadata"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Bulk) Reset() {
	*x = Bulk{}
	mi := &file_acquisition_main_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bulk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bulk) ProtoMessage() {}

func (x *Bulk) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Bulk) GetSpec() *BulkSpec {
	if x != nil {
		return x.xxx_hidden_Spec
	}
	return nil
}

func (x *Bulk) GetStatus() *BulkStatus {
	if x != nil {
		return x.xxx_hidden_Status
	}
	return nil
}

func (x *Bulk) GetMetadata() *common.MetadataFields {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *Bulk) SetSpec(v *BulkSpec) {
	x.xxx_hidden_Spec = v
}

func (x *Bulk) SetStatus(v *BulkStatus) {
	x.xxx_hidden_Status = v
}

func (x *Bulk) SetMetadata(v *common.MetadataFields) {
	x.xxx_hidden_Metadata = v
}

func (x *Bulk) HasSpec() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Spec != nil
}

func (x *Bulk) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Status != nil
}

func (x *Bulk) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *Bulk) ClearSpec() {
	x.xxx_hidden_Spec = nil
}

func (x *Bulk) ClearStatus() {
	x.xxx_hidden_Status = nil
}

func (x *Bulk) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type Bulk_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Spec     *BulkSpec
	Status   *BulkStatus
	Metadata *common.MetadataFields
}

func (b0 Bulk_builder) Build() *Bulk {
	m0 := &Bulk{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Spec = b.Spec
	x.xxx_hidden_Status = b.Status
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

type BulkSpec struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_CorrelationId *string                `protobuf:"bytes,2,opt,name=correlation_id,json=correlationId"`
	xxx_hidden_DriverType    *string                `protobuf:"bytes,3,opt,name=driver_type,json=driverType"`
	xxx_hidden_Device        isBulkSpec_Device      `protobuf_oneof:"device"`
	xxx_hidden_Settings      *JobSettings           `protobuf:"bytes,6,opt,name=settings"`
	xxx_hidden_Actions       *[]*JobAction          `protobuf:"bytes,7,rep,name=actions"`
	xxx_hidden_WebhookUrl    *string                `protobuf:"bytes,8,opt,name=webhook_url,json=webhookUrl"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *BulkSpec) Reset() {
	*x = BulkSpec{}
	mi := &file_acquisition_main_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkSpec) ProtoMessage() {}

func (x *BulkSpec) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BulkSpec) GetCorrelationId() string {
	if x != nil {
		if x.xxx_hidden_CorrelationId != nil {
			return *x.xxx_hidden_CorrelationId
		}
		return ""
	}
	return ""
}

func (x *BulkSpec) GetDriverType() string {
	if x != nil {
		if x.xxx_hidden_DriverType != nil {
			return *x.xxx_hidden_DriverType
		}
		return ""
	}
	return ""
}

func (x *BulkSpec) GetDevices() *ListOfJobDeviceId {
	if x != nil {
		if x, ok := x.xxx_hidden_Device.(*bulkSpec_Devices); ok {
			return x.Devices
		}
	}
	return nil
}

func (x *BulkSpec) GetCustomDevices() *ListOfJobDevice {
	if x != nil {
		if x, ok := x.xxx_hidden_Device.(*bulkSpec_CustomDevices); ok {
			return x.CustomDevices
		}
	}
	return nil
}

func (x *BulkSpec) GetDeviceGroupId() string {
	if x != nil {
		if x, ok := x.xxx_hidden_Device.(*bulkSpec_DeviceGroupId); ok {
			return x.DeviceGroupId
		}
	}
	return ""
}

func (x *BulkSpec) GetSettings() *JobSettings {
	if x != nil {
		return x.xxx_hidden_Settings
	}
	return nil
}

func (x *BulkSpec) GetActions() []*JobAction {
	if x != nil {
		if x.xxx_hidden_Actions != nil {
			return *x.xxx_hidden_Actions
		}
	}
	return nil
}

func (x *BulkSpec) GetWebhookUrl() string {
	if x != nil {
		if x.xxx_hidden_WebhookUrl != nil {
			return *x.xxx_hidden_WebhookUrl
		}
		return ""
	}
	return ""
}

func (x *BulkSpec) SetCorrelationId(v string) {
	x.xxx_hidden_CorrelationId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *BulkSpec) SetDriverType(v string) {
	x.xxx_hidden_DriverType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *BulkSpec) SetDevices(v *ListOfJobDeviceId) {
	if v == nil {
		x.xxx_hidden_Device = nil
		return
	}
	x.xxx_hidden_Device = &bulkSpec_Devices{v}
}

func (x *BulkSpec) SetCustomDevices(v *ListOfJobDevice) {
	if v == nil {
		x.xxx_hidden_Device = nil
		return
	}
	x.xxx_hidden_Device = &bulkSpec_CustomDevices{v}
}

func (x *BulkSpec) SetDeviceGroupId(v string) {
	x.xxx_hidden_Device = &bulkSpec_DeviceGroupId{v}
}

func (x *BulkSpec) SetSettings(v *JobSettings) {
	x.xxx_hidden_Settings = v
}

func (x *BulkSpec) SetActions(v []*JobAction) {
	x.xxx_hidden_Actions = &v
}

func (x *BulkSpec) SetWebhookUrl(v string) {
	x.xxx_hidden_WebhookUrl = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *BulkSpec) HasCorrelationId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *BulkSpec) HasDriverType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *BulkSpec) HasDevice() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Device != nil
}

func (x *BulkSpec) HasDevices() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Device.(*bulkSpec_Devices)
	return ok
}

func (x *BulkSpec) HasCustomDevices() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Device.(*bulkSpec_CustomDevices)
	return ok
}

func (x *BulkSpec) HasDeviceGroupId() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Device.(*bulkSpec_DeviceGroupId)
	return ok
}

func (x *BulkSpec) HasSettings() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Settings != nil
}

func (x *BulkSpec) HasWebhookUrl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *BulkSpec) ClearCorrelationId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_CorrelationId = nil
}

func (x *BulkSpec) ClearDriverType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_DriverType = nil
}

func (x *BulkSpec) ClearDevice() {
	x.xxx_hidden_Device = nil
}

func (x *BulkSpec) ClearDevices() {
	if _, ok := x.xxx_hidden_Device.(*bulkSpec_Devices); ok {
		x.xxx_hidden_Device = nil
	}
}

func (x *BulkSpec) ClearCustomDevices() {
	if _, ok := x.xxx_hidden_Device.(*bulkSpec_CustomDevices); ok {
		x.xxx_hidden_Device = nil
	}
}

func (x *BulkSpec) ClearDeviceGroupId() {
	if _, ok := x.xxx_hidden_Device.(*bulkSpec_DeviceGroupId); ok {
		x.xxx_hidden_Device = nil
	}
}

func (x *BulkSpec) ClearSettings() {
	x.xxx_hidden_Settings = nil
}

func (x *BulkSpec) ClearWebhookUrl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_WebhookUrl = nil
}

const BulkSpec_Device_not_set_case case_BulkSpec_Device = 0
const BulkSpec_Devices_case case_BulkSpec_Device = 4
const BulkSpec_CustomDevices_case case_BulkSpec_Device = 5
const BulkSpec_DeviceGroupId_case case_BulkSpec_Device = 9

func (x *BulkSpec) WhichDevice() case_BulkSpec_Device {
	if x == nil {
		return BulkSpec_Device_not_set_case
	}
	switch x.xxx_hidden_Device.(type) {
	case *bulkSpec_Devices:
		return BulkSpec_Devices_case
	case *bulkSpec_CustomDevices:
		return BulkSpec_CustomDevices_case
	case *bulkSpec_DeviceGroupId:
		return BulkSpec_DeviceGroupId_case
	default:
		return BulkSpec_Device_not_set_case
	}
}

type BulkSpec_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// @gqltype: UUID
	CorrelationId *string
	DriverType    *string
	// Fields of oneof xxx_hidden_Device:
	Devices       *ListOfJobDeviceId
	CustomDevices *ListOfJobDevice
	DeviceGroupId *string
	// -- end of xxx_hidden_Device
	Settings   *JobSettings
	Actions    []*JobAction
	WebhookUrl *string
}

func (b0 BulkSpec_builder) Build() *BulkSpec {
	m0 := &BulkSpec{}
	b, x := &b0, m0
	_, _ = b, x
	if b.CorrelationId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_CorrelationId = b.CorrelationId
	}
	if b.DriverType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_DriverType = b.DriverType
	}
	if b.Devices != nil {
		x.xxx_hidden_Device = &bulkSpec_Devices{b.Devices}
	}
	if b.CustomDevices != nil {
		x.xxx_hidden_Device = &bulkSpec_CustomDevices{b.CustomDevices}
	}
	if b.DeviceGroupId != nil {
		x.xxx_hidden_Device = &bulkSpec_DeviceGroupId{*b.DeviceGroupId}
	}
	x.xxx_hidden_Settings = b.Settings
	x.xxx_hidden_Actions = &b.Actions
	if b.WebhookUrl != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_WebhookUrl = b.WebhookUrl
	}
	return m0
}

type case_BulkSpec_Device protoreflect.FieldNumber

func (x case_BulkSpec_Device) String() string {
	md := file_acquisition_main_proto_msgTypes[17].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isBulkSpec_Device interface {
	isBulkSpec_Device()
}

type bulkSpec_Devices struct {
	Devices *ListOfJobDeviceId `protobuf:"bytes,4,opt,name=devices,oneof"` // The list of devices in the bulk.
}

type bulkSpec_CustomDevices struct {
	CustomDevices *ListOfJobDevice `protobuf:"bytes,5,opt,name=custom_devices,json=customDevices,oneof"` // The list of custom devices in the bulk.
}

type bulkSpec_DeviceGroupId struct {
	DeviceGroupId string `protobuf:"bytes,9,opt,name=device_group_id,json=deviceGroupId,oneof"` // The device group identifier.
}

func (*bulkSpec_Devices) isBulkSpec_Device() {}

func (*bulkSpec_CustomDevices) isBulkSpec_Device() {}

func (*bulkSpec_DeviceGroupId) isBulkSpec_Device() {}

type BulkStatus struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Status      BulkStatusCode         `protobuf:"varint,1,opt,name=status,enum=io.clbs.openhes.models.acquisition.BulkStatusCode"`
	xxx_hidden_Jobs        *[]*BulkJob            `protobuf:"bytes,2,rep,name=jobs"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *BulkStatus) Reset() {
	*x = BulkStatus{}
	mi := &file_acquisition_main_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkStatus) ProtoMessage() {}

func (x *BulkStatus) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BulkStatus) GetStatus() BulkStatusCode {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Status
		}
	}
	return BulkStatusCode_BULK_STATUS_QUEUED
}

func (x *BulkStatus) GetJobs() []*BulkJob {
	if x != nil {
		if x.xxx_hidden_Jobs != nil {
			return *x.xxx_hidden_Jobs
		}
	}
	return nil
}

func (x *BulkStatus) SetStatus(v BulkStatusCode) {
	x.xxx_hidden_Status = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *BulkStatus) SetJobs(v []*BulkJob) {
	x.xxx_hidden_Jobs = &v
}

func (x *BulkStatus) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *BulkStatus) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Status = BulkStatusCode_BULK_STATUS_QUEUED
}

type BulkStatus_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Status *BulkStatusCode
	Jobs   []*BulkJob
}

func (b0 BulkStatus_builder) Build() *BulkStatus {
	m0 := &BulkStatus{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Status = *b.Status
	}
	x.xxx_hidden_Jobs = &b.Jobs
	return m0
}

type SetModemPoolRequest struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Spec     *ModemPoolSpec         `protobuf:"bytes,1,req,name=spec"`
	xxx_hidden_Metadata *common.MetadataFields `protobuf:"bytes,3,opt,name=metadata"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SetModemPoolRequest) Reset() {
	*x = SetModemPoolRequest{}
	mi := &file_acquisition_main_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetModemPoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetModemPoolRequest) ProtoMessage() {}

func (x *SetModemPoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SetModemPoolRequest) GetSpec() *ModemPoolSpec {
	if x != nil {
		return x.xxx_hidden_Spec
	}
	return nil
}

func (x *SetModemPoolRequest) GetMetadata() *common.MetadataFields {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *SetModemPoolRequest) SetSpec(v *ModemPoolSpec) {
	x.xxx_hidden_Spec = v
}

func (x *SetModemPoolRequest) SetMetadata(v *common.MetadataFields) {
	x.xxx_hidden_Metadata = v
}

func (x *SetModemPoolRequest) HasSpec() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Spec != nil
}

func (x *SetModemPoolRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *SetModemPoolRequest) ClearSpec() {
	x.xxx_hidden_Spec = nil
}

func (x *SetModemPoolRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type SetModemPoolRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Spec     *ModemPoolSpec
	Metadata *common.MetadataFields
}

func (b0 SetModemPoolRequest_builder) Build() *SetModemPoolRequest {
	m0 := &SetModemPoolRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Spec = b.Spec
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

type ListOfModemPool struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Items *[]*ModemPool          `protobuf:"bytes,1,rep,name=items"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ListOfModemPool) Reset() {
	*x = ListOfModemPool{}
	mi := &file_acquisition_main_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOfModemPool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfModemPool) ProtoMessage() {}

func (x *ListOfModemPool) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListOfModemPool) GetItems() []*ModemPool {
	if x != nil {
		if x.xxx_hidden_Items != nil {
			return *x.xxx_hidden_Items
		}
	}
	return nil
}

func (x *ListOfModemPool) SetItems(v []*ModemPool) {
	x.xxx_hidden_Items = &v
}

type ListOfModemPool_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Items []*ModemPool
}

func (b0 ListOfModemPool_builder) Build() *ListOfModemPool {
	m0 := &ListOfModemPool{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Items = &b.Items
	return m0
}

type ModemPoolSpec struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModemPoolSpec) Reset() {
	*x = ModemPoolSpec{}
	mi := &file_acquisition_main_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModemPoolSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModemPoolSpec) ProtoMessage() {}

func (x *ModemPoolSpec) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ModemPoolSpec_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ModemPoolSpec_builder) Build() *ModemPoolSpec {
	m0 := &ModemPoolSpec{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ModemPoolStatus struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Modems *[]*ModemInfo          `protobuf:"bytes,1,rep,name=modems"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ModemPoolStatus) Reset() {
	*x = ModemPoolStatus{}
	mi := &file_acquisition_main_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModemPoolStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModemPoolStatus) ProtoMessage() {}

func (x *ModemPoolStatus) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ModemPoolStatus) GetModems() []*ModemInfo {
	if x != nil {
		if x.xxx_hidden_Modems != nil {
			return *x.xxx_hidden_Modems
		}
	}
	return nil
}

func (x *ModemPoolStatus) SetModems(v []*ModemInfo) {
	x.xxx_hidden_Modems = &v
}

type ModemPoolStatus_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Modems []*ModemInfo
}

func (b0 ModemPoolStatus_builder) Build() *ModemPoolStatus {
	m0 := &ModemPoolStatus{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Modems = &b.Modems
	return m0
}

type ModemPool struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Spec     *ModemPoolSpec         `protobuf:"bytes,1,req,name=spec"`
	xxx_hidden_Status   *ModemPoolStatus       `protobuf:"bytes,2,opt,name=status"`
	xxx_hidden_Metadata *common.MetadataFields `protobuf:"bytes,3,opt,name=metadata"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ModemPool) Reset() {
	*x = ModemPool{}
	mi := &file_acquisition_main_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModemPool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModemPool) ProtoMessage() {}

func (x *ModemPool) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ModemPool) GetSpec() *ModemPoolSpec {
	if x != nil {
		return x.xxx_hidden_Spec
	}
	return nil
}

func (x *ModemPool) GetStatus() *ModemPoolStatus {
	if x != nil {
		return x.xxx_hidden_Status
	}
	return nil
}

func (x *ModemPool) GetMetadata() *common.MetadataFields {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *ModemPool) SetSpec(v *ModemPoolSpec) {
	x.xxx_hidden_Spec = v
}

func (x *ModemPool) SetStatus(v *ModemPoolStatus) {
	x.xxx_hidden_Status = v
}

func (x *ModemPool) SetMetadata(v *common.MetadataFields) {
	x.xxx_hidden_Metadata = v
}

func (x *ModemPool) HasSpec() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Spec != nil
}

func (x *ModemPool) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Status != nil
}

func (x *ModemPool) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *ModemPool) ClearSpec() {
	x.xxx_hidden_Spec = nil
}

func (x *ModemPool) ClearStatus() {
	x.xxx_hidden_Status = nil
}

func (x *ModemPool) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type ModemPool_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Spec     *ModemPoolSpec
	Status   *ModemPoolStatus
	Metadata *common.MetadataFields
}

func (b0 ModemPool_builder) Build() *ModemPool {
	m0 := &ModemPool{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Spec = b.Spec
	x.xxx_hidden_Status = b.Status
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

type SetModemRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PoolId      *string                `protobuf:"bytes,1,opt,name=pool_id,json=poolId"`
	xxx_hidden_Modem       *ModemInfo             `protobuf:"bytes,2,opt,name=modem"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SetModemRequest) Reset() {
	*x = SetModemRequest{}
	mi := &file_acquisition_main_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetModemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetModemRequest) ProtoMessage() {}

func (x *SetModemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SetModemRequest) GetPoolId() string {
	if x != nil {
		if x.xxx_hidden_PoolId != nil {
			return *x.xxx_hidden_PoolId
		}
		return ""
	}
	return ""
}

func (x *SetModemRequest) GetModem() *ModemInfo {
	if x != nil {
		return x.xxx_hidden_Modem
	}
	return nil
}

func (x *SetModemRequest) SetPoolId(v string) {
	x.xxx_hidden_PoolId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *SetModemRequest) SetModem(v *ModemInfo) {
	x.xxx_hidden_Modem = v
}

func (x *SetModemRequest) HasPoolId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SetModemRequest) HasModem() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Modem != nil
}

func (x *SetModemRequest) ClearPoolId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_PoolId = nil
}

func (x *SetModemRequest) ClearModem() {
	x.xxx_hidden_Modem = nil
}

type SetModemRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PoolId *string
	Modem  *ModemInfo
}

func (b0 SetModemRequest_builder) Build() *SetModemRequest {
	m0 := &SetModemRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.PoolId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_PoolId = b.PoolId
	}
	x.xxx_hidden_Modem = b.Modem
	return m0
}

type SetDriver struct {
	state           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Spec *DriverSpec            `protobuf:"bytes,1,req,name=spec"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SetDriver) Reset() {
	*x = SetDriver{}
	mi := &file_acquisition_main_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetDriver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDriver) ProtoMessage() {}

func (x *SetDriver) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SetDriver) GetSpec() *DriverSpec {
	if x != nil {
		return x.xxx_hidden_Spec
	}
	return nil
}

func (x *SetDriver) SetSpec(v *DriverSpec) {
	x.xxx_hidden_Spec = v
}

func (x *SetDriver) HasSpec() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Spec != nil
}

func (x *SetDriver) ClearSpec() {
	x.xxx_hidden_Spec = nil
}

type SetDriver_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Spec *DriverSpec
}

func (b0 SetDriver_builder) Build() *SetDriver {
	m0 := &SetDriver{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Spec = b.Spec
	return m0
}

type ListOfDriver struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Items *[]*Driver             `protobuf:"bytes,1,rep,name=items"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ListOfDriver) Reset() {
	*x = ListOfDriver{}
	mi := &file_acquisition_main_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOfDriver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfDriver) ProtoMessage() {}

func (x *ListOfDriver) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListOfDriver) GetItems() []*Driver {
	if x != nil {
		if x.xxx_hidden_Items != nil {
			return *x.xxx_hidden_Items
		}
	}
	return nil
}

func (x *ListOfDriver) SetItems(v []*Driver) {
	x.xxx_hidden_Items = &v
}

type ListOfDriver_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Items []*Driver
}

func (b0 ListOfDriver_builder) Build() *ListOfDriver {
	m0 := &ListOfDriver{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Items = &b.Items
	return m0
}

type Driver struct {
	state           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Spec *DriverSpec            `protobuf:"bytes,1,req,name=spec"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Driver) Reset() {
	*x = Driver{}
	mi := &file_acquisition_main_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Driver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Driver) ProtoMessage() {}

func (x *Driver) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Driver) GetSpec() *DriverSpec {
	if x != nil {
		return x.xxx_hidden_Spec
	}
	return nil
}

func (x *Driver) SetSpec(v *DriverSpec) {
	x.xxx_hidden_Spec = v
}

func (x *Driver) HasSpec() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Spec != nil
}

func (x *Driver) ClearSpec() {
	x.xxx_hidden_Spec = nil
}

type Driver_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Spec *DriverSpec
}

func (b0 Driver_builder) Build() *Driver {
	m0 := &Driver{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Spec = b.Spec
	return m0
}

type DriverSpec struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Version           *string                `protobuf:"bytes,1,opt,name=version"`
	xxx_hidden_ListeningPort     uint32                 `protobuf:"varint,2,opt,name=listening_port,json=listeningPort"`
	xxx_hidden_DriverType        *string                `protobuf:"bytes,3,opt,name=driver_type,json=driverType"`
	xxx_hidden_MaxConcurrentJobs int32                  `protobuf:"varint,4,opt,name=max_concurrent_jobs,json=maxConcurrentJobs"`
	xxx_hidden_MaxCascadeDepth   uint32                 `protobuf:"varint,5,opt,name=max_cascade_depth,json=maxCascadeDepth"`
	xxx_hidden_TypicalMemUsage   int32                  `protobuf:"varint,6,opt,name=typical_mem_usage,json=typicalMemUsage"`
	xxx_hidden_Templates         *DriverTemplates       `protobuf:"bytes,7,opt,name=templates"`
	xxx_hidden_DisplayName       *string                `protobuf:"bytes,8,opt,name=display_name,json=displayName"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *DriverSpec) Reset() {
	*x = DriverSpec{}
	mi := &file_acquisition_main_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverSpec) ProtoMessage() {}

func (x *DriverSpec) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_main_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DriverSpec) GetVersion() string {
	if x != nil {
		if x.xxx_hidden_Version != nil {
			return *x.xxx_hidden_Version
		}
		return ""
	}
	return ""
}

func (x *DriverSpec) GetListeningPort() uint32 {
	if x != nil {
		return x.xxx_hidden_ListeningPort
	}
	return 0
}

func (x *DriverSpec) GetDriverType() string {
	if x != nil {
		if x.xxx_hidden_DriverType != nil {
			return *x.xxx_hidden_DriverType
		}
		return ""
	}
	return ""
}

func (x *DriverSpec) GetMaxConcurrentJobs() int32 {
	if x != nil {
		return x.xxx_hidden_MaxConcurrentJobs
	}
	return 0
}

func (x *DriverSpec) GetMaxCascadeDepth() uint32 {
	if x != nil {
		return x.xxx_hidden_MaxCascadeDepth
	}
	return 0
}

func (x *DriverSpec) GetTypicalMemUsage() int32 {
	if x != nil {
		return x.xxx_hidden_TypicalMemUsage
	}
	return 0
}

func (x *DriverSpec) GetTemplates() *DriverTemplates {
	if x != nil {
		return x.xxx_hidden_Templates
	}
	return nil
}

func (x *DriverSpec) GetDisplayName() string {
	if x != nil {
		if x.xxx_hidden_DisplayName != nil {
			return *x.xxx_hidden_DisplayName
		}
		return ""
	}
	return ""
}

func (x *DriverSpec) SetVersion(v string) {
	x.xxx_hidden_Version = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *DriverSpec) SetListeningPort(v uint32) {
	x.xxx_hidden_ListeningPort = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *DriverSpec) SetDriverType(v string) {
	x.xxx_hidden_DriverType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 8)
}

func (x *DriverSpec) SetMaxConcurrentJobs(v int32) {
	x.xxx_hidden_MaxConcurrentJobs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 8)
}

func (x *DriverSpec) SetMaxCascadeDepth(v uint32) {
	x.xxx_hidden_MaxCascadeDepth = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 8)
}

func (x *DriverSpec) SetTypicalMemUsage(v int32) {
	x.xxx_hidden_TypicalMemUsage = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 8)
}

func (x *DriverSpec) SetTemplates(v *DriverTemplates) {
	x.xxx_hidden_Templates = v
}

func (x *DriverSpec) SetDisplayName(v string) {
	x.xxx_hidden_DisplayName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 8)
}

func (x *DriverSpec) HasVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DriverSpec) HasListeningPort() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DriverSpec) HasDriverType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DriverSpec) HasMaxConcurrentJobs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DriverSpec) HasMaxCascadeDepth() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *DriverSpec) HasTypicalMemUsage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *DriverSpec) HasTemplates() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Templates != nil
}

func (x *DriverSpec) HasDisplayName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *DriverSpec) ClearVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Version = nil
}

func (x *DriverSpec) ClearListeningPort() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ListeningPort = 0
}

func (x *DriverSpec) ClearDriverType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_DriverType = nil
}

func (x *DriverSpec) ClearMaxConcurrentJobs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_MaxConcurrentJobs = 0
}

func (x *DriverSpec) ClearMaxCascadeDepth() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_MaxCascadeDepth = 0
}

func (x *DriverSpec) ClearTypicalMemUsage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_TypicalMemUsage = 0
}

func (x *DriverSpec) ClearTemplates() {
	x.xxx_hidden_Templates = nil
}

func (x *DriverSpec) ClearDisplayName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_DisplayName = nil
}

type DriverSpec_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The driver version. The format is not defined. The driver itself is versioned by the docker image tags so this value shall be either the same (set during the image build) or any useful user-readable version string.
	Version *string
	// The port the driver's gRPC will listen on.
	ListeningPort *uint32
	// The technical/internal ID of the driver.
	DriverType *string
	// The maximum number of concurrent jobs the driver can handle. The value 0 is not allowed, the maximum number respect typical_mem_usage not to overgrow the memory resources!
	MaxConcurrentJobs *int32
	// The maximum cascade depth the driver can handle. Number 1 means that the driver cannot handle cascading jobs, 2 means that the driver can handle cascading jobs with one level of depth, etc.
	// The value 0 means that the driver can handle any number of cascading jobs.
	MaxCascadeDepth *uint32
	// The typical memory usage of the driver in MB.
	TypicalMemUsage *int32
	// The connection and action templates.
	Templates *DriverTemplates
	// The display name of the driver. Must be in format '<manufacturer> <device_type> [<device_type_version>]'.
	// It must respect upper/lower characters.
	// The generic drivers, such as 'cybros labs generic', must be named as '<driver_company_name> generic'.
	//
	// Examples: 'Addax NP73E', 'cybros labs generic', 'Landis+Gyr S650 v2'
	DisplayName *string
}

func (b0 DriverSpec_builder) Build() *DriverSpec {
	m0 := &DriverSpec{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Version != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_Version = b.Version
	}
	if b.ListeningPort != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_ListeningPort = *b.ListeningPort
	}
	if b.DriverType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 8)
		x.xxx_hidden_DriverType = b.DriverType
	}
	if b.MaxConcurrentJobs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 8)
		x.xxx_hidden_MaxConcurrentJobs = *b.MaxConcurrentJobs
	}
	if b.MaxCascadeDepth != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 8)
		x.xxx_hidden_MaxCascadeDepth = *b.MaxCascadeDepth
	}
	if b.TypicalMemUsage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 8)
		x.xxx_hidden_TypicalMemUsage = *b.TypicalMemUsage
	}
	x.xxx_hidden_Templates = b.Templates
	if b.DisplayName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 8)
		x.xxx_hidden_DisplayName = b.DisplayName
	}
	return m0
}

var File_acquisition_main_proto protoreflect.FileDescriptor

var file_acquisition_main_proto_rawDesc = []byte{
	0x0a, 0x16, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62,
	0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xc1, 0x01, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x39, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x68, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x61, 0x63, 0x71, 0x75, 0x69,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x70, 0x65, 0x63, 0x42, 0x05, 0xaa, 0x01,
	0x02, 0x08, 0x03, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x49, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x69, 0x6f,
	0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x66, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x12,
	0x4b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xab, 0x01, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x68, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x61, 0x63, 0x71, 0x75,
	0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x42, 0x05, 0xaa, 0x01, 0x02, 0x08, 0x03, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12,
	0x49, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x68, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x50, 0x0a, 0x0c, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x66, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x69, 0x6f, 0x2e, 0x63,
	0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xa4, 0x01, 0x0a,
	0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x61,
	0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x42, 0x05, 0xaa, 0x01, 0x02, 0x08, 0x03, 0x52, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x12, 0x49, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4a, 0x04, 0x08,
	0x02, 0x10, 0x03, 0x22, 0xb5, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x4e, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x70, 0x65, 0x63, 0x42, 0x05, 0xaa, 0x01, 0x02, 0x08, 0x03, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63,
	0x12, 0x49, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x68, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5a, 0x0a, 0x11, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x66, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x45, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65,
	0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xf7, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x4e, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x61,
	0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x70, 0x65, 0x63, 0x42, 0x05, 0xaa, 0x01, 0x02, 0x08,
	0x03, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x4d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62,
	0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x49, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c,
	0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x86, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x52, 0x0a, 0x0e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0d, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x30, 0x0a, 0x11, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0xaf, 0x01, 0x0a,
	0x22, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x6c, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e,
	0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x22, 0x8d,
	0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74,
	0x12, 0x6c, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e,
	0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x22, 0x52,
	0x0a, 0x18, 0x41, 0x64, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x54, 0x6f, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x22, 0x57, 0x0a, 0x1d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0xa7, 0x01, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x47, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65,
	0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x42, 0x05, 0xaa,
	0x01, 0x02, 0x08, 0x03, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x49, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x69,
	0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4c, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x42,
	0x75, 0x6c, 0x6b, 0x12, 0x3e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x68, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x61, 0x63, 0x71, 0x75,
	0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0xe2, 0x01, 0x0a, 0x04, 0x42, 0x75, 0x6c, 0x6b, 0x12, 0x47, 0x0a, 0x04,
	0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x69, 0x6f, 0x2e,
	0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x42, 0x75, 0x6c, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x42, 0x05, 0xaa, 0x01, 0x02, 0x08, 0x03, 0x52,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x46, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x61,
	0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x49, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65,
	0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xee, 0x03, 0x0a, 0x08, 0x42, 0x75, 0x6c,
	0x6b, 0x53, 0x70, 0x65, 0x63, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x51, 0x0a,
	0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x12, 0x5c, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c,
	0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x66, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52,
	0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x28,
	0x0a, 0x0f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x69, 0x6f, 0x2e,
	0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x47, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4a, 0x6f, 0x62, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x55, 0x72, 0x6c, 0x42,
	0x08, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x0a, 0x42, 0x75,
	0x6c, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c,
	0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x75,
	0x6c, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x3f, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x68, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x61, 0x63, 0x71, 0x75,
	0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x4a, 0x6f, 0x62, 0x52,
	0x04, 0x6a, 0x6f, 0x62, 0x73, 0x22, 0xb4, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4c, 0x0a,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x69, 0x6f,
	0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x42, 0x05,
	0xaa, 0x01, 0x02, 0x08, 0x03, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x49, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0x56, 0x0a, 0x0f,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x4d, 0x6f, 0x64, 0x65, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x12,
	0x43, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0x0f, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x65, 0x6d, 0x50, 0x6f, 0x6f,
	0x6c, 0x53, 0x70, 0x65, 0x63, 0x22, 0x58, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x65, 0x6d, 0x50, 0x6f,
	0x6f, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x45, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c,
	0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6d, 0x73, 0x22,
	0xf1, 0x01, 0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x65, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x4c, 0x0a,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x69, 0x6f,
	0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x42, 0x05,
	0xaa, 0x01, 0x02, 0x08, 0x03, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x4b, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x69, 0x6f,
	0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x49, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x69, 0x6f, 0x2e,
	0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x6f, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12,
	0x43, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6d, 0x22, 0x62, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x12, 0x49, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65,
	0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x42,
	0x05, 0xaa, 0x01, 0x02, 0x08, 0x03, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x4a, 0x04, 0x08, 0x02,
	0x10, 0x03, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x22, 0x50, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x66, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62,
	0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x5f, 0x0a, 0x06, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x68, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x61, 0x63, 0x71, 0x75,
	0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x70,
	0x65, 0x63, 0x42, 0x05, 0xaa, 0x01, 0x02, 0x08, 0x03, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x4a,
	0x04, 0x08, 0x02, 0x10, 0x03, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x22, 0xec, 0x02, 0x0a, 0x0a,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e,
	0x67, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x13,
	0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6a,
	0x6f, 0x62, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x43, 0x6f,
	0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x2a, 0x0a, 0x11,
	0x6d, 0x61, 0x78, 0x5f, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x70, 0x74,
	0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6d, 0x61, 0x78, 0x43, 0x61, 0x73, 0x63,
	0x61, 0x64, 0x65, 0x44, 0x65, 0x70, 0x74, 0x68, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x79, 0x70, 0x69,
	0x63, 0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x6d, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x74, 0x79, 0x70, 0x69, 0x63, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x51, 0x0a, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62,
	0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x09, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x79, 0x62, 0x72, 0x6f, 0x73, 0x6c,
	0x61, 0x62, 0x73, 0x2f, 0x68, 0x65, 0x73, 0x2d, 0x32, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x62, 0x08, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x70, 0xe8, 0x07,
}

var file_acquisition_main_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_acquisition_main_proto_goTypes = []any{
	(*CreateCommunicationUnitRequest)(nil),     // 0: io.clbs.openhes.models.acquisition.CreateCommunicationUnitRequest
	(*ListOfCommunicationUnit)(nil),            // 1: io.clbs.openhes.models.acquisition.ListOfCommunicationUnit
	(*CreateDeviceRequest)(nil),                // 2: io.clbs.openhes.models.acquisition.CreateDeviceRequest
	(*ListOfDevice)(nil),                       // 3: io.clbs.openhes.models.acquisition.ListOfDevice
	(*Device)(nil),                             // 4: io.clbs.openhes.models.acquisition.Device
	(*CreateDeviceGroupRequest)(nil),           // 5: io.clbs.openhes.models.acquisition.CreateDeviceGroupRequest
	(*ListOfDeviceGroup)(nil),                  // 6: io.clbs.openhes.models.acquisition.ListOfDeviceGroup
	(*DeviceGroup)(nil),                        // 7: io.clbs.openhes.models.acquisition.DeviceGroup
	(*DeviceGroupSpec)(nil),                    // 8: io.clbs.openhes.models.acquisition.DeviceGroupSpec
	(*DeviceGroupStatus)(nil),                  // 9: io.clbs.openhes.models.acquisition.DeviceGroupStatus
	(*SetDeviceCommunicationUnitsRequest)(nil), // 10: io.clbs.openhes.models.acquisition.SetDeviceCommunicationUnitsRequest
	(*ListOfDeviceCommunicationUnit)(nil),      // 11: io.clbs.openhes.models.acquisition.ListOfDeviceCommunicationUnit
	(*AddDevicesToGroupRequest)(nil),           // 12: io.clbs.openhes.models.acquisition.AddDevicesToGroupRequest
	(*RemoveDevicesFromGroupRequest)(nil),      // 13: io.clbs.openhes.models.acquisition.RemoveDevicesFromGroupRequest
	(*CreateBulkRequest)(nil),                  // 14: io.clbs.openhes.models.acquisition.CreateBulkRequest
	(*ListOfBulk)(nil),                         // 15: io.clbs.openhes.models.acquisition.ListOfBulk
	(*Bulk)(nil),                               // 16: io.clbs.openhes.models.acquisition.Bulk
	(*BulkSpec)(nil),                           // 17: io.clbs.openhes.models.acquisition.BulkSpec
	(*BulkStatus)(nil),                         // 18: io.clbs.openhes.models.acquisition.BulkStatus
	(*SetModemPoolRequest)(nil),                // 19: io.clbs.openhes.models.acquisition.SetModemPoolRequest
	(*ListOfModemPool)(nil),                    // 20: io.clbs.openhes.models.acquisition.ListOfModemPool
	(*ModemPoolSpec)(nil),                      // 21: io.clbs.openhes.models.acquisition.ModemPoolSpec
	(*ModemPoolStatus)(nil),                    // 22: io.clbs.openhes.models.acquisition.ModemPoolStatus
	(*ModemPool)(nil),                          // 23: io.clbs.openhes.models.acquisition.ModemPool
	(*SetModemRequest)(nil),                    // 24: io.clbs.openhes.models.acquisition.SetModemRequest
	(*SetDriver)(nil),                          // 25: io.clbs.openhes.models.acquisition.SetDriver
	(*ListOfDriver)(nil),                       // 26: io.clbs.openhes.models.acquisition.ListOfDriver
	(*Driver)(nil),                             // 27: io.clbs.openhes.models.acquisition.Driver
	(*DriverSpec)(nil),                         // 28: io.clbs.openhes.models.acquisition.DriverSpec
	(*CommunicationUnitSpec)(nil),              // 29: io.clbs.openhes.models.acquisition.CommunicationUnitSpec
	(*common.MetadataFields)(nil),              // 30: io.clbs.openhes.models.common.MetadataFields
	(*CommunicationUnit)(nil),                  // 31: io.clbs.openhes.models.acquisition.CommunicationUnit
	(*DeviceSpec)(nil),                         // 32: io.clbs.openhes.models.acquisition.DeviceSpec
	(*common.ListSelector)(nil),                // 33: io.clbs.openhes.models.common.ListSelector
	(*DeviceCommunicationUnit)(nil),            // 34: io.clbs.openhes.models.acquisition.DeviceCommunicationUnit
	(*ListOfJobDeviceId)(nil),                  // 35: io.clbs.openhes.models.acquisition.ListOfJobDeviceId
	(*ListOfJobDevice)(nil),                    // 36: io.clbs.openhes.models.acquisition.ListOfJobDevice
	(*JobSettings)(nil),                        // 37: io.clbs.openhes.models.acquisition.JobSettings
	(*JobAction)(nil),                          // 38: io.clbs.openhes.models.acquisition.JobAction
	(BulkStatusCode)(0),                        // 39: io.clbs.openhes.models.acquisition.BulkStatusCode
	(*BulkJob)(nil),                            // 40: io.clbs.openhes.models.acquisition.BulkJob
	(*ModemInfo)(nil),                          // 41: io.clbs.openhes.models.acquisition.ModemInfo
	(*DriverTemplates)(nil),                    // 42: io.clbs.openhes.models.acquisition.DriverTemplates
}
var file_acquisition_main_proto_depIdxs = []int32{
	29, // 0: io.clbs.openhes.models.acquisition.CreateCommunicationUnitRequest.spec:type_name -> io.clbs.openhes.models.acquisition.CommunicationUnitSpec
	30, // 1: io.clbs.openhes.models.acquisition.CreateCommunicationUnitRequest.metadata:type_name -> io.clbs.openhes.models.common.MetadataFields
	31, // 2: io.clbs.openhes.models.acquisition.ListOfCommunicationUnit.items:type_name -> io.clbs.openhes.models.acquisition.CommunicationUnit
	32, // 3: io.clbs.openhes.models.acquisition.CreateDeviceRequest.spec:type_name -> io.clbs.openhes.models.acquisition.DeviceSpec
	30, // 4: io.clbs.openhes.models.acquisition.CreateDeviceRequest.metadata:type_name -> io.clbs.openhes.models.common.MetadataFields
	4,  // 5: io.clbs.openhes.models.acquisition.ListOfDevice.items:type_name -> io.clbs.openhes.models.acquisition.Device
	32, // 6: io.clbs.openhes.models.acquisition.Device.spec:type_name -> io.clbs.openhes.models.acquisition.DeviceSpec
	30, // 7: io.clbs.openhes.models.acquisition.Device.metadata:type_name -> io.clbs.openhes.models.common.MetadataFields
	8,  // 8: io.clbs.openhes.models.acquisition.CreateDeviceGroupRequest.spec:type_name -> io.clbs.openhes.models.acquisition.DeviceGroupSpec
	30, // 9: io.clbs.openhes.models.acquisition.CreateDeviceGroupRequest.metadata:type_name -> io.clbs.openhes.models.common.MetadataFields
	7,  // 10: io.clbs.openhes.models.acquisition.ListOfDeviceGroup.items:type_name -> io.clbs.openhes.models.acquisition.DeviceGroup
	8,  // 11: io.clbs.openhes.models.acquisition.DeviceGroup.spec:type_name -> io.clbs.openhes.models.acquisition.DeviceGroupSpec
	9,  // 12: io.clbs.openhes.models.acquisition.DeviceGroup.status:type_name -> io.clbs.openhes.models.acquisition.DeviceGroupStatus
	30, // 13: io.clbs.openhes.models.acquisition.DeviceGroup.metadata:type_name -> io.clbs.openhes.models.common.MetadataFields
	33, // 14: io.clbs.openhes.models.acquisition.DeviceGroupSpec.dynamic_filter:type_name -> io.clbs.openhes.models.common.ListSelector
	34, // 15: io.clbs.openhes.models.acquisition.SetDeviceCommunicationUnitsRequest.communication_units:type_name -> io.clbs.openhes.models.acquisition.DeviceCommunicationUnit
	34, // 16: io.clbs.openhes.models.acquisition.ListOfDeviceCommunicationUnit.communication_units:type_name -> io.clbs.openhes.models.acquisition.DeviceCommunicationUnit
	17, // 17: io.clbs.openhes.models.acquisition.CreateBulkRequest.spec:type_name -> io.clbs.openhes.models.acquisition.BulkSpec
	30, // 18: io.clbs.openhes.models.acquisition.CreateBulkRequest.metadata:type_name -> io.clbs.openhes.models.common.MetadataFields
	16, // 19: io.clbs.openhes.models.acquisition.ListOfBulk.items:type_name -> io.clbs.openhes.models.acquisition.Bulk
	17, // 20: io.clbs.openhes.models.acquisition.Bulk.spec:type_name -> io.clbs.openhes.models.acquisition.BulkSpec
	18, // 21: io.clbs.openhes.models.acquisition.Bulk.status:type_name -> io.clbs.openhes.models.acquisition.BulkStatus
	30, // 22: io.clbs.openhes.models.acquisition.Bulk.metadata:type_name -> io.clbs.openhes.models.common.MetadataFields
	35, // 23: io.clbs.openhes.models.acquisition.BulkSpec.devices:type_name -> io.clbs.openhes.models.acquisition.ListOfJobDeviceId
	36, // 24: io.clbs.openhes.models.acquisition.BulkSpec.custom_devices:type_name -> io.clbs.openhes.models.acquisition.ListOfJobDevice
	37, // 25: io.clbs.openhes.models.acquisition.BulkSpec.settings:type_name -> io.clbs.openhes.models.acquisition.JobSettings
	38, // 26: io.clbs.openhes.models.acquisition.BulkSpec.actions:type_name -> io.clbs.openhes.models.acquisition.JobAction
	39, // 27: io.clbs.openhes.models.acquisition.BulkStatus.status:type_name -> io.clbs.openhes.models.acquisition.BulkStatusCode
	40, // 28: io.clbs.openhes.models.acquisition.BulkStatus.jobs:type_name -> io.clbs.openhes.models.acquisition.BulkJob
	21, // 29: io.clbs.openhes.models.acquisition.SetModemPoolRequest.spec:type_name -> io.clbs.openhes.models.acquisition.ModemPoolSpec
	30, // 30: io.clbs.openhes.models.acquisition.SetModemPoolRequest.metadata:type_name -> io.clbs.openhes.models.common.MetadataFields
	23, // 31: io.clbs.openhes.models.acquisition.ListOfModemPool.items:type_name -> io.clbs.openhes.models.acquisition.ModemPool
	41, // 32: io.clbs.openhes.models.acquisition.ModemPoolStatus.modems:type_name -> io.clbs.openhes.models.acquisition.ModemInfo
	21, // 33: io.clbs.openhes.models.acquisition.ModemPool.spec:type_name -> io.clbs.openhes.models.acquisition.ModemPoolSpec
	22, // 34: io.clbs.openhes.models.acquisition.ModemPool.status:type_name -> io.clbs.openhes.models.acquisition.ModemPoolStatus
	30, // 35: io.clbs.openhes.models.acquisition.ModemPool.metadata:type_name -> io.clbs.openhes.models.common.MetadataFields
	41, // 36: io.clbs.openhes.models.acquisition.SetModemRequest.modem:type_name -> io.clbs.openhes.models.acquisition.ModemInfo
	28, // 37: io.clbs.openhes.models.acquisition.SetDriver.spec:type_name -> io.clbs.openhes.models.acquisition.DriverSpec
	27, // 38: io.clbs.openhes.models.acquisition.ListOfDriver.items:type_name -> io.clbs.openhes.models.acquisition.Driver
	28, // 39: io.clbs.openhes.models.acquisition.Driver.spec:type_name -> io.clbs.openhes.models.acquisition.DriverSpec
	42, // 40: io.clbs.openhes.models.acquisition.DriverSpec.templates:type_name -> io.clbs.openhes.models.acquisition.DriverTemplates
	41, // [41:41] is the sub-list for method output_type
	41, // [41:41] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_acquisition_main_proto_init() }
func file_acquisition_main_proto_init() {
	if File_acquisition_main_proto != nil {
		return
	}
	file_acquisition_shared_proto_init()
	file_acquisition_main_proto_msgTypes[17].OneofWrappers = []any{
		(*bulkSpec_Devices)(nil),
		(*bulkSpec_CustomDevices)(nil),
		(*bulkSpec_DeviceGroupId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_acquisition_main_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_acquisition_main_proto_goTypes,
		DependencyIndexes: file_acquisition_main_proto_depIdxs,
		MessageInfos:      file_acquisition_main_proto_msgTypes,
	}.Build()
	File_acquisition_main_proto = out.File
	file_acquisition_main_proto_rawDesc = nil
	file_acquisition_main_proto_goTypes = nil
	file_acquisition_main_proto_depIdxs = nil
}
