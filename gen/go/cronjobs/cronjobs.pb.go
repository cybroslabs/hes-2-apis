// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: cronjobs/cronjobs.proto

package cronjobs

import (
	common "github.com/cybroslabs/ouro-api-shared/gen/go/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateCronJobRequest struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Spec     *CronJobSpec           `protobuf:"bytes,1,opt,name=spec"`
	xxx_hidden_Metadata *common.MetadataFields `protobuf:"bytes,2,opt,name=metadata"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CreateCronJobRequest) Reset() {
	*x = CreateCronJobRequest{}
	mi := &file_cronjobs_cronjobs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCronJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCronJobRequest) ProtoMessage() {}

func (x *CreateCronJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cronjobs_cronjobs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateCronJobRequest) GetSpec() *CronJobSpec {
	if x != nil {
		return x.xxx_hidden_Spec
	}
	return nil
}

func (x *CreateCronJobRequest) GetMetadata() *common.MetadataFields {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *CreateCronJobRequest) SetSpec(v *CronJobSpec) {
	x.xxx_hidden_Spec = v
}

func (x *CreateCronJobRequest) SetMetadata(v *common.MetadataFields) {
	x.xxx_hidden_Metadata = v
}

func (x *CreateCronJobRequest) HasSpec() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Spec != nil
}

func (x *CreateCronJobRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *CreateCronJobRequest) ClearSpec() {
	x.xxx_hidden_Spec = nil
}

func (x *CreateCronJobRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type CreateCronJobRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Spec     *CronJobSpec
	Metadata *common.MetadataFields
}

func (b0 CreateCronJobRequest_builder) Build() *CreateCronJobRequest {
	m0 := &CreateCronJobRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Spec = b.Spec
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

type CronJob struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Spec     *CronJobSpec           `protobuf:"bytes,1,opt,name=spec"`
	xxx_hidden_Status   *CronJobStatus         `protobuf:"bytes,2,opt,name=status"`
	xxx_hidden_Metadata *common.MetadataFields `protobuf:"bytes,3,opt,name=metadata"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CronJob) Reset() {
	*x = CronJob{}
	mi := &file_cronjobs_cronjobs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CronJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CronJob) ProtoMessage() {}

func (x *CronJob) ProtoReflect() protoreflect.Message {
	mi := &file_cronjobs_cronjobs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CronJob) GetSpec() *CronJobSpec {
	if x != nil {
		return x.xxx_hidden_Spec
	}
	return nil
}

func (x *CronJob) GetStatus() *CronJobStatus {
	if x != nil {
		return x.xxx_hidden_Status
	}
	return nil
}

func (x *CronJob) GetMetadata() *common.MetadataFields {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *CronJob) SetSpec(v *CronJobSpec) {
	x.xxx_hidden_Spec = v
}

func (x *CronJob) SetStatus(v *CronJobStatus) {
	x.xxx_hidden_Status = v
}

func (x *CronJob) SetMetadata(v *common.MetadataFields) {
	x.xxx_hidden_Metadata = v
}

func (x *CronJob) HasSpec() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Spec != nil
}

func (x *CronJob) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Status != nil
}

func (x *CronJob) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *CronJob) ClearSpec() {
	x.xxx_hidden_Spec = nil
}

func (x *CronJob) ClearStatus() {
	x.xxx_hidden_Status = nil
}

func (x *CronJob) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type CronJob_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Spec     *CronJobSpec
	Status   *CronJobStatus
	Metadata *common.MetadataFields
}

func (b0 CronJob_builder) Build() *CronJob {
	m0 := &CronJob{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Spec = b.Spec
	x.xxx_hidden_Status = b.Status
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

type CronJobSpec struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CronJobSpec) Reset() {
	*x = CronJobSpec{}
	mi := &file_cronjobs_cronjobs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CronJobSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CronJobSpec) ProtoMessage() {}

func (x *CronJobSpec) ProtoReflect() protoreflect.Message {
	mi := &file_cronjobs_cronjobs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type CronJobSpec_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 CronJobSpec_builder) Build() *CronJobSpec {
	m0 := &CronJobSpec{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type CronJobStatus struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_LastRunAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=last_run_at,json=lastRunAt"`
	xxx_hidden_NextRunAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=next_run_at,json=nextRunAt"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CronJobStatus) Reset() {
	*x = CronJobStatus{}
	mi := &file_cronjobs_cronjobs_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CronJobStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CronJobStatus) ProtoMessage() {}

func (x *CronJobStatus) ProtoReflect() protoreflect.Message {
	mi := &file_cronjobs_cronjobs_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CronJobStatus) GetLastRunAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastRunAt
	}
	return nil
}

func (x *CronJobStatus) GetNextRunAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_NextRunAt
	}
	return nil
}

func (x *CronJobStatus) SetLastRunAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastRunAt = v
}

func (x *CronJobStatus) SetNextRunAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_NextRunAt = v
}

func (x *CronJobStatus) HasLastRunAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastRunAt != nil
}

func (x *CronJobStatus) HasNextRunAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_NextRunAt != nil
}

func (x *CronJobStatus) ClearLastRunAt() {
	x.xxx_hidden_LastRunAt = nil
}

func (x *CronJobStatus) ClearNextRunAt() {
	x.xxx_hidden_NextRunAt = nil
}

type CronJobStatus_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	LastRunAt *timestamppb.Timestamp
	NextRunAt *timestamppb.Timestamp
}

func (b0 CronJobStatus_builder) Build() *CronJobStatus {
	m0 := &CronJobStatus{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_LastRunAt = b.LastRunAt
	x.xxx_hidden_NextRunAt = b.NextRunAt
	return m0
}

type ListOfCronJob struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Items       *[]*CronJob            `protobuf:"bytes,1,rep,name=items"`
	xxx_hidden_TotalCount  int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListOfCronJob) Reset() {
	*x = ListOfCronJob{}
	mi := &file_cronjobs_cronjobs_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOfCronJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfCronJob) ProtoMessage() {}

func (x *ListOfCronJob) ProtoReflect() protoreflect.Message {
	mi := &file_cronjobs_cronjobs_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListOfCronJob) GetItems() []*CronJob {
	if x != nil {
		if x.xxx_hidden_Items != nil {
			return *x.xxx_hidden_Items
		}
	}
	return nil
}

func (x *ListOfCronJob) GetTotalCount() int32 {
	if x != nil {
		return x.xxx_hidden_TotalCount
	}
	return 0
}

func (x *ListOfCronJob) SetItems(v []*CronJob) {
	x.xxx_hidden_Items = &v
}

func (x *ListOfCronJob) SetTotalCount(v int32) {
	x.xxx_hidden_TotalCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ListOfCronJob) HasTotalCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListOfCronJob) ClearTotalCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_TotalCount = 0
}

type ListOfCronJob_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Items      []*CronJob
	TotalCount *int32
}

func (b0 ListOfCronJob_builder) Build() *ListOfCronJob {
	m0 := &ListOfCronJob{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Items = &b.Items
	if b.TotalCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_TotalCount = *b.TotalCount
	}
	return m0
}

var File_cronjobs_cronjobs_proto protoreflect.FileDescriptor

const file_cronjobs_cronjobs_proto_rawDesc = "" +
	"\n" +
	"\x17cronjobs/cronjobs.proto\x12\x1fio.clbs.openhes.models.cronjobs\x1a\x15common/metadata.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\"\xa3\x01\n" +
	"\x14CreateCronJobRequest\x12@\n" +
	"\x04spec\x18\x01 \x01(\v2,.io.clbs.openhes.models.cronjobs.CronJobSpecR\x04spec\x12I\n" +
	"\bmetadata\x18\x02 \x01(\v2-.io.clbs.openhes.models.common.MetadataFieldsR\bmetadata\"\xde\x01\n" +
	"\aCronJob\x12@\n" +
	"\x04spec\x18\x01 \x01(\v2,.io.clbs.openhes.models.cronjobs.CronJobSpecR\x04spec\x12F\n" +
	"\x06status\x18\x02 \x01(\v2..io.clbs.openhes.models.cronjobs.CronJobStatusR\x06status\x12I\n" +
	"\bmetadata\x18\x03 \x01(\v2-.io.clbs.openhes.models.common.MetadataFieldsR\bmetadata\"\r\n" +
	"\vCronJobSpec\"\x87\x01\n" +
	"\rCronJobStatus\x12:\n" +
	"\vlast_run_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tlastRunAt\x12:\n" +
	"\vnext_run_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tnextRunAt\"p\n" +
	"\rListOfCronJob\x12>\n" +
	"\x05items\x18\x01 \x03(\v2(.io.clbs.openhes.models.cronjobs.CronJobR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCountB7Z5github.com/cybroslabs/ouro-api-shared/gen/go/cronjobsb\beditionsp\xe8\a"

var file_cronjobs_cronjobs_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_cronjobs_cronjobs_proto_goTypes = []any{
	(*CreateCronJobRequest)(nil),  // 0: io.clbs.openhes.models.cronjobs.CreateCronJobRequest
	(*CronJob)(nil),               // 1: io.clbs.openhes.models.cronjobs.CronJob
	(*CronJobSpec)(nil),           // 2: io.clbs.openhes.models.cronjobs.CronJobSpec
	(*CronJobStatus)(nil),         // 3: io.clbs.openhes.models.cronjobs.CronJobStatus
	(*ListOfCronJob)(nil),         // 4: io.clbs.openhes.models.cronjobs.ListOfCronJob
	(*common.MetadataFields)(nil), // 5: io.clbs.openhes.models.common.MetadataFields
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_cronjobs_cronjobs_proto_depIdxs = []int32{
	2, // 0: io.clbs.openhes.models.cronjobs.CreateCronJobRequest.spec:type_name -> io.clbs.openhes.models.cronjobs.CronJobSpec
	5, // 1: io.clbs.openhes.models.cronjobs.CreateCronJobRequest.metadata:type_name -> io.clbs.openhes.models.common.MetadataFields
	2, // 2: io.clbs.openhes.models.cronjobs.CronJob.spec:type_name -> io.clbs.openhes.models.cronjobs.CronJobSpec
	3, // 3: io.clbs.openhes.models.cronjobs.CronJob.status:type_name -> io.clbs.openhes.models.cronjobs.CronJobStatus
	5, // 4: io.clbs.openhes.models.cronjobs.CronJob.metadata:type_name -> io.clbs.openhes.models.common.MetadataFields
	6, // 5: io.clbs.openhes.models.cronjobs.CronJobStatus.last_run_at:type_name -> google.protobuf.Timestamp
	6, // 6: io.clbs.openhes.models.cronjobs.CronJobStatus.next_run_at:type_name -> google.protobuf.Timestamp
	1, // 7: io.clbs.openhes.models.cronjobs.ListOfCronJob.items:type_name -> io.clbs.openhes.models.cronjobs.CronJob
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_cronjobs_cronjobs_proto_init() }
func file_cronjobs_cronjobs_proto_init() {
	if File_cronjobs_cronjobs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cronjobs_cronjobs_proto_rawDesc), len(file_cronjobs_cronjobs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cronjobs_cronjobs_proto_goTypes,
		DependencyIndexes: file_cronjobs_cronjobs_proto_depIdxs,
		MessageInfos:      file_cronjobs_cronjobs_proto_msgTypes,
	}.Build()
	File_cronjobs_cronjobs_proto = out.File
	file_cronjobs_cronjobs_proto_goTypes = nil
	file_cronjobs_cronjobs_proto_depIdxs = nil
}
