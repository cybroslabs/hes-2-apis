// Code generated by protoc-gen-graphql-schema, DO NOT EDIT.

type PublicCreateBulkRequest {
	id: String!
	correlationId: String!
	driverType: String!
	devices: ListOfJobDeviceId!
	customDevices: ListOfJobDevice!
	settings: JobSettings!
	actions: [JobAction]!
	webhookUrl: String!
}

type ListOfJobDeviceId {
	list: [JobDeviceId]!
}

type ListOfJobDevice {
	list: [JobDevice]!
}

type JobDeviceId {
	id: String!
	deviceId: String!
}



// =================================================================================
// =================================================================================
// =================================================================================
// =================================================================================


package pbapi

import (
	"github.com/graphql-go/graphql"
	pbtaskmastermodels "github.com/cybroslabs/hes-2-apis/protobuf/pbtaskmastermodels"

	pbdrivermodels "github.com/cybroslabs/hes-2-apis/protobuf/pbdrivermodels"

)

var (
	gql__type_PublicCreateBulkRequest *graphql.Object // message PublicCreateBulkRequest in pbapi.proto
	gql__type_ListOfJobDeviceId *graphql.Object // message ListOfJobDeviceId in pbapi.proto
	gql__type_ListOfJobDevice *graphql.Object // message ListOfJobDevice in pbapi.proto
	gql__type_JobDeviceId *graphql.Object // message JobDeviceId in pbapi.proto
	gql__input_PublicCreateBulkRequest *graphql.InputObject // message PublicCreateBulkRequest in pbapi.proto
	gql__input_ListOfJobDeviceId *graphql.InputObject // message ListOfJobDeviceId in pbapi.proto
	gql__input_ListOfJobDevice *graphql.InputObject // message ListOfJobDevice in pbapi.proto
	gql__input_JobDeviceId *graphql.InputObject // message JobDeviceId in pbapi.proto
)





func Gql__type_PublicCreateBulkRequest() *graphql.Object {
	if gql__type_PublicCreateBulkRequest == nil {
		gql__type_PublicCreateBulkRequest =  graphql.NewObject(graphql.ObjectConfig{
			Name: "Pbapi_Type_PublicCreateBulkRequest",
			Fields: graphql.Fields {
				"id": &graphql.Field{
					Type: graphql.NewNonNull(graphql.String),
					Description: `@gqltype: UUID`,
				},
				"correlationId": &graphql.Field{
					Type: graphql.NewNonNull(graphql.String),
				},
				"driverType": &graphql.Field{
					Type: graphql.NewNonNull(graphql.String),
				},
				"devices": &graphql.Field{
					Type: graphql.NewNonNull(Gql__type_ListOfJobDeviceId()),
				},
				"customDevices": &graphql.Field{
					Type: graphql.NewNonNull(Gql__type_ListOfJobDevice()),
				},
				"settings": &graphql.Field{
					Type: graphql.NewNonNull(pbdrivermodels.Gql__type_JobSettings()),
				},
				"actions": &graphql.Field{
					Type: graphql.NewNonNull(graphql.NewList(graphql.NewNonNull(pbdrivermodels.Gql__type_JobAction()))),
				},
				"webhookUrl": &graphql.Field{
					Type: graphql.NewNonNull(graphql.String),
				},
			},
		})
	}
	return gql__type_PublicCreateBulkRequest
}

func Gql__type_ListOfJobDeviceId() *graphql.Object {
	if gql__type_ListOfJobDeviceId == nil {
		gql__type_ListOfJobDeviceId =  graphql.NewObject(graphql.ObjectConfig{
			Name: "Pbapi_Type_ListOfJobDeviceId",
			Fields: graphql.Fields {
				"list": &graphql.Field{
					Type: graphql.NewNonNull(graphql.NewList(graphql.NewNonNull(Gql__type_JobDeviceId()))),
				},
			},
		})
	}
	return gql__type_ListOfJobDeviceId
}

func Gql__type_ListOfJobDevice() *graphql.Object {
	if gql__type_ListOfJobDevice == nil {
		gql__type_ListOfJobDevice =  graphql.NewObject(graphql.ObjectConfig{
			Name: "Pbapi_Type_ListOfJobDevice",
			Fields: graphql.Fields {
				"list": &graphql.Field{
					Type: graphql.NewNonNull(graphql.NewList(graphql.NewNonNull(pbtaskmastermodels.Gql__type_JobDevice()))),
				},
			},
		})
	}
	return gql__type_ListOfJobDevice
}

func Gql__type_JobDeviceId() *graphql.Object {
	if gql__type_JobDeviceId == nil {
		gql__type_JobDeviceId =  graphql.NewObject(graphql.ObjectConfig{
			Name: "Pbapi_Type_JobDeviceId",
			Fields: graphql.Fields {
				"id": &graphql.Field{
					Type: graphql.NewNonNull(graphql.String),
				},
				"deviceId": &graphql.Field{
					Type: graphql.NewNonNull(graphql.String),
				},
			},
		})
	}
	return gql__type_JobDeviceId
}



func Gql__input_PublicCreateBulkRequest() *graphql.InputObject {
	if gql__input_PublicCreateBulkRequest == nil {
		gql__input_PublicCreateBulkRequest =  graphql.NewInputObject(graphql.InputObjectConfig{
			Name: "Pbapi_Input_PublicCreateBulkRequest",
			Fields: graphql.InputObjectConfigFieldMap{
				"id": &graphql.InputObjectFieldConfig{
					Description: `@gqltype: UUID`,
					Type: graphql.NewNonNull(graphql.String),
				},
				"correlationId": &graphql.InputObjectFieldConfig{
					Type: graphql.NewNonNull(graphql.String),
				},
				"driverType": &graphql.InputObjectFieldConfig{
					Type: graphql.NewNonNull(graphql.String),
				},
				"devices": &graphql.InputObjectFieldConfig{
					Type: graphql.NewNonNull(Gql__input_ListOfJobDeviceId()),
				},
				"customDevices": &graphql.InputObjectFieldConfig{
					Type: graphql.NewNonNull(Gql__input_ListOfJobDevice()),
				},
				"settings": &graphql.InputObjectFieldConfig{
					Type: graphql.NewNonNull(pbdrivermodels.Gql__input_JobSettings()),
				},
				"actions": &graphql.InputObjectFieldConfig{
					Type: graphql.NewNonNull(graphql.NewList(graphql.NewNonNull(pbdrivermodels.Gql__input_JobAction()))),
				},
				"webhookUrl": &graphql.InputObjectFieldConfig{
					Type: graphql.NewNonNull(graphql.String),
				},
			},
		})
	}
	return gql__input_PublicCreateBulkRequest
}

func Gql__input_ListOfJobDeviceId() *graphql.InputObject {
	if gql__input_ListOfJobDeviceId == nil {
		gql__input_ListOfJobDeviceId =  graphql.NewInputObject(graphql.InputObjectConfig{
			Name: "Pbapi_Input_ListOfJobDeviceId",
			Fields: graphql.InputObjectConfigFieldMap{
				"list": &graphql.InputObjectFieldConfig{
					Type: graphql.NewNonNull(graphql.NewList(graphql.NewNonNull(Gql__input_JobDeviceId()))),
				},
			},
		})
	}
	return gql__input_ListOfJobDeviceId
}

func Gql__input_ListOfJobDevice() *graphql.InputObject {
	if gql__input_ListOfJobDevice == nil {
		gql__input_ListOfJobDevice =  graphql.NewInputObject(graphql.InputObjectConfig{
			Name: "Pbapi_Input_ListOfJobDevice",
			Fields: graphql.InputObjectConfigFieldMap{
				"list": &graphql.InputObjectFieldConfig{
					Type: graphql.NewNonNull(graphql.NewList(graphql.NewNonNull(pbtaskmastermodels.Gql__input_JobDevice()))),
				},
			},
		})
	}
	return gql__input_ListOfJobDevice
}

func Gql__input_JobDeviceId() *graphql.InputObject {
	if gql__input_JobDeviceId == nil {
		gql__input_JobDeviceId =  graphql.NewInputObject(graphql.InputObjectConfig{
			Name: "Pbapi_Input_JobDeviceId",
			Fields: graphql.InputObjectConfigFieldMap{
				"id": &graphql.InputObjectFieldConfig{
					Type: graphql.NewNonNull(graphql.String),
				},
				"deviceId": &graphql.InputObjectFieldConfig{
					Type: graphql.NewNonNull(graphql.String),
				},
			},
		})
	}
	return gql__input_JobDeviceId
}




