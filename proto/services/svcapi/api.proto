// Editions version of proto3 file
edition = "2023";
package io.clbs.openhes.services.svcapi;

option go_package = "github.com/cybroslabs/hes-2-apis/gen/go/services/svcapi";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "common/fields.proto";
import "common/types.proto";
import "acquisition/main.proto";
import "acquisition/shared.proto";
import "system/main.proto";

// The Dataproxy related service definition.
service ApiService {
    // @group: Bulks
    // @tag: acquisition
    // @tag: action
    // Starts a new bulk of jobs.
    rpc CreateBulk(io.clbs.openhes.models.acquisition.CreateBulkRequest) returns (google.protobuf.StringValue);
    // @group: Bulks
    // Retrieves the list of bulks.
    rpc ListBulks(io.clbs.openhes.models.common.ListSelector) returns (io.clbs.openhes.models.acquisition.ListOfBulk);
    // @group: Bulks
    // Retrieves the bulk info and status.
    rpc GetBulk(google.protobuf.StringValue) returns (io.clbs.openhes.models.acquisition.Bulk);
    // @group: Bulks
    // Cancels the bulk of jobs.
    rpc CancelBulk(google.protobuf.StringValue) returns (google.protobuf.Empty);

    // // @group: Bulks
    // // Retrieves the job status.
    // rpc GetBulkJob(google.protobuf.StringValue) returns (io.clbs.openhes.models.acquisition.BulkJob);
    // // @group: Bulks
    // // Cancels the job(s) identified by the job identifier(s).
    // rpc CancelJobs(io.clbs.openhes.models.common.ListOfId) returns (google.protobuf.Empty);

    // @group: Driver Info
    // Retrieves the list of drivers.
    rpc ListDrivers(io.clbs.openhes.models.common.ListSelector) returns (io.clbs.openhes.models.acquisition.ListOfDriver);
    // @group: Driver Info
    // Retrieves the driver.
    rpc GetDriver(google.protobuf.StringValue) returns (io.clbs.openhes.models.acquisition.Driver);

    // @group: Devices
    // @tag: communicationunit
    // The method called by the RestAPI to register a new communication unit. The parameter contains the communication unit specification.
    rpc CreateCommunicationUnit(io.clbs.openhes.models.acquisition.CreateCommunicationUnitRequest) returns (google.protobuf.StringValue);
    // @group: Devices
    // @tag: communicationunit
    // The method called by the RestAPI to get the information about the communication unit. The parameter contains the search criteria.
    rpc ListCommunicationUnits(io.clbs.openhes.models.common.ListSelector) returns (io.clbs.openhes.models.acquisition.ListOfCommunicationUnit);
    // @group: Devices
    // @tag: communicationunit
    // The method called by the RestAPI to get the information about the communication unit. The parameter contains the search criteria.
    rpc GetCommunicationUnit(google.protobuf.StringValue) returns (io.clbs.openhes.models.acquisition.CommunicationUnit);

    // @group: Devices
    // @tag: communicationunitbus
    rpc CreateCommunicationUnitBus(io.clbs.openhes.models.acquisition.CreateCommunicationUnitBusRequest) returns (google.protobuf.StringValue);
    // @group: Devices
    // @tag: communicationunitbus
    rpc ListCommunicationUnitBuses(io.clbs.openhes.models.common.ListSelector) returns (io.clbs.openhes.models.acquisition.ListOfCommunicationUnitBus);
    // @group: Devices
    // @tag: communicationunitbus
    rpc AddCommunicationUnitsToBus(io.clbs.openhes.models.acquisition.AddCommunicationUnitsToBusRequest) returns (google.protobuf.Empty);
    // @group: Devices
    // @tag: communicationunitbus
    rpc RemoveCommunicationUnitsFromBus(io.clbs.openhes.models.acquisition.RemoveCommunicationUnitsFromBusRequest) returns (google.protobuf.Empty);

    // @group: Devices
    // @tag: device
    // The method called by the RestAPI to register a new device. The parameter contains the device specification.
    rpc CreateDevice(io.clbs.openhes.models.acquisition.CreateDeviceRequest) returns (google.protobuf.StringValue);
    // @group: Devices
    // @tag: device
    // The method called by the RestAPI to get the information about the device. The parameter contains the search criteria.
    rpc ListDevices(io.clbs.openhes.models.common.ListSelector) returns (io.clbs.openhes.models.acquisition.ListOfDevice);
    // @group: Devices
    // @tag: device
    // The method called by the RestAPI to get the information about the device. The parameter contains the search criteria.
    rpc GetDevice(google.protobuf.StringValue) returns (io.clbs.openhes.models.acquisition.Device);
    // @group: Devices
    // @tag: device
    // The method called by the RestAPI to replace ordered set of linked communication units.
    rpc SetDeviceCommunicationUnits(io.clbs.openhes.models.acquisition.SetDeviceCommunicationUnitsRequest) returns (google.protobuf.Empty);
    // @group: Devices
    // @tag: device
    // The method called by the RestAPI to get communication units definitions linked to the device(s).
    rpc GetDeviceCommunicationUnits(google.protobuf.StringValue) returns (io.clbs.openhes.models.acquisition.ListOfDeviceCommunicationUnit);

    // @group: Devices
    // @tag: devicegroup
    // The method called by the RestAPI to create a new device group. The parameter contains the device group specification.
    rpc CreateDeviceGroup(io.clbs.openhes.models.acquisition.CreateDeviceGroupRequest) returns (google.protobuf.StringValue);
    // @group: Devices
    // @tag: devicegroup
    // The method returns a list of device groups.
    rpc ListDeviceGroups(io.clbs.openhes.models.common.ListSelector) returns (io.clbs.openhes.models.acquisition.ListOfDeviceGroup);
    // @group: Devices
    // @tag: devicegroup
    // The method returns single device group.
    // @param The device group identifier.
    // @return The device group specification.
    rpc GetDeviceGroup(google.protobuf.StringValue) returns (io.clbs.openhes.models.acquisition.DeviceGroup);
    // @group: Devices
    // @tag: devicegroup
    // The method called by the RestAPI to add a new device to the device group. The parameter contains the device group specification.
    rpc AddDevicesToGroup(io.clbs.openhes.models.acquisition.AddDevicesToGroupRequest) returns (google.protobuf.Empty);
    // @group: Devices
    // @tag: devicegroup
    // The method called by the RestAPI to remove a device from the device group. The parameter contains the device group specification.
    rpc RemoveDevicesFromGroup(io.clbs.openhes.models.acquisition.RemoveDevicesFromGroupRequest) returns (google.protobuf.Empty);

    // @group: Devices
    // @tag: modempool
    // The method to get list of the modem pools.
    rpc ListModemPools(io.clbs.openhes.models.common.ListSelector) returns (io.clbs.openhes.models.acquisition.ListOfModemPool);
    // @group: Devices
    // @tag: modempool
    // The method to get the information about the modem pool. The method returns the modem pool information.
    rpc GetModemPool(google.protobuf.StringValue) returns (io.clbs.openhes.models.acquisition.ModemPool);
    // @group: Devices
    // @tag: modempool
    // The method to create a new modem pool.
    rpc CreateModemPool(io.clbs.openhes.models.acquisition.SetModemPoolRequest) returns (google.protobuf.StringValue);
    // @group: Devices
    // @tag: modempool
    // The method to update the modem pool.
    rpc UpdateModemPool(io.clbs.openhes.models.acquisition.SetModemPoolRequest) returns (google.protobuf.Empty);
    // @group: Devices
    // @tag: modempool
    // The method to delete the modem pool.
    rpc DeleteModemPool(google.protobuf.StringValue) returns (google.protobuf.Empty);
    // @group: Devices
    // @tag: modem
    // The method to create a new modem within the pool.
    rpc CreateModem(io.clbs.openhes.models.acquisition.SetModemRequest) returns (google.protobuf.StringValue);
    // @group: Devices
    // @tag: modem
    // The method to update the modem within the pool.
    rpc UpdateModem(io.clbs.openhes.models.acquisition.SetModemRequest) returns (google.protobuf.Empty);
    // @group: Devices
    // @tag: modem
    // The method to delete the modem.
    rpc DeleteModem(google.protobuf.StringValue) returns (google.protobuf.Empty);

    // @group: Configuration
    // The method to get the system configuration.
    rpc GetConfig(google.protobuf.Empty) returns (io.clbs.openhes.models.system.SystemConfig);
    // @group: Configuration
    // The method to set the system configuration.
    rpc SetConfig(io.clbs.openhes.models.system.SystemConfig) returns (google.protobuf.Empty);
}
